WISHLIST: Transparency
WISHLIST: tooltip hover: show monster name, and data. (info) 
WISHLIST: atmosphere particles (like LOZ and Mario) 
WISHLIST: smoke particles when dropping objs in theworld (like mario)
			2 at ocne: Clouds + Bokeh

TODO: make derekpage.net swillart.net.
TODO: 12/26 fix the async loader.  There is an error somewhere where globs are being modified while generating.
TODO: merge FrameSync + FpsMeter
X TODO: 2/3/18 pack entire UI into a rect.  Easy. http://blackpawn.com/texts/lightmaps/default.html 2/21 - success
TODO: 2/5/18 Make logger+console async.  Make writing to console async, and start console process async.
X TODO: 2/7/18 update the FontSpec to use STB packer API instead of the Bake API
X TODO: 2/8/18 Remove deferred/forward render targets, make them refer to a shared_ptr Texture2DSpec so thatdeletion of the texture is natural when it gets unreferenced.  Make the creation of all render target textures be independentof their framebuffers so that we can share them across multiple render stages.
TODO: 2/8/18 DepthOfField is hacky, and inline, we can fix it by creating a proper FrameBuffer object and saving most of its state.
TODO: 2/9/18 Change _ufTexture0 to _ufTexColor and _ufTexture1 to _ufTexNormal  - texture channels are raelly purposed for specific operations
TODO: 2/12 - Optimization to GUI updates would be to stop update propogation on Position: Relative elements.  Like windows.  They break the update chain. I mean at least we can do this for windows. (root parents)
X TODO: 2/14 RenderSettings -> RenderDebugSettings, and DeferredParams ->RenderSettings
X TODO: 2/14 **BIG ONE: if a UiElement is outside of it's clip boundary don't even draw it (send it to the gpu) currently it is.
X TODO: 2/21 - minor thing - when you click a window, bring it to the front of other windows
TODO: 2/21 - UI MegaTexture , check for updates when we try to create it.  Check all image files.  Check Fonts. Check UI.Dat
TODO: 2/21 env map for skybox!!!
X TODO: 2/21 Disable TextBoss, replace debugtext
TODO: 2/21 Fix thumbnail transparency (renderpipe)
TODO: 2/24 *Unified rendering* - bucket collect everything adn draw with drawElementsInstanced and use gl_InstanceID to index skin weights, or matrixes, model matrixes, etc, all stored in ssbos.  models share teh same SSBO buffers, uniforms, etc.
TODO: 3/1 Optimization W25GridMesh Grid optimization: Indexes + Vertexes are stored on CPU which isn't needed (except for physics..), ALSO mesh is recreated eadch step. Instad use MesSpec:::getFrags and just modify the frags there.
TODO: 3/1 Optimization W25GridMesh We don't need indexes if we use just verts - use DrawArrays on W25GridMesh

3/4/18
ui hell
i need an attitude adjustment. it's not hell. it's fun, but it's hard.
adding autosize w/h using "auto"
moved old 'noten' to devlog

thinking of ditching the display for a new system 2 consids
1 already got all this working, but it's just needs fixing
2 fixed system simple: just place shit fixed, ok?
*gut instinct: this is the right way to go*
*slight detour, but we'll be easier in the long run.
3 for borders &c just compute them in performlayout
4 remove update(), put evrything in its own performlayout
5 remove uDim
remove display and position
5 uielement simply has a for c in children() c->performlayout
3 fixed system would be faster
**then again I feel like i'm really close to just having a simple fix to fix this..No overhaul	

3/3
placement

3/2
Add increment and val() to the UiSlider
Add SSAO
Add "Disabled" display (if we disable SSAO, SSAO Samples gets greyedd)

fixing content container
UiContainer
 2 layers - background, content
we need scrolls on uidropdown
uidropdown doesn't work - fix the click*
uidropdown needs to highlight
	*use uibutton for the items.

	Make UiDropdown's container inherit UiContainer


fix imagebutton
container
remove uicontentcontainer from ui9grid
create uicontainer
	9grid border - (above images)
	9grid - images
	scrollbars
began placement	

2/29
i thinkt he only way to work with objects is to create modelnode's
	MAKE AI GENERIC - bc we need that.
	MatterMode: solid/liquid -> GridMeshLayer: Opauqe, Transparent

	Added an clue on W25Config to remove transparent + solid overlaps
	****COMMENTED OUT***
	//   fillMeshByConfig(pMesh->getVerts(), pMesh->getIndexes(), pBucket, pAtlas, pCell, eMatterMode, 
//       fBlockWidth, fBlockHeight, pConf, nullptr);


2/28
Needed: motion25 -> sprite, now it's a sprite, which is what it is
adding image proportions

Put picture on twitter - 3 likes (babe)!
moved world editing to WorldEditor..
removed drawHover

2/27
w25blocknode -> blockNode
want normals in the tileshader
so ** change tileshader to just use the main pipeline why not? - later

*Added the grid - 
So texturing is messed up in *addConfigTriangle* we actually swap the indexes so the lines appear on triangle legs,  This is a problem! messes up textures.

hover cell may not be created.

BlockInfo {
	Ray_t _ray; // Set before calling
	WorldCell* _pCell;
	vec3 _pick_n;//Normal to picked surface
	vec3 _pick_pt;//origin
}
getBlockInfo(BlockInfo& bi);

EditCellInfo inf{}
	ivec3 grid, 
	ivec3 gridcell(relative)
	W25GEOM = new geom, 0 for no change
	W25TILE = new tile, 0 for no change
}
world25->editCell(EditCellInfo inf);
	getGrid
	if( grid = null )
		worldMaker->makeGrid(grid)
			        pg = std::make_shared<WorldGrid>(_pWorld25, v, false);
					pg->initSync();
					pg->expand();

					pg->createAllCells(nullptr, World25GridGen::e::GenAndSave, wg);

					saveGrid(pg, ***FALSE*** );  set to false to prevent consolidate() from running



worldmaker makeNewWorld
WipGrid* wg = new WipGrid(v, this->_pCurrentLair, 0);


getRayBlock(Ray_t* pr, WorldCell*& out_hit, vec3& out_n, vec3& out_pt)


2/26
moved DOF code to make faster
slider
disabled padding
"grow" issue is 2fold
*content container calculation taking padding
*also padding generally.
**DISABLED THE FOLLOWING
	 ele->computepad(pt, pr, pb, pl);
	 effR += ele->padLeft().px() + ele->padRight().px();

2/25
dropdown - issue is we're skipping layout with the w/h optimization
we probably don't need the w/h optimization..we did
got rid of mesh color in favor of _ufDiffuse color exported from blender
this will be so we can render "gems" and other things with a solid TP color

i feel like we can put transparency in the gen. pipeline by sorting all meshes doing a back/front render for transparent meshes and messing with
the normals.
	draw back to front
	for normals - modify normals based on IOR
	for color - simple blend color with texture and apply filter (either diffuse color, or texture)
	positions - same
	plane - same
	mirror &c - same
	add an alpha (bend) MRT - in d_lighting we bend stuff based on this MRT
	also add bloom at the same time. Alpha + Bloom
	vec3 * bent normal.
	RGBA32 texture
	rgb - alpha XYZ normal and normal length.  normal length = amount of alpha.  normal dir = IOR in the color buffer
	a - bloom value = 
	remove separate alpha collection step.
	also add bloom post process



2/24
dropdown
2/23
fixed font disappear bug - due to passing invalid chars (like newline) to stb_truetype
fixed texture filtering "gaps" due to some invalid uv's
fixed that silly screen 'line' glitch it was due to setting the ortho to w-1 and h-1. it should be w, h.  that caused texture smapleing problems.

for some reason everything renders with chrome. 8 fixed

going to put glass in - 
made glass shader
changed render pipe to collect transparent stuff separate
*problem* I want to sue the deferred step AGAIN with the forward render inside it to render fresnel.


2/22 
moved game ui to gameui
removed textboss.  I mean, I have a superstistion that's why STB is messing up
added "padding" this is going to be an awesome addition for the UI

todo
	fix uilabel slowness when updating text
	add the _pad.. in the computeStaticElement
	fix the stb problem with FontHMetrics

Added UI Padding * this is a relief	
so the problem was that STB needs to keep the loaded fontInfo in memorry..i didn't know that..that's probably why we were crashing with textboss.
Text looks pretty good.
researched fresnel & glass shaders.  this is an effect.

I'm sort of not knowing what to do next.  the outline abofe is what it is.. but i'm nto sure dropping is the MOST importatnt thing right now.


2/21
bringtofront
fixed some mouse input issues.
fixed sluggish scrollbars
*issu7e - some texture tileing issues in fullscreen mode.
Moved obfile loading to BottleRoom
*Now ObFile is the first thing to happen.
Next: run the MOBS in obfile through render system.
Cache their images.
	In fact we should do this on the MOB conversion..
	Store MOB THUMB within the MBI

removing "global viewport"
renderPipe gets a camera passed in
if camera's viewport is differnt size, call RenderPipe::init
Thumbs work..sort of..transperency issues.. later


2/20
so 
1. quad buffer
2. text + fonts
***added _bLayoutchanged == false to TOP OF layoutChanged
Fonts
	UiFont
*Skin step
	pFont = UiFont::create("Font-Name")
		call Mtex->addFont("font-Name") ** The image name is actually the name of the font.	
Mtex->loadImages()
	if _eType == Font
		TODO: do all this
*UI
Mtex->compile()

*Skin LabelSkin * dumb
UiLabelSpec - Keep, but set TextHeight to have an "auto" so we can auto scale it\
	XXX Remove UiLabelSkin - replace with UiFont
Add UiFont to UiLabelSkin
UiFont does all heavy lifting.

*We can replace the name itself.

UiLabel->regenMesh()
	v_GuiVert v;
	for (c : text) 
		gi = _pFont->getGlyphInfo
		v._rect = pos + gi.v0

*****************************************************************************************************************************
**NO UI FONT**
**FONT IS MtFont**
button->_pLabelSkin = UiLabelSkin::create(strFont = "Arial", "auto") //auto height
						 std::shared_ptr<MtFont> ft = Gu::getContext()->getGui()->getTex()->addFont(strFont)
						 _pFont = ft *reference to font
*****************************************************************************************************************************

Another 3AMer - Great Works.





2/19
Okay got  the megatex to show.
So* we're going to do shader, and skip labels for noew
We're going to put a new version of fonts for lables and use
UiFont
We won't need depth buffering if we do it this way.  We create the quad buffer in order.
*this way we won't have a separate render for labels, just pack it all in one texture.

drawing
	basically, VBO copy.  Each ui quad has a position in the vbo (font glpyhs too)
clipping
	add a vec4 to each vertex for the clip rect (rather than the uniform we had before)
texture repeating + picking + color 
	add a uvec4 for texw, texh, pick
	remove the vec4 color and use the last int in the last of the vec4 for the color (0-255)

//we can even save some space by making texsiz the first + last 16 bits
guivert{
vec4 _rect i01 a01
vec4 _clip i01 a01
vec4 _tex i01 a01
uvec4 _texsiz w/h, Pick, (unused, possibly color in the future)
}

Send it to the Geom shader to get processed.

**NOTE: Draw with GL_POINTS!****

**We don't need texsiz



2/18
Kolache
Checkboxes
Minor "config" window.
Pick Roots - fixes isue where checkboxes and some button borders can't be clicked.

2/17
separated UI code into base, Skin, controls
started MegaTex - to fix teh rendering lag
making checkbox
..skin needed, making skins
changed texs from 32 to 64 (vault) verions. Looks good!

**store clip recrtangles in a uniform buffer.
**tex modulation - store width, height in a uniform uffer.
UiTex {
	float w, float h.
	vec2, clip0, clip1;
}
layout(std430) Texs { g_texs }
uniform uint32_t _ufNumTexs;
**Fuck i mean who needs a mesh, we could even assemble these in the Geom shader..

*UIToolbar inherits ui window.  so their skins would have to inherit.

#1 complete: basic skin classes on UI elements.  UiTex in place.
#2 - Load skin file.
#2.1 - Have a button to REPARSE entire file
#2.2 - Use a UI Checkbox for this. - UI Checkbox



2/16
Made render loop more generic allowing for single items to be rendered
Removed && from Renderparams
Asset Thumbs
Gui scroll is still slow in release mode..
Sadness :(
Also there is an issue with the terrain rendering, it seems to have to do with the
	render pipe ** and the ENV texture map** (I see a car in ther) We need to make sure
	terrain shader fits the same format s basic diffuse shaders


*Made so Labels don't recreate all ch ildren every time.  SLIGHT performance gain

Ui Compiler
	Part of the issue is RegenMesh
	We lso get somewhat of a performance hit drawing the UI.
	But Regen Mesh isn't he only problem..
	One solution would be to 
		1. pack all textures **EVEN FONTS** into single MegaTexture.
	compile all them from a ui.dat file.

Okay minimal caching achieved.
Still lags quite a bit.
1. Next stemp - Ui Compiler.
	a. Generic Skin
	b. Skin Compile + Font
2. Then since we'll be building the UI, we can build verts in a separte thread, making the UI updat not affect the framerate

CROBTex

2/15
Horizontal scroll bar
HUGE Optimizations to gui 
*added RenderVisible - this will keep elementso n the layout, but hide their render.  Useful for button states
Removed lots of skin stuff for the toolbar.
Toolbar inherit from GUiWindow
//Most stuff should inherit GuiWindow
Basic Toolbar buttons
Coin Icon.  Gear Icon.  Tree Icon
*Next to do is to get the assets to show int he objects window
*Made The 9Patch Borders allow for varied widths

2/14
Problem is UiContentcontainer
Works.
Skipping "auto size" for now.  It isn't needed.  We can just manually add padding where we want
Next task is "Gui Slider"
Also with a label that can change.

Basically the code is the same as UI Scrollbar, but horizontal.
So the idea is that we can create UIVScrollbar and make it a UITrackbar


we are just using the content container
we could just say scrollbarGen -> setBarSizeControlObject() *
	and if this is nullptr, the bar size (width) is then ZERO - for trackbar. because trackbar
	usually doesn't have a control object.

2/13
Genericized the "patch" 9-patch,a nd all that for 3-patch for scrollbars
Added UISKin class
added scrollbar
Button click function
Generalized events
Simplified window drag + size code
Scrollbar visually works, broken for scrolling.

FartBox


2/12
Buttons: 1. Pad Grid - Rows don't get auto-sized.
		 2. Label text, text raster.
min w/h is based on 
	
	Computing Min Width / Height for all elements WITHOUT computing parent elements
	1. position: static + width/height IS set in pixels.
	2. position: relative - left, top, bottom, right
	3. minWidth or mINHeight is set. **Pixels ONLY**

	problem: minWIdth/min-height is %
	anything of % is a problem because we don't have parent.

	problem: % left/top with Width + Height set?  We can't compute unless we've computed the parent.
	I guess we ignore them.  Or course you will end up with elements outside the container.
	% fucks up logic quite a bit.

	*Min-with doesn't apply to autos.  This simplifies us a lot.  Because to do that or autos would e a lot of code
	* Just min-width is allowed for 
			`1. Relative, or 
			2. Static with WIdth = px.

			if an auto gets a computed min width we WOULD need to accout for it in the autos layout
	The way to fix this is left/top is never a percentage.

	We need to rethink this,.  In order to get stuff to grow we need to compute the widths of all static elements. (glyphs, images)
		1. bucket sort
		2 static elements. ( computePositionalElement)
		3 recur static elements
		5 min/max widths from statics
		6 autos
		7 recur autos
	maybe we should jsut say "fuck it" and just grow the button hard code
2/9
See TODO for 2/9
SO, CopySubImage has a memory error somewhere,  it's probably what's been causing all the hodgepodge.

2/8
issues with visual studio
	weird cursor - disappeared and a rebuild fixed it
	furthe there've been app/memory issues that seem to be due to visual studio runtime.
	I don't know.

So the next step is
	1. Get the ui TExt to show properly (flip the x or y)
	2. Add char spacing to the ui text.
		a float variable % width of font size.
	3. Parse 9Patch
	4. Toolbar.
	5. Window Border Texture Tiling 

Taking a break from the UI
	Adding DOF and Bloom
	We might need an extra target when leaving the deferred light step.
	The Gaussian 2-pass is fairly straightforward.
	Bloom seems to operate on its own buffer.
	I mean technically a bloom would blend.

	have a second buffer leaving the deferred shader which stores
		vec2(bloom intensity, Dof Blur)

	*So in order to do this step we hve to process Gui on the forward step
	*which means we'll have to move the pick bufer to the forward step as well.

	*So we need to share the PICK target with forward/deferred
	*I imagine we'l need to do this later

	*SO Framebuffer consolidation
		*Have just one framebuffer class
		*Have multiple targets.
		*Have a 'bind' before rendering.
	*remove the Forward/Deferred distinction in code, but still have the
	2-step process
	

2/7
Cursor.
Fixed UI for window.  Yah.
Move window around.
Picking Fixes.

todo: Border Image Docking, scaling
	use loaded image size for each image
	cells - 
		find max w/h of all border images.
		set all cells to be the max w/h (or auto)
	image docking - easy
		docked images are positional (relative).
		no layout
		make it generic?
todo: Border Texture Tiling 

labels
so, i think we need to render invididual glpys as uielements
	reason is that we need to auto scale all quads.
	think more on thiss


2/6
More UI Fun
UI is somewhat responsive
I got this because of putting each element in a row.
then the division between static, and relative positions, and treating them separate.
the idea versus computed position, and fixed position - same thing as above.
fleshing ou thte algorithm: so it goes in 3 steps
fixed elements - we just plop them on there
statics - place them sequentially
autos - run the same statics computing autos with remaining space

xtodo; lots of fixes to the layout code.
x todo: put a cursor in there
x todo: and move the window around.
todo: texture repeating for window border.
todo: corect image scaling for window border corners
UIButton

2/5
oh hell.  HCD day.  Finally made a dent in the UI.

2/4
uDim can't use percents becauwse it requires us to know the size of the parent box!

2/2
gui
todo: fix 9-grid updatelayout
moving gui to deferred.  Why?  because so we can use the pick buffer to pick elemetns.

***** convertStbQuadToScreenQuad **** CHANGED GuiQuad2d to ref parameter

2/1
the first thing is to fix teh world editor and picker.
fixed flat shading
also fixed env mapping by simply tiling the texture..

1/31
cube map shininess
a few rendering tweaks
removing spec color &c from the light.
putting it back on the amterial.
adding mirror
**gotta friggin remember to modify serialize deserialize when we add mob filedata.
removing ambient color and setting it on the render params.
made mateiral binding more "global"  
	sometimes we need to just bind texrtures

So we need to actually split triangles in the blender exporter because of face normals.
	easy since we just need to iterate over polygons where right now wer're iterating meshd ata.
	easy
Tomorrow we do face normals.

**
Learned 2 things today
	1) specular light is added, it's not blended ith diffuse
	2) the reflect() function takes a vector not in frag space
1/29
fixed normals again, the problem was a bug int he blender expolrter
added "findnode" thuing to easily find nodees in physicsworld AND basenode
shit f2 + shift f3 - debug lights
*dir shadows
*figure out why bush model is not scaling

1/28
tried to maek deferred shadows but failed
transforms are also screwed up - shadow box 60 60 60??? set to 10 10 10??
ok so we need to transform v into light space to light the dir light.
bvhvisibleset -> renderbucket
got animation tow ork in the diffuse shader
note some junk happens passing an SSBO into a function call.. so 
so release: gained about 10 frames from all this  Debug gained 3 or so frames.


1/27
BUSH - scale not being propogated.
World is still slow.. Yadda Yadda yada
todo; skin in d_v3n3x2_diffuse..



1/26
skin dispatch slow.  Gives us reason to do our 'actual skin' step.
	use just 1 mesh for all model nodes.
	disaptch the mesh in the draw call.
added a performance query thing to the console. Shift + F1
*Game is too slow  can't even debug.  We need some optimization.
*mesh system simplifciation
	moving VAO draws to MeshSpec (instead of MeshNode)

TODO:To match blender, we rename all *Spec to *Data because they're all data blocks.
All mesh data will now need to be explicitly given to every mesh node.

So	
	you can only draw mesh nodes
	to create a new mesh node you need a spec.
	you can do this inline in the constructor.

	*Removing FragmentBufferData.

So 
	shared_ptr is about 1.5 x slower than a raw pointer for copying, allocating, and soforth.
	unique_ptr is JUST about as fast as a normal pointer.
	so we're doing this in 2 steps
		1 replace ALL with shared_ptr
		2 replace unique_ptr where mission critical stuff happens.
*we now need to use init() for most ctors() because we don't have this ptr
*made a host of create() functions to hide ->init() everywhere

***Getting node parenting issues proably due to changes to TreeNode
So we're fixing all this stuff
1. shadow frustums (don't work yet)
2. Game is too slow, animation is problem.
3. need singular meshspec data for that
4. changing skin to be in a ns ingle shader.
4. change *spec to *data blocks
5. replaced most pointers with shared_ptr.



1/25
Directional shadows
	we need these,a ctually we need them over cube shadows... most of oru game is outside..
Removing enable/disable from lights
silly frustum error.  everthing is backwards..
**Added a Render Bucket to sort 1) visible, 2) renderable things 3) that need to be processed in order (such as light boxes).
	we've aded these in the past.
	the difference this time is that it's just for lights.
Enhanced mobmaker with poll function.  Some args n stuffs
1/23
the vertex array buffer isn't set.
The Projection matrxi is wrong. **

1/22
porting cube shadows from bro
added new grid sweep + bvh collection routine
CubeSide -> BoxSide
commented out the shadowboxsamples in d_v3x2_lighting
	error for some reason.  we have to inspect how we did it before to see why it's failing.s
	Added SHIFT + NUM0 to disable runtime error checking, ut it really doesn't speed up much.
	NUM0 - center light on camera
	light defaults to a fixed position.

1/21
vertex normals messed up
Creating a menu buttons to show hide vertex normals
WITH TEXT ON IT
Hopefully segue into other menu options.
1 create menu button
2 show/hide vertex normals
3 create vertex normals shader.
	ModelNode::drawforward
		for all objs in scene
			DrawOptions
				Bone bound Boxes
				Vertex Normals.

**Later...
**Shader Compiler idea**
	C# program
		Calls this app with flags /x.
		Runs in background checking for shader. Changes 

added visible normals. (draw normals) with a GS shader.0.
sort of fixed shading

1/20
fixed it.  it was because we were multiplyhing MESH * ARM * BONE,  we need MESH * BONE * ARM
the issue is the way blender works.  blenddr treats bones special.  bones are part of the scen garph.	

1/19
More Boxes
The problem witht he mesh trnaslation and all that is the Mesh WORLD matrix. it's translatign
it unnecessarily.

*the issue was that we had 2 world matrxies coming down.  Root bone was attached to the Model
so that the transform of the whole scene ended up coming to the mesh node twice.  Once because
it was multiplied by each joint (since attached to model, we get the model matrix) then for the
armature, to the mesh (because meshes are attached to arms, arms attache to models).

*slight dilemma
	without the 'full tree' approach the boxes don't update correctly.  we need the bones to be part of the
	model tree so that the entire bound box updates witht he breadth of the bones.
	however, we can't duplicate matrix information on the skinned mehses.
	far as i'm concerned, it's the meshes that are special.  The bones are just part of the world rig.  meshes
	don't get their own transforms per se.  If a mesh is skinned it's going to be updated specially
	without getting the parent armature transform.
	a skinned mesh no longer gets the world transforms - because it's transformas are all bone relative!!!
	*of course then the mesh nodes won't draw..
	
1/17
copyjointstogpu replaced getLocal -> getFinal
drawBones() ->getFinal
in a box right now (*joke!)
boxes need world transform.  we're drawing them without it.
	so we need to remove it and add it hierarchically - 
	only the model node has a wold transform.
	so world transform makes no sense on other nodes.

	issue is world transform for modelnode is special, wehre it really isn't.
	1) Instad of ModelNode::darwAllMeshes() have MeshNode::draw
	2) move the final() matrix onto parent stack of objects as normal

	So we're removing the 'special model matrix' which was differetn from all of them.
	*MAYBE WE CN REMOVE THAT EXTRA SHIT IN copygoingtstogpu!!!!!

*Made drawing generic moving draw to MeshNode
*NOTE: removed matrix in copyJointsToGpu()
*Changed compileWorldMatrix from end of update()

1/16
Banana model
we need bounding boxes to work.
bounding boxes end up on *bones* not meshes we transform the boxes by the bone transforms.
	so for each bone we need to calculate which vet
saved bb's to serialize
we calc the box for all bones via their bind verts - not sure if this is right beause there is no local transform taking palce.
TODO: fix the OBB->calc to use the Bone skinning for bones, and use just palina mulf or mesehs

1/15
Fixed serializer
made changes to pick to not use it's own FBO instead, we attached a new target to the deferred step


1/14
we need tochange maps to use IDs instead of hashes - different hash functions c# to c++
changed armatures in the system to key off of ArmatureId instead of hashed name
changing ModelSpec to reference poitner data instead of the ids.. because why?
so ok we abandoned MobMaker for creating MBIs now we're using The engine to do it because I wrote it in like 20 minutes
it makes a lot moer sense because all our power is in the engine. (math, libraries, etc).  
	we will call Conga.exe /c "cuddles_01b" to convert the model into a MBI from mobmaker.


1/13
Abandoning the annoying bone parents for a day.
.MOBBIN is now .MBI
Fixing Mobmaker's MBI export
Materials are now otional for any mesh.
fixing the mbi exporter
also fixed importer, also imoprts v, vn, vt, and vnt
having to redo fucking th BufferedFile is jacked up.
	*Make sure this doesnt' mess anything else up!
okay so reorganize actions in MobMaker to favor groups for faster loading.
load group, then load all actions for group.
change object name to object ID (file local)

Decide if we need to parse vertexweights differently as MobFileVertexWeight and MbiFileVertexWeight
we do some optimization.
	so we're going to process vertex weights in MOBMaker by converting to
		GpuAnimatedMeshWeightData
	and 
		GpuAnimatedMeshWeight
	so we can just load buffers right in.


1/12
physics shapes
Physics shapes need to go on mesheSpec. because we calc shapes from meshes.  (even tho it makes more sense to put it on physicsnode)
we need to suport variable vertex formats.
added v,n and v,x and v formats
Mucking around with the exporter
added visible to models for render_visible in blender
animation issue with the imported collision meshses - they're wonk
	*perhaps it's the vertexes or shaders (beause they are missing components)
	so problem is meshspec::copyFrom is coyping the wrong format 
	fixed
Next issue is position of collision volumes
bone parenting is a problem, we have no bone parent
added bone parenting in exporter
bonses aren't exporting parent type.
changed the applyParent() in basenode to support type
TODO: fix matrixes, fix applyParent()


1/11
mob loader creates mob spec, but we need also a worldobjspec
worldnode inherits worldobj.

object types.
*Moved SDLFile.. to FileSystem
*removed default "addNull" from sddlfileread - this could impact teh whold system
*removed FileBuffer, replaced with BufferedFile (system-wide)
****Got it to compile, runs on first run*****

Next: addObj() and PhysicsGrid::collideMesh()

Collision With world
So I cn'at see boxes working we need fuckign spheres or soemthign because a box would just intersect with the world, making the object
appear arbitrarily 'floating'
*Decoupling Collision shapes from Bound Boxes
*Adding support for multiple collision shapes

*Use physics volumes in blender (easier)
Hide objects from render to not export them as meshes
https://blender.stackexchange.com/questions/58300/how-to-toggle-renderable-on-off-for-objects-in-the-3d-view
Use the physics properties of objects to export them as physics.



1/10
World25Grid -> WorldGrid
WorldCell -> WorldCell
WorldObject = WorldObj (the 3d version of our pixobj)
Part of this is also separating worldobj from other stuff
Removed basenode class from frustumbase

Physics is now Physicsworld	
	physics operates on grid to speed up collision checks.
	all gridd stuff is in physics
	houses Grids AND objects and deals with collisions
	world25 : physicsworld - allows us to have our custom physical world.
	grids contain node cells that inherit from BaseGrid and get updated and sent off etc.

**Changing Widget to Inherit from VirtualMemory and draw raster (versus being updated each frame)

calcBoundBox defaults to 1.0 radius around object.

Fixing the code..
World25CellFile -> WorldCellFile

**Dependency injection issue.  
	MobSpec -> WorldObjectSpec
	ModelSpec uses various constructor initializers that we won't get with worldobj.
	so we would have to decouple the WorldObject spec from the ModelSpec.

1/9
Added "pack" system to the game for a single exes.
Physics  the problem was we needed to add physics with some kind of bezier path
physicsnode ontology problem.
*Package Class*

1/4 
Object Saving
So, we're implementing a pseudo-physics dotsim.
Using physics for the dotsim.
Phy25 -> PhysicsNode
Smasher -> Physics
Getting rid of WorldOBj, in favor of WorldNode
Physics holds all the world's objects.
Inherit World25Grid from PhysicsNode
Created /world folder for physics, grids, etc.

1/3
Merged BaseNode with Node3Base
Moved BaseSpec to BaseHeader
BaseNode can now have a nullptr spec, in which case it doesn't know its inverse bind.

Renames
	BaseCamera ->CameraNode
	Node3Base -> BaseNode


1/2, 1/3
Created MobMaker

*2018
*2018
*2018*2018
*2018
*2018
*2018
*2018

12/28
Fixed some bpy, auto-triangulated meshes
"go to new world" now automatic in debug mode. (WorldSelect class)

animation parent object issue
the issues is we are trvaersing the tree moret han one time., per animation
the change needs to traverse the tree once, then loop all animations and apply them.

There is an issue with object actions.  The final animations are incorrect.
We are getting the WORLD matrix for the object, however the object has a parent it's getting 
concatenatd.  Thus there isn't any animation..

12/26
**There is an error in the async loader.  Somewhere the glob is getting modified while loading.
Becasue we really aren't going to use the async loader, i've removed it for now.
I plan on having the worlds be fairly small.  Mostly portal based.


12/23
DungeonMaker => WorldMaker
Moving grid loading to the WorldMaker
Created "Wip GRid" for teh wip cells.  We need this because walkers will span multiple grids.
replaced world25::createNode with WorldMaker::load().  Assuming we create nodes when the world is created (i.e. when we find that there
is no folder, we create the folder, then we create all the globs.



12/22
combine world25generator and dungeonmaker

putting everything in bitbucket, git.
changing c:/p4 to c:/git

the thing is we're going to keep the async loading, and everything else.  Except we're going to
save all the grid files at once.
commented out *genAndSaveGrid() in the grids
commented out *loadOrGenerate() in the gris

fixed textblckpixelsize - now you can get the actual size of the text blocks


12/21
trying the .x exporter
X removed local multiply in bone
swapping bind x invbind
adding arm matrix
animation works.  The issue was the arm matrix.  
In all it was 2 issues - the animator had a stupid index bug, and we weren't applying the inverse armatur matrix.
In the future, we need ot use the inverse arm matrix.
Also the bind poses are probably off - becasue we compute them by just adding translations.
made parenting a global t hing in basespec
*Added Parent Inverse - 
	Note Ctrl+Shift+P in blender does an inverse parenting.
12/20
so the parent world matrix for meshes needs to be applied before we apply the vertex weights however we can't
do that in a uniform fashion with the compute shader because the final matrix is actually multiplied in
the draw call.  so the resolution is to use the draw call to do the skin.
the issue is that if we put local transform in model::draw - then it gets applied to NON-skin meshes correctly
but not SKIN meshes - they will already have had their matrix multiplied in the dispatch step.	

It appears the way to go is to pass vertex weights in as a vec4 attribute, or multiple vec4 attributes.
Pass Matrix indexes as a ivec4
Then bind a uniform buffer of matrixes with a fixed size, like 64.
This has a greater limitation than my system.

Okay i think i know the problem.
We have to do all bones first - bound to all basis.
Then apply armature, model, etc AFTER all bones ahve animated.
Right now, we're multiplying by armature matrix on the bone - this is wrong, but we DO need to 
multiply the armature matrix, just not during the bone animation
bones animat separte

339PM judging by Simple_arm_test the vertex weights are off.

2AM vertex compression cache was turned off in obj.
added debug prints for weights in console
found the *main* problem with skin - animation compute shader had an index missing in the for loop.

Really cool idea where what if we have the hand mesh follow the armature, so that it animates in a 'warp' method.
This is something I want to do.

12/19
added/fixed mesh-local matrix transform
weight indexes are off for chartest_noa
mesh local animatinos are messed up - added a scale animation
So there isn't an intuitive way to group actions from blender.
The only thing I can think of is to make armature be the 'master' animation.
All armature actions therefore drive all mesh actions.  
	1) We could have a ActionDriver class that inherits action.  It will animate all actions at the same
	time that have the same keyframe sequence as the mesh animation. - Code
	2) export all mesh animations and link them to the same keyframe range as armature animations 
	- Export (hard code)

12/15
I feel like because there are so many modifiers and things you can do to animation, like have
noise and all that- we should just export the matrices and forget about the PRS,handles, and allthat
Althoug handles would be more "smooth" if we export keyframes at a fine granularity we can control
how much we do.

12/14
The hand gets different properties fromwhat it touches, like we had fo the characters
"hand of the dao"
Like whenever it touches a watermelon, it can take on those properties, like kirby.
With those properties it changes functionality.  Weird!

*Normals weren't getting the GL flipflop in the blender editor
*Removed the "matrix bake" from exporting the OBJ

Algorithm -> Alg class

So bezier is implemented but not working because of a few thing
1. we need to export bezier handles for all COORDINATES of each keyframe x, y, z
	these are teh fcurves in blender
	right now we're not exporting fcurves, we're exporting the 'first' keyframe we find. this is wrong.





12/13
I think now I realize the actual Animator itself is a different system
**Finally renamed MeshGeneric -> MeshNode
Creating a base clsas ActionNode to have actions + Matrices for meshnode and armaturenode and BoenNode
**Moved BoneCache to ModelCache, deleted bonecache
**Had to change action - ambiguous - created ActionGroup, ActionKeys
**Scenegraph, and generic animation across all "nodes"

1. The bone matrices are off. Looksl ike they're inverted somehow, 
2. the animation is playing "grab" and not Idle.

*I don't want to fix the matrix slerp. We're going straight to the next phase - and doing bezier, PRS exports.
*So, let's maket the whole system use PRS - even matrices will be decomposed into PRS - no morelkeframeanimationdatatype
*leaving bind poses as matrixes, in the end everything becomes a matrix.
*So now we have PRS in there, but we need to get it to animate Linearly- then we'll do fancy Bezier


12/12
bind alla ctions
fix weight mapping / chaos
224pm - finished the changes to the multiple armatures loading
**commente out the mt-test in the game.dat file, also from the world25
**set all joint mats to identity
1222am **Tomorrow - fix animator to use the FPS = 24 from mod file - also get it to animate the hand model
**Future: consider moving the compute shader animation to the vertex shader - ubos vs ssbos - 
so that we don't have to copy the model data for every model - saves space.

12/11
Made the animations 'flat'
all names are now fully qualified because of this.
TODO: Aniamtion -> Action
TODO: fix the loading of actions in the Mobfiel.cpp


12/9
added computes to ShaderBase & limits in ShaeerMaker
started static weight data
Sligth  issue wieht weight data - we allow multiple armatures per mesh.
*
Stated exporting PRS for object
*Exported actions spearately
*We must update the parser to be able to handle actions per object
*New tokenization for act_beg [obj] [actname]

12/8
messing with materials.
fixed exporting diffuse/normal maps
rename pixobj to worldobj
GOT MODELS TO RENDER
had to flip blender UVs - blender uvs are backwrads (htought so)
We need a pixobjspec - its uniform - and we're not getting rid of tiles yet.  So i'm adding mobs to the ObFile.
4PM - We are creating hand from pixobjspec
	the UI automatically rns throug specs and makes ICONS so if we want to put them in the world.
	So we have a few options - skip over it, OR
	what we can do is export the render in bpy (as 32x32 texture? - this might be good to put in place because we plan on doing
	something like this in the future.

Removed GenerateStage1 - uncommented makegrid
Fixed the 'inverted pick' bug

12/7
MOB explanation
A little explanation about MOB files - we had 3 separate data files for models so we ended up with
multiple parsers which was causing a lot of confusing code.  The reason for the 3
files was that i wanted to be able to debug OBJ files in 3rd party editors.  OBJ files usually ignore
extraneous tokens.  So the solution was to combine my other 2 files with the 1 obj file and keep the
OBJ structure in tact.  I call it a "model obj" MOBJ or MOB for short.  
It works in 3rd party editors showing OBJ contents. It also has sweet animation.

Phase I - Load (write) - Done
	mesh cash stored obj files..changeing to mesh specs..
	Blew away bone cache - bone cache now just stores armatures.

Phase II is to work on the compute shader, storage, and rendering.
Phase III - Mods
	*replace the float slider with frame rates using the farme rate in the mob file
	*replace matrixes with the PRS output - so we can do bezier interpolations
	*use the PRS to interpolate Bezier points for smooth animation - exported in each keyframe.
	*profit

So there isn't any real reason to have mesh pools so commented them out.
Stilll going with the Compute aniamtion model because it's already tested.
Also - there's no reason to copy data to the client, then back to the server except for the bound boxes.
Yet then we need bound boxes for picking so ?
Storing the meshnode on the MeshCache - why  not?
SO**there isn't a reason for mesh node either, because we already have MeshGeneric.
Added a model 'binder' cache
bits of cleanup with deleting


12.06
Note tag everything with SKINSYS
Move GpuComputeSync Over  
Moving MeshSpecHierarchy
TreeNode
Writing quick "File Processor" app.
goals
Load + Display obj first (with tex)

So the problem was that we have everything decentralized.
I'm consolidating all the files into one big file - mob file.

**Bone Cache Might Go away
**GET RID OF MODEL LOAD INFO
**RENAME ARTICULATION TO ARMATURE
creating MOBJ file - putting all stuff into OBJ file. 
Moving the Bone Cache stuff to the MOB

		Recap 12 / 6
		Mob file - everything in one place.  Move MOD file over to new PoundFile class and use to parse
		Also add the ObjectFile here.  DON"T DELTE OBJECT FILE>  For if we want to load single objects or just test in the future.
		We renamed Articulation to Armature
		Armature needs to be a separate object because it's a shared thing from meshes - however it's all
		bundled under a single 'model'.  and when we instantiate a model, we're going to instantiate an armature
		and all the meshes, and skin.
		Put skin on mesh .. bc skin is particular to the mesh
		Started to port over the old stuff.  but it's mostly not needed.  
		I'm not sure we need meshspechierarchy...  we don't have to support object parenting like Blender does.  Maybe.. I mean it's a common thing.



12.04
Working on importing hand model.
TODO: fix the keyframe scaling after loading

11.29
**Portal Update Notes**
dungeon maker can be edited in our favor - the lairs and all that would work well for us
we only have 3 lands - cave, flat, room  
Remove the awareness in world25- then we can generate a single island
World25 
	remove awareness update
	remove makeGrid()  
	remove makeDungeons()
	replace initializeWorldGrid() with the new world generator
	remove updateAwareness() 
    remove makeGrid();
    remvoe generateStage2(); 
    remove postGenerateNodes();
Add
	Fixed number of Globs, Width / Height (configuratoin parameter)
	**DLA Island** approach 
	Start with Glob Y = 0
	Run a "DLA Island" of x by z  for it across the X/Z axis
	For the top + Bottom of the island run a DLA island with a max height.
	Smooth out the result.

**Bottle World**
**Bottle World**
**Bottle World**

08.10
We need to work out the sprite loading, processing, and the editor

**Plunderlings**
**Plunderlings**
**Plunderlings**
**Plunderlings**
**Plunderlings**
**Plunderlings**

08.04
Commented out the Y axis (0-4) in makeGrid() World25.cpp

06.02
There is a memory write somewhere that si messing the cells up.
X **COMMENTED OUT CONSOLIDATE - World25Grid
**RELEASE X64 DISABLED INCREMENTAL LINKING
	Changed Optimization, Opt:Ref and Opt:C...
**put RETURN in World25Grid::udpateTopology
X **commented out makeMesh - World25Grid
X **Put a _crtCheckMemory in MAIN GAME LOOP (engine.cpp)
It's not the consolidate routine.
Something to do with the ENTIRE retopo method.
HOwever now that we modified consolidate, we have some problems with y+1 meshes...?
copydrake
*FIXED - PROBLEM was that we weren't guarding accessing neighbor grids with == Generaed
*So now.. we need to figure out why some meshes are **d
Chagned the grids to be 8x8x8 instead of 16x16x16
X ***Commented out redoNeighborConfigs
The problem was / is the consolidate routine.
**Commented it out.
We need to make the mesh routine faster because, the neighbors are causing problems.
Solution: First generate ALL of the neighbors' cells, then link
Once all 6 neighbors are generated, then make the mesh for the grid.
This will require a 2nd queue in World25.  An intermediary stage of generation.
1) Generate all cells, load, and generate the grid.
2) Wait for 6 neighbors, then Generate the mesh.
**NOTE ** Consolidate() is commented out!!!!

The 2 stage generation routine should lead us to a recursive-style awareness routine, instead of
what we currently have, we would need to generate nodes based on the given seed node, then iterate neighbors.
This would generate the player's "base" topology a lot faster.


06.01
**COMMENTED OUT GRID DELTE - WOrld25
05.31
Design

05.30
Finally got lighting to work.
Deferred + forward rendering.

05.27
Debug - d_lighting - added debug colors at end


05.26
Lots of design.  
Merging Deferred, Forward rendering.

05.25
Fixed Gui Rendering
Gui Render Speedup.
Got rid of debug sphere.
Further fixes to the 2d rendering
*Need to fix world rendering.
*Need to fix skybox.
Finally removed unprojectQuad (performance issue)


05.24
commented out ngineConfig()->getRenderPipeline() == RenderPipeline::e::Deferr - congaroom
Fixed text rendering
Text render speedup

05.18
It could be something we initialize
World meshes aren't getting constructed - why?
*Set debug mode to flat
*Critical note - changed boundbox/frustum intersect.
*Further Issue - The Texture atlas cache doesn't account for sprite x/y offsets. so some data doesn't get set


05.16
Fixed some util mesh stuff due to no buffer data copies.
More meshes are drawing.
NO TEXTURES RENDERING
Util Sphere is still probably erroring out
FontShader - set to green and alhpa to 1
*COMMENTED parts of draw2d from draw loop (congaroom)
*COMMENTED draw3d from draw() (congaroom)
*Moved roombase::step to the render loop (engine.cpp)

05.15
Removed SSBOs from shader system (GLES 3.0 support)
Support for uniform blocks.
Removed array[] from g_deferredParams
set g of f_flatshader to 1
fixed random float out of bounds issue
Still rendering issues..
Found ONE of the issues. - We were transposing the matrices before sending to shader
Why? I forgot.  So un-transposed them and some of the system is working.


05.14
Fix Shader Errors.  Deferred Params.
Fixed bug in VertexFormat for comp count (one of the formats)
There's something wrong with the Deferred and Forward framebuffers.
	Both aren't rendering any shader program primitives.

05.13
Fixed saveImage.
Fixed errors trying to load program binaries
F9 - Save Screenshot
Fixed the framebuffer issue finally.
Problem was that the vertex format had extra padding for vec4.  Removed.
Deferred has shader issues
Next task convert shader Uniforms tot he Deferred Params
	uniform float _ufHdrSampleExp;
	uniform float _ufHdrToneMapExp;
	_ufViewPos

05.10
More Chaos.
The Uniform data sizes were fat fingered - fixed.
Still a rendering issue somewhere.
Added image saving.
The FBO works if you check the debug saved image, it just doesn't get rendered to the screen.
It's the mesh, or the shader, or some combination of the 2, or the VAO.  I can't tell what's wrong.

05.09
Changed VAOS - made faster.
The old shader system was backwards.  Instead
having 1 VAO per shader instance.  
move draw() routine to shader instead of VAO
removed legacy Mesh class for MeshGeneric
VaoShader
changed ObjectFile to use MeshSpec 

05.08
MSAA, Deferred Framebuffer
GrowBuffer, Fix bugs.
Debugging Deferred.  
COMMENTED OUT RENDER LOOP CongaRoom.cpp
Some shaders will be broke
Added support for Forward and Deferred rendering via config.
More Config parameters.
Removed ctor identity from mat4 (performance)
MeshSpec

05.07
Debug new shader system.
Need to test deferred system imported test stuff.
Imported RenderUtils:: static methods
Imported UtilMesh, UtilMeshAxis.. all those
Imported MeshSpec
Imported MeshCreator
Imported MaterialSpec
Imported FragmentBufferData /Index

05.06
Light manager.  Lights
Point Light
MSAA
SSAO
Moving config to EngineConfig
moving GpuBufferGeneric over... keeping SSBOs for now. It's just faster.
Not compatible with GLES3.0?
SSBO's for vertex shader.

05.05
Continue Deferred Lighting
Ported, DiskFile, Shader Compiler, Shader Cache, Shader Manager (as ShaderMaker)
Fixed an error where we cut out while other threads are generating.
Made shaders nifty.
Debug like hell.
TODO: - finish debug the new shader replacement in CongaRoom.
Add uniforms to the shaders, and also add lights
Import the "DeferredParams" into shader.


05.04
Optimized data footprint. ~700kb full glob -> ~300kb
single cell updates!
Added world limit size config parameter
got rid of SDL2.dll linked as SDL lib.
removed "propogate" in the cells.
Fixed the cell linking problems.
added debug for the linking.
x86 and X64 build configurations
Ported Deferred Lighting from vault.


05.02/05.03
Changed BVH for nodes to be octree instead of the H/V
Made mesh one huge mesh instead of the 32 layers.
	`It's a bit slower to generate probably because std::vector just keeps increasing in size.
Removed cells per height because lal nodes needs to be cubed
redid linking.  much faster

05.01/05.02
Procedural generation
More lairs.
Refactored a lot of code, TypeConv, String
Morph Tiles
Climate
Moved Fluid and Generation to Idle Processing

04.30
Lairs.

04.28
Fixed porting issues with SDL via 32/24 bit depth buffers.
Fixed some of the OpenGL init state.  

04.24
Added bro/logger
Fixed a ton of warnings.

04.22
Created the sound system.  WORKS
Ludum dare 38

02.01
Removed SDL_mixer from dart solution

*2017
*2017
*2017
*2017
*2017
*2017

12.30
Density optimization
Started ramps.

12.29
New Menu
Mesh Layers
Show/Hide layer.

12.28
Menu col 1 
[axe - harvest]
[hammer - build] 

Menu Col 2 - hammer
[Stairs]
[Block]

Menu Col 3 - Hammer
[Top]
Menu Col 4 - Hammer
[Side]

12.23
we need to specify how objecst are saved in order to determine how to modify them.  Their state &c

12.18
Added code to move / place objects on all sides of quads.


12.17
How to mvoe up stairs using them as objects
When player moves
	If the next quad has an object
		if the object is stairs ramp
			move the player up the stairs.
	

12.16
TODO: Remove the hacks in worldgrid preventing objects being placed on top


12.13
Grass / Rocks
Some optimizations
Some FK

11.30
startd fonts

*2016 CASTLE WORLD BEGIN
*2016 CASTLE WORLD BEGIN
*2016 CASTLE WORLD BEGIN
*2016 CASTLE WORLD BEGIN
*2016 CASTLE WORLD BEGIN
*2016 CASTLE WORLD BEGIN
*2016 CASTLE WORLD BEGIN
*2016 CASTLE WORLD BEGIN
*2016 CASTLE WORLD BEGIN
*2016 CASTLE WORLD BEGIN
*2016 CASTLE WORLD BEGIN
*2016 CASTLE WORLD BEGIN
*2016 CASTLE WORLD BEGIN
*2016 CASTLE WORLD BEGIN
*2016 CASTLE WORLD BEGIN
*2016 CASTLE WORLD BEGIN
*2016 CASTLE WORLD BEGIN
*2016 CASTLE WORLD BEGIN
*2016 CASTLE WORLD BEGIN
*2016 CASTLE WORLD BEGIN
*2016 CASTLE WORLD BEGIN
*2016 CASTLE WORLD BEGIN
*2016 CASTLE WORLD BEGIN
*2016 CASTLE WORLD BEGIN
*2016 CASTLE WORLD BEGIN
*2016 CASTLE WORLD BEGIN
*2016 CASTLE WORLD BEGIN
*2016 CASTLE WORLD BEGIN
*2016 CASTLE WORLD BEGIN
*2016 CASTLE WORLD BEGIN
*2016 CASTLE WORLD BEGIN
*2016 CASTLE WORLD BEGIN
*2016 CASTLE WORLD BEGIN
*2016 CASTLE WORLD BEGIN
*2016 CASTLE WORLD BEGIN

2016 BRO/VAULT END
2016 BRO/VAULT END
2016 BRO/VAULT END
2016 BRO/VAULT END
2016 BRO/VAULT END
2016 BRO/VAULT END
2016 BRO/VAULT END
2016 BRO/VAULT END
2016 BRO/VAULT END
2016 BRO/VAULT END
2016 BRO/VAULT END
2016 BRO/VAULT END
2016 BRO/VAULT END
2016 BRO/VAULT END
2016 BRO/VAULT END
2016 BRO/VAULT END
2016 BRO/VAULT END
2016 BRO/VAULT END
2016 BRO/VAULT END
2016 BRO/VAULT END
2016 BRO/VAULT END
2016 BRO/VAULT END
2016 BRO/VAULT END
2016 BRO/VAULT END
2016 BRO/VAULT END
2016 BRO/VAULT END
2016 BRO/VAULT END
2016 BRO/VAULT END
2016 BRO/VAULT END
2016 BRO/VAULT END
2016 BRO/VAULT END
2016 END
09.04
Must map 
MISSILE_SAVE_DATA back to ACCOUNTS table.


0822
FINALLY sat down and got something
Imported ShaderBase from the C# OpenGL code.
Various other fixes and updates.


0821
nuttin

0815
Importing plane..
Need planes to use box collision to
	collect visible nodes in WorldGrid
		and call WorldGrid:: draw()
0813
Cliffs
Passing GraphicsSync into all of the GPU classes (to test async rendering)
**NOTE:

**Old
error
NetIOBuffer _num == allocsize

performance is probably due to too many threads bring created

Stopwatdch::pulse->stop is causing performance problems because it creates a string every time.

PacketMakerBase::        if(_vecOutgoingPackets[0]->getData()->getIsEmpty()) --- This is always returning true

mutex is locked because of this. ngith.

DynamicBuffer shjould be merged with streambuffeer

dynamicbuffer with streambuffer.  Giving dynamicbuffer stream properites.

then how do we write string& to the buffer?\
0726
Snags
1 - Java 8 isn't supported well by android - 
	I>E> NO LAMBDAS
2 - OpenGL ES.
3 - GENERICS in java are terrible.	
	
0724
Trying to port to android again.
Compiler is running - many errors.
ndk-build NDK_DEBUG=1 NDK_PROJECT_PATH=c:\p4\dev\bro NDK_APPLICATION_MK=c:\p4\dev\bro\jni\Application.mk NDK_OUT=c:\p4\dev\bro\jni\out

0717
static polymorphism - CRTP
SFINAE

0716
TODO: make all buffers part of mem or lib (they're everywhere)
StreamBuffer
DynamicBuffer
IOBase

0715
Fixing stream buffer
Making a circular bffer.
TODO: use this in the audio code.

0712
Changing all buffers to streambuffers in packetmaker
streambuffer should inherit from IOBufferBase

TODO: change StreamBuffer.h/cpp to DynamicBuffer in P4

changed growbuffer

**TODO:
	in p4
		delete IOBuffer
		add StreamBUffer
		

0711
we still need the number of clients

to be fully asynchronous, and allow for critical operations we
should use a thread message queue.

we need a variable that "updates when the other thread wants" 
must be readable, but locked writable, and locked when being written to.

Structrue of NetStatus.
Gets updated OTF
read only for client threads.

//Sync object W-only from client/  R from Client/Server 
class NetworkInfo {
public:
 class ClientInfo {
 };
 class ServerInfo {
 public:
	t_int32 _iNumConnectedClients;
 };
};

InfoLockAndCopy
Create 2 infos. 1 main 1 worker.
On the worker update the info every so many ticks.
	Lock the info, 
	Copy the info to the other info.
On the main thread, read the info whenever.

What about persistent thread messages?
 
*******Tripartite CopySync***********
You hold 3 copies of the data
worker, client, and shared
Worker/Client can be accessed and modified asynchronously on both
threads, however both of the data copies must synchronously call an
update() method to update the data from the shared copy.  A try_lock
updates the data in both threads.

****Unique Timed MEssage**
Send a message,
Message waits in queue for x millis
if try to send another message, then don't until previous message is sent.
once sent, message becomes open.

CopySync is more aggreageate.  Probagbly more efficient
Messages are more system-wide, easier to access everywhere, and handled by architecture.

***So far, it was impossible to do everything in one class.  Needed 2 classes***
And the ThreadClient and ThreadServer classes from the legacy threading were delteed
that was probably a good architecture model, as we definitely need a generic way
to process thread messages.
Hopwever new thread API is simpler.


0710
we will also need RoomBase;: serverPacketReceived

however for now, just test client -> server

NetClient needs a SendPacket

NetClient::update isn't fully implemented.

**so it would be eaiser to use the PendingEdit system for both client and
server.
Client > Request edit
SErver > perform edit, aply to server
Server > send changed dens to client
Client > apply changed dens

No we cant
1 is a raycast hit, and edit info

2 is a dens edit.  These are different systems.
	We apply 2 synchronously and immediately.
	**However we dcan have another KIND of pendingedit.
	
Do not package pendingedit
	We don't have the topo on the server!!!
	Instead package the dens.
	
Therefore we can make the dens pending edit ** system generic for
both client & server.
	
Server Duties
1) Dens Storage.
2) Dotsim.	
	
	
Dumb to create separate DTOs.. we would duplicate code everywhere.
Best implement serializable.
	
Instead of writing serialize() deserialize() for all
objects it makes more sense to just use aggregates and
send those directly over the wire.	
	
New Edit Architecture
PendingEdit - POCO
ServerEdit - POCO

problem is can't serialize that.
	
PendingEdit	
	We'd still need to serialize the list.
	
0709
NBSocket :: sendData( Serializable* sp)
	add( sp->serialzie() )
List of crap we need to send and recv
pending edits
dens values.
	
Fixed up GrowBuffer to STreamBuffer for read/write streaming operations

More artwork. started G01 model
	
0530 exercise
0615 dinner
0630 pay credit card bill
	pay doctor bill
0645 vault
1100 paint

Changing GrowBuffer to use bytes underlying, this way we can
'implelemnt IOBase and write aggreaate types

	
0707
putting async load on hold
Since the load time is fast in the runtime i'm avoiding async OpenGL ATM

So -- async would require us to update every object's manager to
deal with async loading.
We'd need mutexes everywhere.
Such as physics manager.
Spjrite Manager &c
We would need to go through the mesh loading process and update it step by step.
Room for bugs: TONS
	**Reverted ROom Manager back to sync loading state.

fIXED RUNTIME LINK ISSUES
	Runtime - sounds like the .lib file is too big for msvc.
	/bigobj
	2129
	for bro.vcproj	
		removed whole program optimization (/GL) to reduce .lib size
		Worked to reduce lib size
		Removed /LCTG:immeadiate and changed to /LCTG	
	
**Networking is needed.		
			
		
07.06

* Sell Toys

10 - CWE - 6
10 - 12 - Bro
1PM - Shave
1:30 HCD
Work. - Bro

07.06
Luckily most buffers aren't using the returned pointer.

4432 6440 1526 4679
0818
598

lender adatm wants binder by 7:15 to get it to underwriters.
cxhristine is going to be on vacation during htat week.

New PC today.  Didn't doo much.


07.05
    I async rendering sorted by threads
    II each thread has a beginRender / endRender
    III commands stored in a map of (threadId, commandlist)

    **We need the ability to execute immediate commands within other immediate commands.**

    I dont' think wae can use immediate commands because other render commands would invalidte the state.
    we need to have a beginthread/endthread command queue, and queue up all the lambdas.
        **somehow storing information.
        if we rely on gpu data to be avail, then we need to use futures.

    **Removed/deleted about 40 files.
     
2 methods for GPU driver
    1 - Easiest to imp, performant -  batch commands in async calls and call the 
    2 - impossible
    
    we need some kind of flag that says "we're running GPU commands"
    
    Okay problem
    1 - we could call execSync and wrapper every OpenGL command
    2 - More robust - we wrapper openGL commands into logical units
        like "createTexture" and "draw" &c
     
    No immediate commands - 
    yes this is possible to create immediate commads for glGet**
    but it would complicate the system 2x since we have two types of
    gl command processors running.
    Instead - everything is deferred.
     
    texture creation is now Async.
    
    TODO: update GpuBufferData
     
07.04
Async Design
    **glGet..etc are all immediate commands and must block.
   
    std::shared_mutex _mtImmediate;
    std::condition_variable _cvImmediate;
    GdCommand _cdImmediate; // we own a single immediate command.  This command must instantly return a value, and it blocks the other thread if it does not.

    Gd::updateSync()
    {
        //Try to lock.  If we fail then skip over.  Don't block.
        std::unique_lock<std::mutex> immGuard(mtImmediate, std::try_to_lock)
        {
            if(pending_comamnd exists)
                execute pending immediate command
            _cvImmediate.notify_one()
        }

        std::lock_guard<std::mutex> cmdGuard(_mtCommand);
    }

    Gd::getIntegerv(..)
    {
        //Lock mutex, set the comand, then wait on it.
        std::unique_lock<std::mutex> lg1(mtImmediate)
            pending_command = the-command
        _cvImmediate.wait(lg1) //Wait for command to execute

        //Lock the mutex again to get the return data.
        std::lock_guard<std::mutex> lg2(mtImmediate)
            return_data = pending_command.returnData();

        return return_data;
    }
    so like

    promise = Gd::CreateDeferredMrt(p1, p2, p3);
        lock cmd mutex
        push  CreateDeferredMrt{
            p1
            p2
            p3
            reutrn promise
        }
        unlock cmd mutex

        later....

        lock cmd mutex
            for all cmds
                execute()
                    gl...
                    gl..
                    gl..(p1)
                    promise.complete   
        unlock cmd mutex

07.03
changed renderprocessorpostprocessor
    to use virtualmemory
    (todo - chang ename later)
    removed a lto of crap classes in prepartaiont for
    async rendering
    
    
    glframebufferrendersurface
    irendertarget
    
   **note: removed some stuff from main.cpp
    
    liblist
    libitemmeta
    libitemlist
    libitemdefs
    
    removed old LAS library crap just to make build faster
    
    230 files deleted / removed
    
game thread
draw thread - main thread
sound thread / net thread

FINALLY removed the unnecessary initializations from vec3,vec4


  BaseNode
  _size
bvhobject3
pobjectbounds
pbindmatrix  

we still need to remove mat4::setIdentity()

could not fix mat4 -- there's a problem somewhere

minor fixes to physics blowing up

OKAY changing the rooom load code to be async.
We can show loading screen while this happens.
Everything else is sync.

problem - the GPU code is running out of sync with the rendering code in the
loading screen.

Added lock/unlock for command groups.

PROBLEM - we cna't run GL code on another thread (
not just out of order, we simply 
do not have a device context on another thread and
we can not batch commands over different threads)
OKAY we can't use lock / unlock for commands

SO we need a fully parallel command-based approach implementation

Mutexes: you can't unlock a mutex that another thread has locked
Semaphore/rw mutex: you can lock/unlock in different threads.

3 kinds of async GPU commands
    1 - OE - order dependent
        immediate/ blocking - 
        we require the GPu thread to return data to continue processing.
    2 - AE - order independent
        async
        Send crap to the GPU
        Doesn't return anything.
        Profit.
    3 - AED - deferred execution
        async return
        Send crap to GPU
        then call a return lambda
        Do addl. processing

Blocking commands - need this now
Non-Blocking commands - need this later.
     
glGet..etc are all immediate commands and must block.
     
07.02
    Removed old threading system.
    Made RCA manager and Memory manager threadsafe

    preparing for multithreaded render so we can load the game async.

    problem: decRef is getting called by child objects during destroy, which it needs to get added to the
    added to garbage collector.
    SO - we should lock/unlock based on temp data.

    Simple... seems to work everywhere

    CUSTOM MEMORY MANAGER NOT TESTED FOR THREAD SAFETY.

    NEXT: Async rendering, and dynamic loading.

    Main thread
        In Gd::
        create CommandQueue.
        Queue up commands (multiple threads).
        Make every command thread Locked
        How to update say, bindings? without causing thread problems?
        Difficult..
        we would need custom locking, &c.
        Loading would be async.

        Acutally, instead of an async rendering thread, we could just make loading things async.
        Loading/parsing is what's slow.
        However we'd benefit more from an general async rendering thread.
        we would need to coordinate binding.
07.01
    Added files to p4
    ssd upgrades

    bind 46297

    replaced all tabs in the solution with 4 spaces

    coded the basis for Thread2 api (replacement of old win32 threads )

    removed time, logger from TLS.  Added thread-safety to some other places.
    RCA manager needs to be more thread safe to get rid of the TLS class.

    began removing old thread crap

    3:30am - nixed about 60% of the audio processor..dnag

    4:30am - fixed sound. sound is now on good thread system.

    TODO: delete old thread system.
    bedtime.

06.30
     learned about const * const
     Fixed font aliasing problem
     Added texture filtering in createtexture2d
     Got fonts to render with sclae (yeay0


06.29
So to prevent edit             
    Turn cursor red.
    Further we need to send/receive errors on the client
    server / client needed
    
    1 ) menu
    2 ) load server/client
    
    Server starts when we start game, Thus need a title screen so we don't immediately start the server.
    
    Title screen > Start game > Start server.
    need app name for save dir
    need app name sys par m
    
    Implementing old textfx screeen
    font size isn't implemented.
    font bitmaps 1024 .. ok ..
    we should just scale the fonts to the gl quad.. no need fo 

06.28

06.24
    afternoon - did some cap formatting, added test for seamless caps.

06.23
    d220

0621
    Lots of object grid design
    minor refactoring
    We need to fix edit in order to test adding objects.
    Begin adding object edits.
    New Vine Texture
    added mod to resource file


06 20
refactored iCell
cjamged _typ, etc
new roof texure

fixed annoying vs session target error b6y clearing cache..
had to reinstall vax and textsharp

added compression (not needed but he functionaliyit was there)

made 3 small models to test object placement


06 19
check if i t paarsese correctly
tjhenm we can re-add fixhightiles9)

TODO: Rocks for stacks
    Add rocks to the object grid. (rocks are rdundndant values)d

    removeDens ghets called during remove dens

TODO: add texcorods to poly3f and split them
    
Fixed topology bug
implemented seamless topology
refactored some of the topology generation    

TODO:
    dding only changed quads would not only optimize
    but also make this easier to debug (per quad)
    
    fixing bound box gen

TODO: test top split    
    
06 18
Further problems with inter-stacks
    1 - double parsing.
    we might end up parsing doubly.
        fix - split the node along the top with a split plane.
        if top glob exists, 
            adn if the stack cuts into the top glob
            abandon that stack
                thsi avoids dobule parsing
            
    2 - offset
        we currently clauclute offset based on qudnode only.
        need to calucalte offset based on start of stack.
        
    3 how ot discard dens
        edit the glob register and savie it while parsing the curren tglobt

    4 tile height generation
        thjese ra ok
            they're relative to the stack
    remove top quad / bottom chec kquad from stacknode parser
    
    OKAy so we should'n;t worry aobut stack dens in adjacent nodes since if they'r loaded
        they've already been parsed.
    
06 17
shadow  ambiance parameter
** Fogging could be much differnt if we used..

fixed fogging

starbox

    
06 16
Added shadow exponent
Parse Half Stacks

test window size update.

depth buffer blending isn't working.
draws the wrong texture chanel to the blended texture.
HOWEVER the MASTER depth buffer still renders perfect.

indie  dev life is just the life because you're not working to anyone's expectations
just your own.  Everything is centered around you.  YOu are your own benefactor.


0615
Got shadows to blend with the SSAO algorithm (SBAA)
Once SSAO works the peter pan effect should disappear.

Wrote WBS document

0614
Added DEPTH MRT - replacing RenderBuffer
Added SSAO

0613
Working on dens edit

fixing holes while digging
we must hadnle the case where there's only 1 density value, top or bottom.
TielDef.reset - must pass in neighbor Quad Node and get top/bottom dens.

Seamless Quads
    TODO
Material Stack slicing 
    We must enable material stacks.
    Otherwise stack dens may have "gold" per se, but the player wouldn' know.  
    1) hack ina material editor
    2) test changing on topology
    3) code for material stack slicing.
    
TODO:Material fixing - later    
      make the materials a map, top side bot;
      use the RED dchannel fo the color to index materials (1.0f, 0.0f, 2.0f)
      HOWEVER - this isn't even eneded\
      
mat file now loads all 3
TODO:
make sure matId -1 is not needed in the texture lookup

Optimized texture sprite map. **MUCH NEEDD

Lunch : Fixed skybox somewhat

TODO: validation in sprite atals loader to verify sprite frame Friendly names are unique

0612
Fixed the topology bug GL issue
problem was  glDeleteBuffers was getting called in GPUBUffermanager AND in the Gpu Buffer Data (which deleted the buffer)
    Centralized creation/delteion to buffer.  And it worked. \
    **THERE IS STILL A REFERENCE ISSUE SOMEWHERE


fixed glob seaming (somewhat)
added QuadNodeNeighobrs

Why not just use manual, quad tex coords?
    We'd need blending if we plan on allowing stack tiles to raise up way high as the tops will be skewed.
    
**ADDED BACK THIRD TEXTURE    
    
Updated mesh independent draw for better function

Created better skybox
MOdified world textures
enabled nearest filtering
tweaking..
    
    
0610
affine transform - a transform matrix for just positions, translations
inverse of orthogonal matrix is also it's transpose
the multiplication of two affine matrices is an affine matrix

TODO: geom animations
TODO: put geom mats back in.

learned about blender actions
these are easier than exporting keyframe ranges.

we are not getting the correct keyframe / rotation matrices.

part of animation conversion is deciphering the cryptic ania

**Animation Skeleton looks good
**There is a problem with the mesh skin.

0608
Fixed generic WGL pixel format selector.
Minor improvements to shader loading &errors.
Release build broke with new changes.  Fixing it.
Added some comands to disable logging/ errors.

Ok problem was bUsingOpengGL
    FINALLY removed bUsingOpenGL from the buffer system
    This will no longer support software buffers.  ALl that code I wrote?  YEs SAD.
    SAD ** But this has to go.  It's just too stupid to try to replicate software support nowadays.
    Even so, drivers should be able to do this themselves.

1:15AM
Good tits.
Bone Animation WORKS W O R K S (again)
iof you can identify oproblesm with bind pose you're closer to solving the problem
if the bind pose is screwed up... sol ong as your bind pose has just translations.
FINALLY GOT IT TO WORK
    Here is the algorithm I Used So long as matrixes are Left-to_right associative
        (B^-1[n] * S[n] * B[n]) *...* (B^-1[1] * S[1] * B[1]) * (B^-1[0] * S[0] * B[0])
        
    
0607
glPolygonMode - deprectated
glpush/Pop attrib - deprecated
(SIGH)

Redid the basic OpenGL context which opened up a lot of features
    explicit hardware accelleration
    multisampling
    floating point FBOs
    SRGB color space (this is the big one)
    gpu debugging mode
    CSAA (nvidia)
SRGB seems to look the same as linear with exponent tho..
various fixes

TODO:
fix gpu device setpixelformat error
fix RUNTIME error
then work on animation
then work on animation

if program binaries can't be loaded we should
delete them and recompile the shadrer

0606
Lunch: Added armature matrix to Articulation
TODO:
    test multiple bones
        change 'articuulation" to 'armature'
fixed some debug visuals
added debux axis

part of the problem is the mesh local matrix.
    
Mesh matrix is unnecessary, causes too many problems
Instead, when importing we'll just freeze transforms.
Better yet, we'll freeze on export.
    
0605
Prarie Dropseed
Blue False Indigo
Landino Clover

Top Priorities
Animation
Object (tree) placement on the grid.

bone 1 is not affecting head 1 and it should
there has to be some bone index messup here.

more more more Ajnimation...
unsure about all this
decomposed the Blender matrixes to get  

**REversed multiply order in TimeNode skin matrix

Adding object-mesh local matrixes for animation
    This allows us to not have to freeze (apply) transforms every time we export.
    Also Gives more animation capability

problem: we want to copy the local matrix first, then animate
    But if an object doesn't support animation, then what?

transform export seems to be confirmed to work via the mesh local transforms.
    
    
OKAY so if we want to visualize the bones we do have to output the bone length.    

TODO: Armature Matrix! Armature has it's own matrix as well.
    Model (vault)
    Armature
    Mesh
    Joint
Do this tomorrow fam
    


0604
Removed creatures.dat
Todo set _creature type from the mod file.
Todo create physics spheres from mod file cbx 

todo fix physics crap in IModelManager.cpp

removed creature "types" in favor of custom AI movement & animation

todo craturemodeltype => AiTypeName

also FSM States should be strings as well for more customization.
added apply transforms to bpy exporter

Problem: all vertex attribs are enabled incorrectly.
We need a shadow VAO
Make sure to set VAO Data on DrawParams now************

**Removed Default DrawFastMOde01 in renderutils when front VAO is null

**Mesh Node needs to have _uiColorID (not modelnode)

    
0603
TODO list
1 Fix Side topologizer - make sure ther'es no missign tris
2 Allow for editing any corner (top)
3 allow for side editing / deleting
    delete - delets side
    need this so habbys can dig through

opt Create better reticle for editing (needed?) no
opt Design gui for editing (needed?) probably not needed at this point

Adding contact boxes to blender exporter.
More blender doc
Finished the foliage on the tree model + learning this crap.
added contact boxes for model node

**Idea
    So we have a problem with transparent textures and shadows
    The simple solution is to change the shadow shader
    However because we need a depth texture for SSAO anyway
    It might be better to simply pass in the cube shadow lights to the model renderers
    and iterate them.

Animation is correctly oriented upside down.
Let's get it to work upside down then we can change coordinate sysetm.s

Animation is close to fixed]

OKAy sombie model si screwed up BUT strong feeling it's due to the bind pose offsets.
check bind pose offsets &c.  Also check if bind opses are using rotaitons in the zombie model.
You can tell it seems to be the offsets.  The rest of hte model is likely good...  The roations look good.
Also create test bind pose character with 3 joints.


0602
Dens Edit Manager / Dens Edit 
added pickable quad to quadnode
various edit classes
design for multiplayer edit.


0601
fix weird glob seaming at tops of stacks
fix editing sometimes blows up stack.
terrain shadow maps are "skewed"
    ONLY SEEMS TO BE DUE TO THE Z SHADOW MAP SIDES
TDOO: particles
    atmospheric particles.
    
op[timized shadow maps
        ObjectDelta
        DeltaComposite
        
Gained about 20FPS        
        changed to gl_draw_framebufer

**Changing shadowmap internal format to RGBA16F seemed to work more (more shadows appear)
**Shadowmap front/back DO RENDER when we render ONLY THOSE.  
so there's somehting messing up when we try to render all 6 sides.        
**FIXED FOR THE LOVE OF GLOB

***FISEEDDXXX
THe probem was we wernen't clearing depth buffer each time.

Changed shadowmap algorithm to use length2 (squared length) instead of just length
        
0531
finished implemeetnign resources.dat system.
all dat files are now in resources.dat

added 32 bit textures option.

TODO: Check physics when changing topology.
fix topology shadows.

started replacing win32 crap with SDL
    Doesn't seem to be a good idea.
    Although SDL is simpler, it's more limiting than what we have (working!!) now 
    and it's probably not the right move.  we can't use sRGB with it (if we want) &c.
    Probably a lost cause.
    
    However - Updated SDL to use SDL 2.0
    
*Vertex arrays seem incorrect for model shadows.
but model shadows are working    
    
culling back face seems to work better for terrain.

//globs should be absolutely placed, there should be no _vOrigin.  This is incorrect.
Wiat maybe there should.  Thing is though-- meshes are absolute aren't they?

0530
fixed kilfocus
fixed boundary issue generating bound boxes
expireimented with noise in shaders
added fog grain

deleted vao 26, 27
so - it's returning the same VAO ID after we delete it.

So - Recursive_generate_r for quadnode now does nothing essenatially.
    because we need to recall it when ...
    
***COMMENTED OUT DELETE OF PRIOR GLOB DATA BECAUSE OF MEMORY EXCEPTION
***COMMENTED OUT DELETE OF PRIOR GLOB DATA BECAUSE OF MEMORY EXCEPTION
***COMMENTED OUT DELETE OF PRIOR GLOB DATA BECAUSE OF MEMORY EXCEPTION




0529
    fixed quadratic attenuator
    fixes to physics vectors
    checking for denormal physics numbers  HELPS A TON
    fixed show/hide cursor
    fixed center cursor
    Input is enabled on non-active cameras - this is a problem.
    
    ****FIXED RCA REFERENCE PROBLEM
    
    glob vertex buffers are failing
    ERROR: there's some kind of reference somewhere when reinitailizng the GLOB vao/vbo/'ibo
    extra references to VAO objects..but where?
    also** too much GPU memory is being allocated somewhere.
    
    
    The edit method is getting called in a loop.
    something's wrong with mouse we'reg etting infinite mouse clicks
    OKAY doesn't seem to be mouse HOWEVER when mouse leaves window we have
    a click response problem that needs to be fixed


0528
    Added more to light shader.
    Added Pseudo-HDR.
    Added HDR functions and HDR exponents in all color shaders.
    Modified foggin, added Ambient, Diffuse, and Spec (constants)
    Added picking triangles.
    learned HDR, luminance, sRGB

0527
    Various things.

0526
    Experimented with GI in the shadow cube. Result is we have to blend the color channel, and the shadow channel separately. The
    color channel will need to be blended a LOT in order to sample the right color values.  This will also fix shadow blending.  We'll return to this.

    Z cube map is upside down.
    Object isn't rendering to all cube maps. Why?
    **NOTE:
        changed clearcolor and vshader output to debug shadow maps in gdebugger
        **Re-Enabled scissor testl
        
    ****FIXED PROBLEM WITH LIMITED RENDERING AREA
        **Scissor test was specified AFTER framebuffer was bound.
       
    -z - incorrect - object is at bottom of buffer
    +x - incorrect - bottom of buffer

    **Fixed shadowmap orientations by pointing the frustum camera normal downwards.
    *Chagned global collect back to collect-per-frustum -- global collect doens't make sense
    we only render to each side one at a time and cull out what we don't render.
      
    !!!!!!!!!!!!!!!SHADOWS WORK OMFG!!!!
      
    * Terrain shadows don't work.  Need to check into this.  Not important ATM

    Began tidying up picking code again to prepare to begin tile editor.
     
    TODO: test adding another light.


      
   
0525

   **Changed SHadow cube maps to use RGBA FLoat
   
   Was viewport rally the problem?  It has to be at least part of the problem.
   
   Textures must be projecting and sampling correctly.  This is verified by rendering the frustum boudndaries
   in the viewport.
   Shadow orientations are off.  TGhis is likely due to 
   the cube map being on the wrong axis I use LHS gl uses RHS
   
   x axis is definitely flipped
   and we're still getting cut off for some reason
   
   ***Disabling clipping entirely seems to fix the render clipping issue.***
   
   Okay so we 
    collect per-frustum
    render in that frustum's cube side
    **SO
        should we render each geom for every cube face?  is that what we want?
   Yes -- this seems to work for one face (and possibly others)
        when you sample a cub eyou MUST render each geom to all 6 faces
   
   Thinking: Shadows combine with global illumination using the other 3 components of the
            shadow texture, a for the shadow, rgb for the GI.
            
   WE ARE RENDERING TO THE OTHER SIDES>
   However * there's a problem with where the sides "are"
   Directly in the middle the object renders correctly but when it hits the ground it stops rendering its shadows.
0524
Lunch:   fixed glob/model picking
    MSAA has to be enabled on ALL attachments to a framebuffer.  Yikes!
    Also For MSAA to work we need to figure out why we need to blit the fraamebuffer in all the examples.  Doesn't seem to work with textures..
    ***added huge bias to distance in shadow shader.
    added picking glob objects.  
    TODO: Volumetric picking later
   
    Rendering messed up still.
    Part of the reason was culling was disabled.
   
    It isn't grow bufffer
    Fixed it
    Normals were't computed in stacknode.
    we copied temporary data before computing normals. fixed.
    
    ****NOTE*** REMOVED MEMORY BARRIERS FROM LIGHT MANAGER'S BUFFER COPIES

    Added fogging again.
    Shadows..still boroken.  1230am man tomorrow's going to blow
   
0523
    Adding generic render() method to BVH objects
    Removed render methods from VaultRenderer and placed all rendering in Glob object.
    Removed bindVertexArray from shader makes no sense.
    
    
    **STACK NODE GATHER SHORT CIRCUITED!!!!!!!!!!!!!!!!!!!!!!
        gather is no longer used for rendering
    **GLOB PICKING IS BROKEN
        we need to re-enable gather for picking in order to pick the correct stack.
        OR simply pick the glob object and do a volumetric pick for the stack triagnel.
    *There is some kind of material/shader issue when we changed rendering to use
    glob rendering.  we changed rendering in glob.cpp
    possibly also a vertex issue, or copy issue when we copy vertex data.
    or also an index issue.
    
    The rendering the whole glob is overall faster
   
   Shadows somewhat can be seen woooo.   It doesn't seem to be the shadow methods PER SE
   
0522
    Minor tweaks
    show/hide console
    TexView is now a networking test application.
    
0521
    Began sending texture data to client.
    Note: glGetTexImage doesn't support R32F
   
    Partial buffers seem ** up
    TODO: 
    0) receive is WAY too slow.  See (4)
    1) Stitch together textures returned from each cube side of glGetTexImage for the cube map as we have to do each cube map side
    2) Ont he client, convert the R32 texture data to RGBA and place it in the picturebox.
    3) Texture Data is sending very slowly.  Probably due to net running in the frame. SO
        Place the Network layer in another thread using std::thread.
    4) Update game threads to use std::thread instead of windows threads.
    5) Update mutexes to use the same.
      
New thread manager is in order
    ProcessScheduler
        VectorEx<std::thread*> _vecThreads // limited by hardware.
        
        addProcessToThreadSlot(lambda);
      
    
0520
        PPos - Player pos
        [c] => PPos
        [s] => PPos [no ack]
        [c] <= PPos 
        
        IChk
        
        Problem is client protocol is incorrect
        need to fix it to update it for the binary protocol
        also** 
        client doesn't correctly attempt to find new messages.
        
0519
    Invalid CRC = 1445737556
    Got 673904123
    Valid 738823345
    
    Solved a few issues:
        The buffer for incoming connections was reading data to the end which was truncating 1 byte.
        Added a -1 to recv() method for the buffer and now it works
        **Also
            GrowBuffer was rellocating invalidly.
    
    
0517
    CRC = 3133784897
    1299697226   
    More Networking
    Got client / server apps to send valid data.
   
0516
    sending all network info to Room for now
	**In the future we will want a separate server class and create it in the engine
    like getServer() similar to getRoomManager()
    
    
    PacketMakerBase
    Crc32
    Sent data successfullly 8 need to parses it.
    
    
0515
TODO: fix discrepencies with the default material and what to do via the shadow shader.
        this pipeline is generally ** up.

Update light manager to use only lights that intersec tfrustum
    
Dynamic Texture Channel update. for GlActiveTexture
    
Removed push/pop attrib in lights due to error.
*PUSH/POP atr4ib is deprecated   

Ajdded GpuErrorHandler to programatically turn on/off the (too many) GPU debug errrs 
    same now for OS erros
lighting works, shadows (no)    
****Debug set v3_shadow_cube to 1.0    
    {_m11=0.000000000 _m12=0.000000000 _m13=1.00000000 ...}
    
    
Thinking about writing a texture viewer to view the cube map data.
    it's not necessary - we have gdebugger
    but i can't debug in gdebugger.
    We have run out of Debug.
    
    1) create C# application to send NET commands to this application
        this wouldn't benefit anything except for forcing me to write the network component.
    2) create an icon in the GUI to do this.

The most helpful is a realtime teximage updater.

1) create c# app that displays color info in a bitmap.
    networking: send/rcv commands to get the texture info per frame
    call glGetTexImage() to get the given texure.
    
    Protocol
        GetTexData
            Client
                => [BEG0][GTD0][END0]
            Server
                <= [BEG0][GTD0][Num Tex ids (4)][ Tex Id 1 (4) ][...][END0]
                
            Return a list of texture Ids.
        GetTexImage
            Client
                => [BEG0][GTI0][END0]
            Server
                <= [
            gets all texture images.
    Later - we can dump the log and such.
            GetLogInfo
    
     ServerSocket->pollclientfordatea
        put this in a new poll method pollAllClients() ** NO
            netSWerver::udpate

    Interface to start client/server
        VaultMainRoom
            Gu::GetNetworkManager()->startServer()

TODO: move debug hud to its own file
NOTE:   
    C#

            1 NetworkUtils::packxxx - pack data like ints, etc.
            2 Header conversions table for both BRO and VAulat

           3  in RoomBase add receiveClientData() and receiveServerData()
            possibly (later) we add clientConnected() serverConnected()

         4 PacketMakerClient
          5   PacketMakerServer - so we can parese the TCP stream
           6 Note: C# - we are using string data
                  C++ we want to use binary.
                  
                  Do we?

                  How much data are we actually sending?
                  Probably not much.

                  Add an extra header variable to packets to indicate they're coming from C++

         7   pollClientForData => NetPacket
                NetPacket {
                    uint PackType  - char header for pack type
                        4 chars - we pack them into an int to do int compares.
                    
                    DataBuffer* pData - packet data.

We will need networkutils to pack the data.

PacketMaker and PacketMakerClient for C++

*******USE BINARYREADER IN C#

0513
    Added backup to py exporter.
    Axis Test Model
    More deubg
    We're close
    ***FOR SOME REASON RENDERING THE SKY SHADER IS BREAKING SHADING MODELS
    animation is ** but not totally.

    worked on shadows again..


0512
    Fixed weight references
    Updated Viewport - moved viewport&clip to only update when screen chagnes.
       
    skeleton rendering

    Bind poses for all joints seem to be indentity..?
       
   
   
0511
    Quaternion was inheriting from VirtualMemory causing a VPTR problem.
    NOTE:
            To test animation always test bind poses first.
            concatenate all joint world matrices, then take the inverse at each child
            
    **Vertex weights are wrong.
    Bind pose SEEMS ok
    **NOTE: 
        removed animation from TimeNode.cpp with debug

    **Possible problems
        1) invalid joint IDs assigned in exporter
        2) matrices are not in the correct basis.
        
0510
    Lunch - Some refacotring.

    removed _pShader from MeshjSpec

    I wonder why people write about themselves and their small accomplishments on Twitter.  Every day 
     on twitter indies write about "I made this thing today" "I coded this new thing" "I learned how
    to do this"  "Please support our game"  "I like this or that"  "My game.." "This code here is..." The content of all of these posts
    is self-centered.  Usually it's based around the person's wanting to get a fanbase to market their product (future product).
        Sometimes you see one or two hearts on these indie posts.  The majority of hearts go for either
    the poster is really famous, or the content of the post is some original video of a game. It has to be interesting
    and original, and third when the twitter post is funny.  People will not necessarily always hear ta post but they will
    comment a post without hearting it.  FOr example Notch says "My tooth hurts" and he gets 300 hearts for that. Another
    indie might post a realy cool video of his game but get only one or two hearts.
    Even tweets like "I've been working on this game for three years" So that makes you great or something?  Maybe there are
    some twitter people who care?  But I wonder how you can know that when you go blasting off one half-thought after another.
    A lot of tweets tend to cneter around some guy's past work or accomplishments.  And rarely do they get any hearts.

    Refactored Skn File

    Models load
    skin
    animations doen

    AND.. THE MODEL IS ** up
    go figure..

    *****remove dhabby play animation cco

    Model renders.. ok

    Ok model verts fixed.  Model renders.. good.
    **We simply load the WHOLE OBJ FILE AND DON"T USE OFFSETS OR SUBTRACT LOCAL GEOM OFFSETS
        voila
      
    Now..Animation

    Removed Inverse from matrix import of bind poses.

    Need to dick around with bind pose matrices find out what's wrong.

0509
    Lunch - added animations to zmb01
    Diving back into OBJ importer..

    Remove all that preload crap
        Replace it with VectorEx

       rename loadModelPart to processMeshSpec

        
0508
    Vertexes are wrong for second models in obj file
    UVs are wrong for parts of the model because probably :
        3) it's saying we're outputting 1002 verts, when there are actually 999 verts..
            and 3 tcoords aren't found. what gives?
         
         
        OOKKAY so it's JUST the texture coords and their indexes that are ** up.
            
            
       ***FINALLY FIXED OBJ EXPORT***
       
       LOOKS LIKE COORDS MIGHT BE IN OPENGL SO WE DON"T HAVE TO TRANSLATE YAY
       

   
0507
Note: Changed boundbox master from the mesh spec hierarchy

removed 	ModelNode  TRef(MeshNode) _pMeshRoot;
		vecLodDistances
			_ModelShader 
			tooFarDistance
			currentLOD
			_mapMeshBufHierarchy
			_bDontSendDestroyNotification -check
			_blendTime
			_blendSpeed

			FactoryCreate << Remove also from ModelNode				
	OKAY
		Here's what we'll do
		Make model node the hierarchy.
		ModelNode : MeshNode : PhysicsNode
		
	PROBLEM: 
		MeshNode::BoundBox is not contsurcted in ObjToSpec
		

	Skins are saved by FILE.MESH  we need to do the same for meshes.
	
	SOOOO MOD FILE NAME IS with a . .. we must be removing it.
	
	ALSO we have 2 mod files in there.
	
	NEEED TO RE-EXPORT MODEL 
	
	Checking into bleender....
	
	So.. problem with the loader is that meshes are separate when we exported them and they shouldn't be.
	
    ***NOTE: placed animations in the MOD file for the new blender exporter.
    
05.05
        **NOTE: hacked modelshr to output white
    **VaultMainRoom - diabeld skybxo
    **PROBLEM IS MESHE NODES aren't getting created for HABBY models
        ModelNode: 61
        see the animation manager : updateanimatio
        
05.04
	Okay - freaking NVidia driver didn't print the correct log ifnormation
	UPDATED OPENGL DRIVER******
	FOUND IT
	Problem is with the samplerCube array
	Opengl doesn't like how it's being used.. but how?
	
	Added custom friendly error window.
	
	Deleted a lot of the framebuffer stuff.
	
	
	OK SO
	Setting sampler2DShadow instead of samplerCube just gives warnings.
	Online says that if we're using an array of textures, just don't send that array.
	HOWEVER sampler2D works fine.. so what gives?
	
	
	
05.02
 Set glslShaderUniformVariable to have its own file
REmoved
	ShaderVariable
	GlShaderVariableAtrtrib
	GlShaderVariableUniform
	GlShaderVariableList
	GlslShaderDiffuse
	GlslShaderShadow..
	GlslShaderShadow..
	GlslModelShader01
	GlslFoligaeShader01\
	GlslSkyShader01
	
added more rendering system debug.
	
05.01
	modified shaders to allow point light uniforms.
	We need to add a light influences map to all models.
	Added SetEx
	Fixed BList and replaced VectorEx with SetEx
	Removed old BList binary sort :(
	Removed drawModelNode from most places
	DrawParams is now required to draw models.
	Removed a lot of method parameters  mat4.

	
	
04.30
	Finally got rid of draw list GL
	Various refactoring

	We need an easier way to create characters
	Encapsulating
		Test physics volumes (in habby manager)
		creatures
		players
	Removed
		DrawListGL
		DrawList
		DrawController
		DrawGroup
		GenericDrawController
		DetailDrawController
		
0429
	Need to see frustum
	Cleanded up renderutils.
	Added UtilMeshInline
	**SET DEFAULT LIGHT TO NOT BE CHAR POS ANYMORE
	Added hud status messages

	Added renderable frustum to point lights.
	
	Fixed the shadow frustum 
	
	Had a huge conundrum with with frustum being off.. and found out I WAS USING DEGREES FOR TANF()
	Taking too long
	1) create test object that is sort of part of the game
	2) load it
	3) put it in the world.
	4) render it in shadow.
	5) see if it ** works!!

	Removed TRef from most of the Skin System

	Adding back CM_ZOMBIE.. prepare for hell.

	REMOVE drawModelNodes from WorldGrid - add it to the generic rendering pipeline.

	**The bindShadowShader is not going to work.  we need to manually set the attrib poitners. OR
		Create a SECOND VAO for all objects to bind the shadow shader data.

0428
	GlslUniformTemporaryClientStorage.
	GlslShaderUniformVariables
	GlslShaderBase

	**Disabled Cull front and Cull back in light manager.

04.26
	More Point Light Shadow maps.
	Got the shadow to render to a map.
	having some performance issues.
		Seems to be the Glob::Gather routine.
			Removed TRef for QuadNodes
			Removed TRef for Frustums.
			Removed TRef for TriangleMEshVolume, SphericalVolume, PhysicsVolume, PhysicsVolumeSpec
				all physics volumes
			speedup about 20%
			
	***REMOVED FRUSTUM FROM AS CAMERA CHILD NODE

		Performance problems in debug mode release mode seems fine
		
	**Problem is we need the camera matrices.. frustum doesn't have that
		we need a lightweight camera class that doesn't use physics node.
		Or just pass the matrices ourselves.
		
	remove old gl from BaseCamera

	Cameras have too many physical constraints.  
		If we try to change position, or anything.
		we need a camera not in the physics systme
			This passes the correct matrixes to Uniforsm..
		
		FastCam
		
04.25
	THe memory leak problem (with TRef) is due to the fact that we prevent 
	calling decRef() when we are garbage collecting.
	We still have leaks, but thsi problem is fixed.

	removed RS_USING_SHADERS_EVERYWHERE thing. (not used much)


	TIL - the pushing and popping of GL states can cause GL errors to get deferred til the
	last state is popped.

04.20
6 - Frustum gather_r had an isNotNull and broke out of the gather routine.
	** Vault tiles now render!!

Frame is probably creating a spec every time we create a debug MeshInstance.

designed shadowmap point lights
	
04.19
It's at least partially BaseImage
changed BaseImage to BaseImage32Spec
all engine images are now 32 bit and they are converted on load if not.

there is still a problem with generateFlatTexture indicating mroe imgae problems.

BaseImage problems
1 ptrOff was invalid causing corruption in BaseImage
2 images weren't loading correclty due to changes to 32 bit.
3 for ptrOff we were indexing into a byte buffer and not multiplying the offset by the pixel size
	(thinking we were indexing into pixel pointers)
4 VertexTypes were inheriting from VirtualMemory causing them to have a vtable (easy and dumb mistake)
5 whatever mesh datastgructure vault is using has invalid verrtewx data


04.18
disabled world and sky in Vault::render
disabled stuff in cs3d render loop
disabled screenquadmesh in framebuffer manager

04.17
Through the ref system - found a ton of memory leaks.  for example, the entire BVH tree.

Back references are a problem for automatic system deletion.
	Say Ta has a Tb and Tb has a Ta.
	Tb gets deleted when Ta's reference count equals 0
	However, it will never happen if Ta is not cleared by Tb

04.16
Tref Bug fixes.

Problem: when deleting we have a pointer that has a TRef.  It calls DecRef on the
	TRef but the TRef was already destroyed so we get a segfault

	we need a check to prevent ~VirtualReference from executing when we
	are destroying all instances.
	
	
TODO: test to make sure the new VTable in VirtualReference
	doesn't mess shit up
	
	the new deleteion flag _test is causing the references to not function properly
	on delete... but when we have refernces to deleted pointers how can we deal with all this?
	
	we can move _pT but we're still going to have problems with the -> operator.

04.15
Moved references to globals.
refactored window class.
F11 - Fullscreen
	removed renderstateparameters for Gu::
	moved threadman, renderman, inputman all to Engine so we can
	reinitialize the graphics on the fly.

XX TODOchange VAO/VBO/IBO to TREf DONE
	
not TREF of spec but it's the actual object.
	we're getting a reference ocunt mismatch passing the spec by aprameter
	
Okay so the pHysics spec is a temp object but we're passing a pointer in and asssigning it as 
	the spec for the physics plane.. this is a nono.
	we can prevent this by forcing objects to be constructed with new()
	
**There is definitely a casting probllem.
	it's the contact box node has to be
	it seems to be that REmove() is defaulting to NULL and that's causing it to add a null reference.
	this all has somethign to do with treenode.
	
04.14
InstanceManager is no longer needed.  Neither is the differntiation between
	BaseSpec and BaseInstance
	SpecManager / InstanceManager likely not needed
	
	
	RegisterInstance is no longer needed in rcam and instead should be replaced
	with something like the TRef
	
	Wait so.. every object that inherits from EventOBject is virtually referenced
	meaning it can either be
	A) a pointer
	B) a TRef
	
**In order for instance map to work we need a reference in the system that ONLY
	exists if other references exist.
	
Reason for the Reference counting system.
	started off with managers having collections of objects
	objects destroyed via their managers.
	but there were reference problems destroying objects mid-frame
	so we made a garbage collector and had objects get "collected" and destroyed end frame
	so we generically made a single instance manager.
	objects were all dependent on being a child of the tree.
	but we needed objectgs that had no business being in the scene tree such as
	quad meshes and fonts. even specs.
	so we made them indpendet with refernce coutners incRef and decRef.
	but we had reference count mismatches everywhere. and this was too much work
	so we needed a pure reference based system that automatically
	did this for us
	
Removed the "Event" system.  Removed Sigslot. Unnecessary old stuff.
goodbye 5000 lines of code and 2007...
9:19 9:24

Problem with generic references (for all objects) because
not all objects are using TRef, so the destructor is breaking them.
1) call initialize() in RcaInstance
	This will alow ALL EventObject
	derivatives to use the reference class.  
	Might be better to avoid this problem.  But we could
	still use pointers.
2) move the RcaInstance back to being only the first subclass of 
	BaseIntance and BaseSpec.  
3) Make it the base class of all
	EventObject but, disable the RcaInstance destructor for non-managed objects.

Another problem
	references exist as the RCA manager is deleted
	
	added destroyGlobals
//TODO: destroy all other thread local storages, HOWEVER the threads
	//might already be donig this.  Check the thread callback in threa dmanager.
	
04.13
Slight Pickle
	The Asset manager MUST handle POINTers and not TRef(s)
	BUT it also gets inherited and has InstMap in cllasses so they use TRefs
	best to do is call AddToInstMap after it's added. or the ref is incremented
	
	Pretty much this whoel manager needs to be redesigned
	

04.12
casting operations.  we might need to return references here.
Invalid pointers during casting Could have been multiple inheritance issue.
IT WAS THE MULTIPLE INHERITANCE.
I guess the compiler got confused at how to cast the class and it
casted away the VTable which, still allowed the function to call a method
that pointed to nothing.
Okay so we're going to have a problem with TRef references and 
accessing class member variables. 
THIS WILL GO ALL THE WAY DOWN TO SIGSLOT

Refactored KeyCombo.  Removed sigslot for lambads.

04.11
Fixed all errors due to TRef changes.

there seems to be a problem with polymorphic types when calling incRef / decRef see _mapReferences
not a problem
the problem is that assign() was returning a new TRef() which got destroyed in scope of operator= and new().
this         = b2610
assign, pnew = b26f0
b26f0 decref
b2610 decref (manager)

problem is calling parseAttribute didn't instantiate a new TRef thus not incrementing.

04.10
Removed Repos
we have to move the TRef base to TreeNode since that's the lowest
class that references. 
***THEN WE CAN REMOVE incRef and decRef from TreeNode***

We have a circular dependency here.. treendoe / virtualreference

Okay another problem. We can't use TreeNode generically anymore because
pointers have to be polymorphic
IN THE LEAST attachChild() is going to have problems because of template instantiation

attachChild<Tx>( TRef(Tx) pTx)
and
#define AttachNode(Tx) attachChild<pTx::getType()>(pTx)

Specs no longer have to be tree nodes.

Question: How to cast TRef(TreeNode) to TRef(MeshNode)

Another option:
class _className : .. {
};

typedef TRef(_className) ClassName
This would eliminate superfluous TRef()
Got rid of ExLibHeader
BMap< has a problem and all Map() have a problem since they need pointer types.
Got rid of FileHeader
Got rid of LibraryDefs
NOTE*** Joint Motion Data likely candiate for spec system.
Got rid of old CLM/Library stuff goodbye old friend..

Need to implement a multimap compare.

TRef()
TRef()
TRef()
TRef()
TRef()!!!!!!!!!!!!!!!!!!!

04.09
Reference Counting Systm Reasoning
1) Game objects were destroying mid-frame which caused dependency issues.
2) SO, I created a garbage collection system at the end of the frame to delete
	instances and assets to avoid mid-frame reference issues.
3) However, this requires a reference counting system, and it's much easier to
	make the reference counting system automatic or else we risk having dangling
	references throughout the system.  Additionally since the reference system is 
	dependent on a tree structure we isolate all references to be dependent on whether
	the object is attached to a node or not and we can avoid spurrious incRef/decRef problems.
4) But, we can't strictly use a tree, since it doesn't make sense to attach arbitrary
	items to the tree as they don't have a "real" tree structure.  
	And reference counting requires all pointers to ALL managed structures be
	controlled or else we will have dangling references everywhere.
5) So we have to wrap ALL memory managed assets in a smart pointer that tells the system
	when we reference another asset in code.  This requires us to make a full virtual memory system.
6) However, std::smart_ptr won't work because it simply calls the object's destructor when it
	has no reference count.  We are trying to control the object's destructor for a later time, while
	adding and removing references via a manager.
7) Via a templated smart pointer, you cannot use forward declarations anymore since including everything in a 
	wrappered class requires you include the referenced type in the header which means you'd have to
	include EVERY HEADER FILE for EVERY MANAGED OBJECT.  This will obviously cause circular references and be hard
	to manage.
	*Unless you were to use TRef<T>* in the header.
8) Small, aggregate types such as PhysicsPlane3 which must also be optimized
   will require them to be reference counted which could kill performance.
   However, types like Mesh, Image will benefit from reference counting

Using ReferenceControlledAsset as the default reference counted type?  This should simplify everything

Remember: the purpose of this whole thing is the garbage collector NOT JUST REFERENCE COUNTED ASSETS!!!
We HAVE TO destroy objects WHEN GARBAGE IS COLLECTED.  THEREFOR SHARED PTR WILL NOT WORK.

  TRef(Tx) pRef
  Construct(pRef) (pRef = new VirtualReference<Tx>  

Okay going to make a prototype for reference counting to simplify it.
	Overload operator^ like in C+CLR
  
Use std::sharedptr ?? why do we need all that other stuff?

template < Tx >
ptr : reference


Typecasting is a problem.  We need a custom typecast.


VirtualReference\<([a-zA-Z0-9]+)\>
TRef($1)



04.09
Some Refactoring
TRef
TRef
TRef
TRef
TRef****
Needless to say, TRef

MaterialInstance
	TextureInstance
x = new Y
	y gets added to GC
Ref<x> = new Y
	gets added to GC
	Ref<> increments reference.
	~Ref<> decrements reference.

1) attach to scene root
2) set manually persistent

TODO: all the TREf<>>>> stuff for ALL SPECS and ALL INSTANCES


04.08
	
	Renamed BaseImage -> BaseImageSpec
	
TODO: add cameras to scene root
	fix problem with reference in CreatureManager

	Camera:
ModelSpec and it's physics specs are getting destroyed because they aren't
	referenced anywhere.
	We need to tie ModelSPecs to ModelInstances.

04.07
Removed IMeshManager 
refactored mesh/skinspec
TODO: TimeNode -> JointNode
removed dated DrawControllers from everything
Debuged lambas - they work
Renamed some things
Refactored a lot of stuf.

04.04
Nifty, nifty lambda and template stuff.

FRIGGIN FINALLY RENAMED MeshBuf to MeshNode!!!!!!!!!!!!!!!
FRIGGIN FINALLY RENAMED MeshBuf to MeshNode!!!!!!!!!!!!!!!
FRIGGIN FINALLY RENAMED MeshBuf to MeshNode!!!!!!!!!!!!!!!
FRIGGIN FINALLY RENAMED MeshBuf to MeshNode!!!!!!!!!!!!!!!
FRIGGIN FINALLY RENAMED MeshBuf to MeshNode!!!!!!!!!!!!!!!

*Removing MeshBufHierarchy for a direct appending of *MeshNode to *ModelNode

TODO: fix AllocHierarchy
	we ahve to figure out how we can return a single treenode because you can have multiple meshes at the root.
	so maybe we DO need MeshBufHierarchy - we'd just make it a TreeNode.
	
04.03
x clean room
setup schwab account for investment management
x put blood moon on flash drive
430 go see property (again)
get another e drink
5 exercise
530 clean car (door) and smell

TODO:
MeshSPecHierarchy - 
	Change RootList to FORCE an incRef() on the added meshes. and remove
	Hide getRootList()

877 742 9488 
7:30
hjujhj

Removing MeshSpec::_pChildren to use TreeNode
Generally trying to get reference system to work after garbage collect.

OKAY SO
TODO: everything inherits TreeNode
TODO: when a child is added we call incRef
TODO: when a child is removed we calll decRef()
this is done already

instead of calling->incRef() call attach()


TODO: make priveate TreeNode()::GetCHildren

TODO: combine animation hierarchy and mesh spec hierarchy
TODO: Change Treenode to BMap<> instead of Vector DONT DO THIS t must be orderd.

made insert/remove protected

Starting to add lambdas to siplify tree traversal.  SEE:

	iterateBreadthFirst([&](TreeNode* pt) {
		MeshSpec* ms = dynamic_cast<MeshSpec*>(pt);
		if(ms!=NULL)
			ms->setMaterial(mt);
	});

04.02
made asset destructors private
changed sourcegen
replaced everything destruxctor with override . tons of memory erros.
turned on gamememory

04.01
Got real world HUD working! problem was that I forgot to remove the raster matrix code

Changed Quadtree node back into a basic object, took it out of the instancer and the BVH
**NOW ONLY GLOBS ARE OBJECTS.

1) select an object
2) render a pick box around it

Reference counting tying in with scenegraph
	when an object is inserted > incref
	when an object is removed from the scene > decref.s

SceneGraphManager 
	BvhObject3* pGodNode < Never dies.  Persistent node.

removed old visitor stuff
got rid of ICameraManager (pointless)	

Switched TimeNode to use TreeNode 
**NOTE: we may have dicked up animation doing this. AND may have dicked up deleting of time node strucures.


TODO: we need some kind of reference controlled pointer so that when a reference is deleted via the manager
we don't have dangling references.


03.30
 Got rid of Rect2 >> for Quad2, 
Implemented Quad3
Changed All screen rendered quads to be V3 instead of V2

Waffled on whether to use menu Quads or real objects for the menu but decided
to use quads because the user is going to have to be able to input stuff
eventually and we need things like textboxes for that.

remove push normal from the projection routine frustumbase.

problem is quads simply aren't getting drawn.  Math looks right.. the projection is
definitely correct since the projected ray is correctly picking the buffer data.

0329
Menu Picking and Alpha
	GlMenuManager::setLayout is what we need to modify
		Ok Remove the current layout from the frustum.
		Add the new layout to the frustum.
	We will have to update menu system to not use ORTHO** projections and use REAL projections
	onto the frustum quad.  This will allow for physically consistent picking.

	GlMenuManager::updateFocusObject() needs to be change
	
	Easy: add menu manager as a real world BVH object that covers the screen. 
			Overload PickRender and render all objects 2d. << THIS WONT WORK because we need
			separate ids for each menu bvh object
	Hard: make QuadBufferMesh a v3.  Put menu objects in the real world.  put layout in real world
	
	Add basic mouse picking to bvh objects.
		BvhObject3:: hover
		BvhObject3:: down
		BvhObject3:: up
	Or use Button.. somehwo
		
0328
fixed the new generic atributes didn't take many shader fixes.

So picking HAS to use the color buffer. There's no volumetric only option because picked nodes
migh be behind alpha blended GUI objects.

0327
implemetnting generic attributes since we're having problems matching up
arbitrary vertex formats with arbitrary shader input formats.  this will allow us to
use a generic pick shader for every vertex format (that has tcoords)

Problem:
1)
for getAttribLocation _vecAttributes is not getting initialized in the same order 
as the vertex format type.  *solution: we have to match vertexformat components to
attribute names.  This will probably require standardizing attribute names.
**ALSO WE WILL BE ABLE TO OPTIMIZE getAttribLocation!
note the easy out would be to sort _vecAttribtes by _iGlLocation **BUT that would
not fix the problem of missing components for the box shader.  We need a standard attribute
match format.  However this would require us to fix all shaders :(
2) 
SOOOOOOOOOOOOO Basically we can just Nix vertex component types all together because
we don't need them anymore.  That was OLD junk initially for vertex Client Arrays which
are deprecated...  We can nix al COLOR and NORMAL compnents and stick to only
V2/3/4F I2/3/4F and Mat3344  GREATLY simplifying all vertex logic, but first
we should probably make sure the attribute modifications work.

multiple vertex types have to bind to the pick shader, that's currently the problem
with the pick shader.

NOTE: commented out box shader in BvhObject:pickRender()

8:30 workut

0325
creating a SpecManager, BaseSpec and removing
Specs from the InstanceManager::Delete
instead we have to let the individual managers delete their specs.

4:00 - workout

0322
PROBLEM: texturing on UtilMesh is enabled for the blank boxes we're rendering we need
to supply a default texture to the system.
AND**
* we need to generate texture coords for the box (are they generated?)


0321
More Picking
We need a new approach
glob is a bvhobject and gets only one selection color.  We need
to call "pick" and return not a list of BVH volumes but a list of BVH Objects.

HOWEVER we want to be able to pick the tops / sides of tiles.  How to do that with color buffer?
We might be better off just doing volumetric picking from here.  To generate a color for all the
tops / sides of polygons might be too much extra work.  We'd have to call render() for all the stack "parts".  
Vault isn't setup for that, and it'd be more efficient to just raycast the volume.

HOWEVER we would still need to make the pick system generic to work with the UI AND tilescape and also objects.

It might be easier to just render the whole glob as an "object" and once it is picked we 
can raycast again to get the correctly picked plane.

Add a picked routine

BvhObject::picked(ray, volume)
	this will get called when the object is detected as picked by the system.

So -
Object::pickAllNodes 
Object::pickNode
Object::pickRender - render the object
	We'd need to bind different vertex arrays for different v formats.
Object::picked - object was picked

SUB OBJECT PICKING

But we COULD make sub-object picking work.  
Since objects are defined as being in the BVH and also containing Sub-Objects.
The object itself would need to define PICK AGGREGATION for sub-objects.
New property
	_ePickMode - whether the object is pickable, and what kind of picking is used.
	
	We could eliminate color picking for optimization
	
	PickMode { ColorAndVolume, VolumeOnly, None }
	
	**If an object is ray-hit with volume and VolumeOnly is the pick type we
	 call its "picked" method after we have raycasted the whole scene and gotten
	the closest volume hit.
	
If the object is pickable ColorAndVolume (Or Sub-Object) the picking system will generate a pick color for it
and render it to the color buffer calling pickRender()

****Note: StackNode IS a sub-object of Glob.***

We could make the picking system automatically traverse Sub-Objects if we make them pickable.
This could have a performance impact.
It was kind of dumb to make all stupid stack nodes BvhObjects  (SMH)

TODO: see if we can safely remove the BvhObject from StackNode


0320
Selected Node.  Need to implement node selection to debug the invalid topologizer.

pickStack / pickNode need to have MULTIPLE objects to pick. make argument an array
ALSO need to figure out if StackNode is a BVHObject and use that instead of the GLob (which is currently used)

0227
topologizer is wrong because it's ignoring single values.
and also it's creating tiles with flat heights
ghosts are not correctly moving across topology.

0221
fixed skybox
could be glob file
it's probably the glob file.

0212
Installed Node JS
Trying Phone Gap
Mono seems to be mostly for desktop applications.  It seems hard to make it cross phone.  

0207
 Added comparator to Bmap
 refactored vecx comparators
 added more functionality to sprite atlas system

 NEXT: Custom uniforms to shaders.
 
0202
Skybox (test)

Problem: sprite manager doesn't hold onto sprites.  Why?  But the TAC does.

We need to get the sprites out of the TextureAtlasComposer
	mkae method  TAC::getSprites() => Map<sirpte>
	
0201
Skybox

0131
Android NDK
Removed const_iterator from string since GCC thinks it is ambiguous.  We will have to check this in the future.
More debugging the BRO NDK build. Removed about 100 errors.
Added resources.dat for misc file resources.

0127
Thought & Wrote
S
Thought
Some work on movement

0124
Get Pay Stubs to lender
Ask Lender to increase price by 17000




0123
(_pQuadNode->_pGlob->_pBvhNode->_pX==0) && (_pQuadNode->_pGlob->_pBvhNode->_pY==0) && (_pQuadNode->_pGlob->_pBvhNode->_pZ==-1)


0122
Tile Sides

0113
Another massive triangulation of sides.  Fixing and doing sides.

01.08
TODO:
I change recursiveGenerate to only generate TileDefs
II on RecursiveOptimize filter out sides based on invisible stacks
III For each quad node get the Front, Back, Left and Right Quads
	a) if those quads are not available then pass NULL
IV For All Stacks Check each Side and:
	a) if both supports for a side are less than the supports for another side 
		i) don't show the lower side
		ii) set the side vertexes for the other side to be equal to the top vertexes for the neighbor side.
		iii) triangles are still quad based and the configuration is the same as the normal block tile 
	
	b) one support is equal to the other, but another support is higher or lower
		i) the lower quad hides all sides and the higher quad generates 1 triangle.
		
	c) both supports are equal
		hide triangles for both sides
		
	d) one support is highher than the other, but the other support on the other side is also higher.
		i) This is the tough case.	
			We only show 1 triangle for both sides.
			The center vertex of the triangle has to equal the correct offset of the other vertex.
		ii) physics planes may NOT overlap.
		
	Note: this algorithm will be per tile - so we only generate for the current tile not any of the neighbors.
		
		
	**NOTE:
		INSTEAD OF THE CRAP ABOVE
			it may be easier to just generate triangles per height value and configure them statically.
			this would 
				1) increase the number of triangles on a stack side.
				2) decrease the amount of clipping that needs to be done per triangle.
				BUT
				3) increase the load on the physics system
				**We should thus probably go with the former.
			
		
		
01.03
Object bounds are screwed up for globs so globs are getting bounds of 0,0,0 1,1,1 for physics and getting added to wrong nodes.
minor fix to line col equation
minor fixes to glob and physics.
fixed coolllisions between globs


2016 Begin
2016 Begin
2016 Begin
2016 Begin
2016 Begin
2016 Begin
2016 Begin
2016 Begin
2016 Begin
2016 Begin
2016 Begin
2016 Begin
2016 Begin
2016 Begin
2016 Begin
2016 Begin
2016 Begin
2016 Begin

2015 End
2015 End
2015 End
2015 End
2015 End
2015 End
2015 End
2015 End
2015 End
2015 End
2015 End
2015 End
2015 End
2015 End
2015 End
2015 End
2015 End
2015 End
2015 End
2015 End
2015 End
2015 End
2015 End

TODO: 
	remove the 4 triangle top config
	replace with 2 triangles and a tri flip.

12.31
generateCluster didn't split off the clusters correctly.

Generlly. we need to fix cluster generation

12.28
Old dmc load algorithm
1) generate all hierarchical nodes
2) send nodes ot generator
3) before generating bock node generator tries to load block node dens from disk
	a) filesystem gets/loads glob file if needed
	b) then get the dens from the glob file.
	c) if no dens - then generate.
	
New Vault algorithm
	Same thing as above except we will iterate over the Quad NOdes instead of sending them to a generateor	
	Quad node will hold all the density.
		We topologize each node into stacks.
	
12.27
removing densstate from all things

12.25
Lifting a TON OF DMC CODE for us to help generate the world
	1) lair manager
	2) dla manager
	3) glob files 
	4) file system.

Moved most of the code we need
WE WILL BE BROKE FOR A WHILE BERNIE

TODO: Fix GlobRegisterFile (compile) then try to fix FileSystem
	**We will need to rethink the Node Index Map.
	
12.23 - 12-24
nuttin

12.22
added rotational v - don't work and objecst fall through scenry

added model matrix to util sphere method and util meshes


12.21
Physics seems to work seamlessly.

TODO: Roll, and generalized reaction types.

bounce, roll, bounce & roll, explode, custom.



12.19
We can say physics is complete by adding a little frication to all objects o negate bouncing.

Edge COllide is not working but gets compensated for by plane collisions.


12.18
Reason for spheres not conserving energy - you have to include a dot product in the reaction equation to ensure that velocities that move away from the collision normal
don't get truncated - because they don't matter.

12.15
MAY HAVE FIXED PROBLEM - - added a virtual method to Plane3 which caused an invalid VPTR to spawn.  BIG MISTAKE
so---- MAY be fixed... we'll see
TODO: remove DebugValidTe(n) from PhysicsPlane3->n()

More notes on normal problem
	1) happens without adding objects to the world
	happens on first adjacent tile of first tile.
	
Accelleration must be limited to the distance between objects.  this way you don't add accelleration if there is no
space in between.
_vfptr for _faces is cdcd...?
20151216 - Note: for some reason we made the DTOR to Plane3F NOT_VIRTUAL **removed on all plane classes.

TODO: canera us now "digging" through planes.

There were 3 IDs set to only ONE ID on EventObject


12.14
NOTE: problem with normals could have something to do with phy planes being a physics volume
	TEST: try setting normal in phy plane to copied version
	**It has something to do with when we create the physics object OR the meshes
	
***NOTE: removed the reverse dir junk from sphere-plane - AND WE ARE NOW GETTTING STUCK
***COLLISION SYSTEM IS LOOPING 32 timew sCHECK WHY THE VELOCITY ISN"T RESOLVIING VOR ONE OBJECT.

Added edges **Seems to work

Implemented **wait for it** BOUNCE AND SLIDE

Fix for gravity "endless bouncing"
	Instead of adding gravity every frame to the velocity, instead add it AFTER every frame, this way
	you start gravity off with initially zero, then 
FIND OUT WHERE FUCKING PHY PLANE NORMALS ARE FUCKED
LUNCH: fixed issue where the position was getting set int he v collider!!
never set the possition in the collider - only set it at the position resouiton

fux bouncing
fix objcst faling throu world
	problem: its cause of easy outing the inner loop
	1) - can't test all objects against each other
	2) can't easy out inner loop based on velocity 
	
fix edges/points not colliding
	Minor fix.  Equation is mad.

FOI

12.13
*Fixed some of the collisions
	Problem was we were testing against OBJECT BOUND BOX instaed of SPEEDBOX in the node hierearchy - resulting in problesm

TODO: collide edges and points - objects are falling through planes because we don't collide with edges of triangles.
	
removed varoius client states
refactored a bit
Encapsulated vertex component stuff in VertexUtils - got rid of the other VertexUtils
added generic attributes to UtilMesh class.

did some refactoring on generic meshes
	changed indexbufferdesrciptor to indexbufferdata
	same for fragment.

Fixed memory leak due to contact box spec not getting deleted
	we delete it in mesh,  this is unstable.
	
	x and z are 40 for osme reason
	speedbox is way wrong.  seems to not be compensating for volumes.
	
**Plane normals are still messing up for some reason.
TODO: figure out why plane normals mess up and also set PhysicsPLane3::n() to be refernce
	
Added box util mesh.



12.12
Physics
**Removed return reference for physics Plane normal becuuse
normal is messing up somewhere

fix instancing cleanup and node cleanup

12.11
Physics
12,10

after bb collection but before physics iteration
create a dep map with A->B and filter out B->A
iterate through dep map
well worry about custom response later, right now we worry about physical responses


	

12,9
verified more physics normals are all unit
phy still fucks up
various phy fixes
sphere tri seems to work
sphere sphere response is boogered
thoughts:
should we only be updateing vecotrs for collided objects?
	No after frame there should be no vecotrs - all energy is spent each frame.

	TODO: set sphere elasticity and friction
	
	Problem: system is duplicating collisions for each object
	THIS IS THE PROBLEM

12.8
plane normal is almost zero
sphere velocity is zero or essed up somehow
sphere is stuck but manifold is not updating
likely we need to collect multiple manifolds? no shoudl be closest

12.7
REASON that we added quadnodes as BVH nodes?  SO they can be picked in sel manager.

removed lightsource dir since point lights are all that are really neeed.

TODO: implement factory create in texture manager.
got it to run again.  instance manager still * thisngs up.


12.6
note to self: do not store references outside of genericmanager because it will destroy objects and leave dalging references

need menu to sel tiles so
menu
picking

1) do not inherit any managers from GenericManagerNN
		Instaead create a Factorymanager with a fatoryCreate() and factoryDestry()
		which registres and unregistres the object.
2) we will then have 1 generic manager


2) move the delayed deletion of objects from bvh manager to generic manager
3) create ManagerManager
4) set managermanager to GC all unloaded instances.

massive dumb changes to instnace management

12.5
todo: remove glob from dynamic physics objects.
select tiles

12.4
add physicsobjectspec to phsyicsobject ctor - and all ctors
add it to modelspec

created nodeargs to facilitate easier passing of parameters to node instances

menu
12.3
removed intialsynchronizeallmodelboxes from animationmanagr


12.2
manifold creation algorithm
	reset bb
	
	animate joints 

	beg collision loop		
		compile transform hx (pos/rot/scl) << needed to update contact boxes and model box
		update model boundbox
			update contact boxes 
		expand by physics volumes
		create speedbox
	end collision loop
	



Not a huge deal when not passing specs, just get them and pass in ctor.
removed resource from BaseNode

We will need a control manager for GenericInstance to contorl

12.1
I) TODO: each object adds itself to its respective manager instead of calling "factoryCreate" on each object.
	Question: we would end up passing a bunch of specs into the CTOR.  How to get around that?
	Instead: Here is an option
		Pass only Specs into the Ctor.
		Or even pass a "generic spec vector" into the ctor.
		Then use Gu:: to get the manager (would be slow)
	
	
1) move update bound boxes to the physics manager 9uncomment
	must update bound box with EVREY change in position.
	
	in BaseNode/ Transform
	a. have a flag "matrix compiled since update"
	b. set flag every time user modifies pos, rot, scale, etc.
	c. if flag is not cleared, but the next frame hits, then throw an error.
	
2) creature: model node : physicsnode

3) add some kind of "teleportobject" which updates bound box when position updates


11.30
Note: Collisions can /should return multiple manifolds
merged AnimationNode with ModelNode - there was no reason to keep them separate anyway (no spatial node structure)
got rid of visitor pattern crap

SO
	updated animation manager to ALWYAS update model nodes
	therefore ALL MODESL NOW HAVE NAIMTION NODE
	consolidated + refactored aninmation node
	refactored Contact boxes

	PhysicsManager still not updating the correct contact box.	

	OK so problem is we are updating MODEL bb but not updating CREATURE bb. in updateAllModelBoxes
	Solution: Merge MODEL with CREATURE (make it part of the Inheritence Tree)
		this would be super optimal
	Then (later) take mesh/animation hierarchies and add them as sub-nodes, traversible.
	**Also update model bounding box on the tree level.
	
	
11.29
we need to be able to make custom character specs.
fix camera manager -> add character
PhysicsVolumeSpec Pv()
pv.x = 
ModelSpec mv;
CreatureManager->createCreatureSpec(

**Moved post init out of engine.

New rule: 
	for inheritence systems use Factory pattern to construct inherited classes
	for composition systems use Manager pattern to compose sub-objects.

BVH bound boxes need serious fixing
Mesh node hierarchy needs to go away in plce of TreeNode hierarchy
	
Factory Chain Pattern
	Manager<Object2>-> factoryCreate
		Manager<Object1> -> factoryCreate
			..
	Object2 : Object 1
	
	
Replaceing contact boxes with physics volumes.  Why the extra crap?  Not needd.

Also replaceing boundbox updates with it.

Physics system should update bound boxes.

Removed PhysicsWorld
Removed PHysicsCharacter


There are some BVH reparenting problems somewhere.

11.28

tile vert has at most 3 adjacent tiles.
when tile vert is CLIFF we don't do anything.

If the material for the tile is the same don't blend
If the mateiral is idfferent blend based on plane normal.

vertex
	v,vn, (in mesh - blend, not in mesh - flat)
	sprite idx t0-t3
	face normal idx t0-t3

11.27
Nothing
	
1126
Got ts to work and render

Changed:
	All textures require a BaseImage now - ( to avoid redundant image informatino)
	But the base imag may or may not be loaded.

Refactored texturing system Big time - removed all material classes except Material.h
put materials and textures into generic instance system.
normalized most shader names
	

1125
More
1124
removed _bUsingOpenGL from the gpu buffer copy. - we only support GL now.


1123

Framebuffer isn't bound is the problem.
Forgot that I took the hud out of the framebuffer rendering loop - because we were using immediate mode.
Oops
stb Fonts work

1 - Font "generator"
2 - Optimize the mesh drawer.  Perhaps even just use rasterization

GLScreenText --
GLFontSpec -
Simple - Replace GLFontSpec - with the stb fonts.
**Rename:
GLTextManager
GLTextFontSpec


1122
Font - omg font.
FreeType - too difficult so screw that. tried to get it to compile..nope.  it's a linux thing it seems.
SO instead 

Figure out why the position is being set to color in the shader.

1121
Big day
1) Removed all basic OpenGL matrix math except for perspective projection (TDOO)
2) Removed most render debug objects and replaced with UtilMesh class and UtilMeshGrid and UtilMeshAxis.
added normal matrix to model view matrixes in shader.

TODO: 1 - implement Projection matrix in our matrixes

1120
Started implementing VS Solution parser.  Quit. 
Fixed some romulus bugs.
Started to fix the RBPROJ file to distribute my builds.
Then what the hell...just enabled /MP in visual studio... simpler..  build is about 3-4 minutes.  Not toooo bad.  I could get 4 more cores if I updated my machine.

TODO: Replace nmatrxex.

TODO: make CreatureNode subclass ModelNode *** creatuernode is essentially a modelnode.
TODO: integrate mesh buf VectorEx<MeshBuf*>	_vecChildren with TreeNode (one mesh per node)

1) create test raster2d matrix stuff. - test matrices first 
2 remove Raster2D class (comment out) so build breaks
3 ) pass camera into GLFrameBufferManger
	add methods BeginRaster, EndRaster to Camera
	Camera->beginRaster()
		> store the current View and Projection matrixes
NOTE*** Make sure to remove glGetFloatv from GlslUniformTemporaryClientStorage::fill

TODO:*** Move Light matrix into code.  Make a _ufLight matrix uniform to pass it in.

**ONE OF THE VERTEX TYPES WAS MESSED UP!
1119
TODO: directinput mouse is wrong for high DPI

note: changed normals in model shader to use vertex.

OMG FOUN FUCKING PROBLEM
I WAS USING THE TRANSFORMED POSITION OUT AND WRITING TO BUFFER. DUMB. DUMB. DUMB. (should have used untransformed position.

We want to get the coordinate of the object relative to the camera, not the global coordinate? No we want the world space coordinates.

so. model and view matrices are implicitly concatenated
the only reasonable conclusion is to get the model matrix by multiplying the modelview by teh inverse.
essentially we need to keep the gluLookAt separate.

THen - finally lighting will work because we can correctly translate the model point by its model matrix and get the world space point.

TODO: test out the lookAt matrix.

1118
Added VCREDIST 2015 to spark install.
moving crap out of InputAvatar since PhysicsObject takes care of it all.
	**Note: InputAvatar is stilll used as a laison for inputs... not RALLY neaded but.
removed control + shift + etc from KeyComboTrigger to allow just the keys... no need to check for simultaneous states..
finly got movement working cuz of my dumb fault of adding velocity thinking it would be zero (dumb!)
REMOVED A TON OF MOVEMTENT FROM InpuTAvatar, etc
REMOVED A TON OF MOVEMTENT FROM InpuTAvatar, etc
NEED TO FIX SHADING.

1117
Physics bound box vs object bound box?
there doens't seem to be a physics bound box. and the bound box doesn't seem to relate to it.
how do we compensate?
	
Slept all night zzz.

1116
	** pstrb error is due to passing c_str() in the argument list WHY????
	
	TODO: create mesh for deferred renderer from the mesh generator.
	IN FACT - move all render utils code into the deferred renderer.


1115
porting to 64 bit today

	Removed Math namespace from Game::Math;
	Setup to use VC14
	Set assembly to only compile in x86 
	MSVC14 doesn't compile x64 assembly.....sad day :(

	//removed t_int, t_long, etc for 64/32 bits.

	*** Commented out DbgHelp, PsApi, tlHelp32, shlobj

	Got to run *
	Got to debug
	Replaced vorbis library
	Normalized imports
	
	**** HACK **** added some _v... crap for dxerr in main.cpp
	
	******commented out pstrb.*****
	******commented out pstrb.*****
	******commented out pstrb.*****
	******commented out pstrb.*****
	******commented out pstrb.*****
	
camera is technically a creature and it should be inheriting from creature so we don't need 2 input schemas.

	
1114
removing branch root to use project filee path as root
other romulus fixes
combined fiels

*** is bound box absolute?  shoudl be.  check this with both physics and visible boxes
	todo: expandphysicsobjectbox: make absolute.

ALSO: how to use creature spec with camera?  we need a creature spec it seems.


1111
ProjectsFile.cs
BuildConfig.cs
BuildGuiSettings.cs

Instead of build directory we pass project file iteslf

More romulus updates
Merged BuildConfig with Projects file which now is AWESOME and allows us to 
just have 1 file for projects.  The GUI settings file still remains which should be independent.

Got a build to almost work.

Agents will need to be reinstalled.

TODO:!!! Fix the references in the proj file to point to the correct VS version. (all versions for /include, etc)
	POSSIBLY PUT THIS IN THE BUILD GUI SETTINGS.
	AND AND AND THE MICROSOFT SDKS

1110
1 - add custom registry keys to spark and add the program path.
2 - use REG command to get value in batch file.
WORKS - got the program working. Had to use the task scheduler to start it at startup.  
NEED to fix problem where program might stop after 3 days.

how to deduce to lambdas - 
1 - plain ol function
2 - function opbject (functor) - a class with an overloaded () operator
3 - lambda - deduced to a function object.
4 - closure - a compiler generated functor, assigned to a variable, and created as a lambda. (a closure type is in fact a compiler-generated function class)
ONLY reason lambads are good - you can scope them within functions and thus hide functionality.

TODO: combine the build files into 1 file.
Also - romulus is broke

1109
return multiple options
Added shortcuts to installer
Added multiple parameters to installer
HACKED installer by loading shortcuts then loading htem again during install 

You can use task scheduler to run the program without anyone logged on.
schtasks

1108
more romulus
more spark
more physics fixes

1030

1029
Got romulus service to install & batch files.
Removed /o build path switch

Romulus is dying on startup for some reason.  must find log file for romulus.

1028
Note Make sure to run the UNINSTALLER when you uninstall not the INSTALLER

1027
fixed problem note:
	GetTIckCount in .NET is NOT the same as win32 because it is unsigned.  IT FUCKS YOUR SHIT UP.
	So changed that across the board to use unsigned.

Added DeleteFile and ExecuteSync to Spark installer

1026
Slept

1025
Changing physicsplane3 to reference vertex arrays instead of using its own data.

1024
CTL + SHIFT + D - go to file (changed)
CTL SHIFT Q - go to definition
added session prefs for build gui
added multiple settings for build gui (need for new fury project)

add project name so we can identify buidl project
more physics

1023
More paypal integration

1022
- more paypal integration
- started "Fury" prototype.

1019, 1020, 1021
all the shit hit the fan with PCI. 
coded system to work with paypal
going to cancel Converge and US bank service.. fml.

1016 1017
Spark Installer Redux

TODO:
	Set reg key in the installer and UNINSTALL if key is set.

1012 1013 1014 1015 
1) Download app
2) Prod Test.
3) Fix Rifle for Prod.
4) Rifle Installer

TODO: 
	1) Fix new tab in email DL link.
	2) Add ALL TXN info to database after CC purchase
	3) ACTIVATION request is not logging why?
	4) Help Page
	5) Fix Index Page

1012
.htaccess images folder has to have rights - allow from all 
other folders deny from all
**ALSO: permissions must be 711 NOT 700
**ALSO: permissions must be 711 NOT 700

1007
Implemented transactional DB

DELETE FROM ACCOUNTS WHERE email =  'america971@gmail.com'

New process for apps ( machine - independent)
1) generate serial from SHA-256 of 
	a) upper( email address ) . product purchase date (in ms)
	
	**Save time stamp on LINE_ITEM
	
	** __ append the LINE_ITEM ID padded with 10 zeroes 0000000000
	5     10    15    20    25    30    35    40
	xxxxx-xxxxx-xxxxx-xxxxx-xxxxx-xxxxx.00000-00000
	hashed key                          line item ID
	chunked key
		xxxxx-xxxxx-xxxxx-xxxxx-xxxxx-xxxxx
	raw key
		xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
	
	
2) store this serial in database
	store serial on the LINE_ITEMS
3) send this serial to user
4) user enters email, serial
5) up to server, run activation
		fulminationinteractive.com/auth/auth.php

1006
Create a "Please Wait Screen"

Save Invoice
Save Account
Send User to confirmation page
Display Receipt
	Thank you page.
Send Confirmation Email
	Add hash code and Link to app
	Add security code

Download App
Run Auth

TODO: insert record for CC auth request.

1004
Creating Cart
need to fix
	Order, Line Item, Invoice, Credit Card
	 
1002
Rollover Images
	Help Button - rollover help.
	
0918
LEarned Aes, OpenSSL and Rijnadel today:

text sent over the web is iso 8859-1
AES must pad strings using the PKCS7 padding method

text, text, text
final resolution:
	Convert everything to UTF-8.
	Convert from UTF-8 to 8859-1 in PHP
	Send to OpenSSL
	Convert back to UTF-8
	On client read string as UTF-8
	
0917

TODO: Privacy Statement.
TODO: Refund policy.
TODO: Copy sheets.

TODO: Program activation.

Spark Installer

0912..16
Rifle / Fulmination.com / et

0907
Need to put speedbox on physics volume << ** No because
the volume is only one of a collection o fvolumes - must be on object.


0905
Removed Master volume from physcis volumes.

TODO: put staticMeshProcessTriangles() on the MeshVOlume instead of the physicsoebjectg



0904
Some changes to DMc
Changed physics volumes to use reference positions

0822
LOL LOL LOL LOL

Ok John.  We're back in business.
	Build Time Unmodified: 3s.

Okay so protus was taking forever  I think I know why
ONE OF THE MACHINES HAD AN INCORRECT BUILD TIME.

0815
Fixed more stuff in proteus. Especially corrected VS file open.
Changed more in the generic scenegraph system. SYSTEM WIDE CHANGE.
Created Transform class

0814
Finally got a compile

Base node already was using matrix (duh)
	we moved it to BvhObject3

0813
Try to get some BVH stuff to work

0810-0812
Phd. Obsession

0809
Added matrix
Tried to get video (porn) watcher to work for romulus.  Huge waste of time.  It works somewhat.  Disabled it.  forget it. pointless

0808
Proteus: Crated CRC32 for newtork packets. Probably fixed some bugs. 
		 Still having problems with network in UpdateAgents().  Seems to be coordinator only.  Too many threads?
		 Seems like VS2012 Update 4 has fixed the "cannot find sal_h definition" problem
Bro: Fixed some of the Boundbox bugs

0806
SOme changes to build gui.  Runs a bit smoother with F5 and better colors ,auto scroll error into view treeview, and buttons on taskbar.
0803
sad, debugged. okay should I use FastBuild? CONFUSING ASF.  But it promises blazing fast builds, plus
don't have to maintain.
In the future, yes.  But meantime.  Removed libs from build.
Whole build runs by linking all 700 objs into file. fuck libs. who needs?
Result?
Total rebuild time: 1 minute.
Build without changes 1 minute
Full build? = 6 minutes.  Linker takes 2 minutes.  What happened to agents being faster and doing a 3 min build?  must have turned something off.

0729-31
Various tests.  Designed cor.  Did not much.

0727
TODO:
	Create timeout thread for all commands.  If they take too long kill their handle.

0725
Problems:
	out of memory in build gui
	some agents lose processors - fix fo rthat is to reset them.  Not all agents reset - we need to reinstall all agents.
	libraries are slow to build now WHY they were fast before?
	EXE is slow to build 1xx minuts
	some problems with loading previous log files which may be adding to the out of memory

test works for building exes and libs on main machine tho.
got agents "per file" to work.. sorta

0720
Service installed on all machines - build time is about 5min.  3min for rebuild.  this is good enough.

0720
changed service to network service

0718
TODO: ALso we weill need to allow clean to delete subdirectories.

	FIxed dmc  error - woerker threads wasn't creating its own logger 

Milestone - 
	**FIRST SUCCESSFUL ROMULUS BUILD WITHOUT INTERRUPTION**
	**SUCCESSFULLY DEBUGGED WITH BUILD**
	**DMC RUNS WITHOUT ERROR**
		0622 - 0718 - almost 1 month to get it to work :( Like 180 hours.

0717
OK
TODO: separate project files and directories (instead of just tmp/debug/win32 
												now it is
												project/tmp/debug/win32
												project/bin/debug/win32
												project/lib/debug/win32
												
								MutexHandle is duplicated in bro and dmc which overwrites each other's obj and ilk
								This could also be the reason why DmcObjectSpecTable is hanging.
								
0716
Compile errors due to access / write errors all the rage these days

ok problem solved
CL was creating the file 
WHILE LIB was trying to access it
It was a problem with build steps.

For some reason CL gets hung up on compiling the last file..DmcObjectSpect table.  The file compiles fine on
its own.  It might be some glitch in agent, or it could be the command text we send to it.

Link failing.
OK it was  vorbis...my fault for building it with 2008. need to rebuild with 2012.

PROBLES
	ONE problem still remains - the last file isn't getting compiled for some rasosn.

	ALSO - we need to have a way to free processors on agents when we kill unexpectedly or else agents end up
		isolating processors

	3 - add agents to GUI
	4 - add agents to compiler command line
	5 - add ability to kill ALL agents in GUI.
	6 - add ability to restart all agents in GUI
		
	BETTER
	7 - Implement agent as service
			sc \\machine stop service 
		- easy
	    course debugging would be a bitch
		
0714
Fixed link on client.
compile errors due to access

0713
THere was a problem with project dependencies not getting their dependent projects as build targets.  fixed this.
We need to be able to link on the client.  For some reason some of the commands are faillng possibly due to this.

0712
TODO: clear build output




0710
Wrote Build GUi

**Problem with build
	We aren't building because there is a command line switch that is interfering,, but
	there is a problem with the process itself which it isn't getting any output.
	weird.

	
	
0709
GREAT SUCCESS
	Yesterday - 30 files in 1 minute for 10 cpus...
	Today... 30 files - 32 seconds. 4cpus..
	I removed the extraneous crap that i figured was causing the compilations to hault:
		Before   command prompts were run to run  VCVARS to set the environment variables..since we have to
		set vcvars to run CL.exe but... Figured it was probably the having to wait for messages ASYNC which was causing the compile issue as all 4
		threads were maxed out the processor was probably overhauled and would push the threads  to the bottom of the priority list - thus they
		don't finish until many seconds later. 
		When you run something from a started cmd.exe process there's a hacky way you have to get the output...
		For this reason I did some research and found out how to set enviornment vars with Environment.SetENviornmentVariable and also figure
		out how to set the output..simple all we did was let cl.exe process and exit.  THANKFULLY CL.EXE RUNS THIS WAY.  Or else we may have
		some problemos.  Okay here are some stats
		
		MONDAY
			Tested - Full build took 1h 30min
			
		WEDNESDAY 
			Installed incredibuild which took a total of 9m:30s
			Spartan - 17 Minutes.
			
		THURSDAY (Today)
			Implemented new command process and the results...
			1) Incredibuild on 4 CPUS: 630 files, 9m:30s
			2) Spartan build on 4 CPUS: 730 files (commands),  12m:31s
			3) Totally Reasonable, Now... 6m:26s - but without link
			4) AND WITH ALL MACHINES = 8 + 4 + 4 + 2 CORES BUILD TIMES IS  3m:42s
				Incredibuild hits 3:30 MINIMUM 
					
			It appears
				/Gm
				or 
				/GL
				Slow the compile down a lot. -- fixed this later with separate pdbs per file
					
0708
Instead of using cmd etc just run the 
	cl process and use GetProcessByName to determine how many are running.
	Then with this allow us to throw more of them out.
	
	VCVars is a problem tho..

0708
** UNCOMMENTED TO NOT USE STL WRAPPER
** UNCOMMENTED TO NOT USE MEMORY


0707
about died

0706
command history
various fixes
MUST RUN THIS AS ADMINISTRATOR ON WIN7 IN ORDER FOR IT TO WORK

Ok and ... multiple pcs are not building.

TODO: 1Reset the agent (entirely, state and all)
		after we drop the agent (agent is disconnected) in coordinator.
	Later
	6 - Put poll for new agents on another thread.
	
	**Build completes before all files are finished - this must mean that there
	are files pending and the bjuild just cpmlete s
	
0705
Coudl not compile for a while... got bored.. then figure dout the problem.
	WE CANNOT REFERENCE A PROJCCT in the /I INCLUDES OF THE SAME PROJECT BEING BUILT.  Do not include /i"\dmc" in the dmc project ect.
	
still need to fix the problem with libs not being children of the dmc project.

The way we are returning build steps is incorrect
	We remove them from the tree -instead
	they should be put into a pending state.  
	
	If some of them were pending but we reach teh end of the tree then we cannot distribute files at present.
	but if we reach end of tree and none are pending then we are finished.

0703/0704
Okay so there is a problem with libs / links
	We need to supply files to lib/link in order to not have the thing f uk cup
	so in order to do this sb needs to know the files that go into making links and
	libs... so we can parse the commands, or add them as a list before the command.

	1 - get next command
	GET_NEXT()
		if command is link / lib
			loop_all_dependencies()
			if dpeendencies are good
				command = link/lib comand
				return command;
			else
				if stack has size
					command = GET_NEXT() //recursive
					push lik/lib back on the top.
				else
					throw error // all files compiled but we can't make link/lib..something went missign
		else
			return command
			
	Otherwise we can wreite out a file dependency list to the makefile.
		we weould put it in a REM comment. 
		we would have to typify REM comments like REM #DEPLIST or REM #SWITCHES
		
		
0703
Another axiom of network programming.
	Slow down the message loop in debug mode.
	500ms per message helps so you can see what is gonig on.
	
	
0702
Lesson learned...
	For some reason .net tcp was conveniently chopping my packets off for me
	leading me to believe that tcp wasn't a stream protocol.  Many hours of debuggin
	to figure out why there was such odd behavior.. then i looked at the buffer once and
	saw multiple packets in there.  That was the problem.  It reminds me of the crap
	I wrote for ESI and how one of them wasn't working... well now I know.

Fixed screen glitch on green laptop.  It is good for testing now.
	
0629
Nothing today.
adc

0628
	When I change thread timers the data gets sent more,
	but for some reason send() and rcv() so simple functions.. they are not
	getting or sending all the data but why?

	this is a complete cluster fuck

	...starting to explore additional build ooptions.

	Looking into how BuildPal works......And...finally figured it all out... i could simply have used the comand line process on
	remote machines.  Recoding this whole thing again
	Recoding
	REcoding

0626
Some Philosophy of Networking
	A) Volume
		1) you cannot send the same data again over the line unless you get a response that the data was received - the reason
		   being the data may overflow the buffer on your end.
	B) Synchronization
		1) you can either have commands in order (send / wait) or out of order (send a bunch, wait)
			a) send/wait  - slower but more organzied process, easier to implement.
			b) send a bunch of crap - you will have to stamp your packets and search through your requests when data comes back.

0625
Ok so.. got all things to seemingly work except the command line...
There is one current problem.
	QueryState is getting called which is outside the main Server's loop to check for
	client messages, so the server is getting "Compile Complete" messages when it is querying
	the client's state (the client is not sending in order.  THe server may send  "Query State"
	but the client may be completing a compilation and send "Compile complete" so the server gets
	a "copmile complete" when it is looking for a "Query stae"...  So we have to make query state 
	non-blocking and move it tot he loop.  Im spent
	Another 5 hours.  We are at about 22 hours.

0624
WhatevAAA
	SO..after a bit of thought..I built my own dependency tree 
	It was simple.. we only needed to regex match the #includes - expand them..etc simple.
	Took 5 hours.. 
	Note: Additional <inc> includes are a bitch to parse and they take forever because we recur with
			each file... So they are disabled by default.
		
0623
More Dist build
Got the compiler to work from C#, Also linker

compiler client  - 
	send both compile AND link commands.

OK so we hit a rut
got compiling working on client.
we can send files.. update local branch..
a little work we can send back OBJ files..
we need to send only modified .cpp files, which isn't that hard, BUT THERE IS ONE MAJOR PROBLEM
we also need to send modified .cpp files that depend on modified .h files...
so we have a problem here..

the only option I know of is to parse all #include<.*\.h> files, build a dpeendency tree and include all files in that tree above the selected item.
We would need to check #pragma once to make sure.
We could really screw up the build doing this...  not trivial.
OH WAIT - and we have to get the correct directory path of the H file RELATIVE TO THE CPP FILE LOCATION AND EACH .H FILE LOCATION

class dependencytree
for all c/cpp files F
		for all lines L in F
			Regex.Match(L, ^(\s)*(#include)(\s)*(\"|<)([a-z0-9\._-~]+)(\"|>)(\s)*$
		for all h files H
			parse all h files in H
			
		NOTE: if H file has a <..> syntax we would need to parse
			  locally included H files.
			  if H file has a ".." then include locally.

Looked into MSBUILD... complicated.. and it doesnt' seem to give us
the kind of dependency checking we need.  Maybe this is hopeless.. maybe i should just reinstall
windows 7 and try again.
	
0622
Thought about it.. and decided to make a distributed build
Worked on distributed build for 5.5 hours straigt..little sleep
C#C#C#

0621
Fretted
Huge build errors
Wasted a day trying to figure out why vc wasn't compiling -
BUILD IS BROKE
PROJECT IS BROKE
SOUL IS CRUSHED

0620
Large chunk memory problems happening in "AllocTopology"

**Removed _bUsingOpenGL test from GL BUffer system..really..we don't need it..

**Basically fixing awareness and memory leaks in order to do multiplayer

** FATAL BUG - we were calling delete vertex arrays on VBOs ** and well because
	the OGL system doesn't throw errors on invalid deletes... we werent deleting any
	thing from teh GPU.  FUCK MAN

**FOUND THEM
	Further found bugs
		1) Transient block wasnt getting deleted (same ol thing)
		2) When blocks exit generation they weren't getting their dens data freed, nor were they getting deleted
		3) even loaded blocks.
	
**Now to fix
	Somehow we have multiple globs stuck in a single cell manifold..
		NOTE: globs must exactly correspond with cells since awareness is in the engine and generally
		we deal with cells not globs when it comes to bvh awareness.. and to unload a cell we also want
		to unload the correct glob.
		
Added multithread parameter to engine setup

Some fucked up shit tom
	So... OS Memory was fucking up why... I DKNT KNWO - 
		the most random reasn
	SOOOOOO
		ENabled MM_MEMORY agin... and it FUCKING WORKS.\
			whyh..idk
			
**Created allocator class for vector, map, multimap
		
**Prettied up /net

MANIFEST FILE IS NOT ALLOWING APPLIATION TO RUN????
	can't load the msvcrt library properly... for no reason...
		Reinstall VS2008
		Namespace conflicts
		delteted bin bin bin bin dbg etd etc etc
		DELTEED ALL VCPROJS
		new dmc vcproj..
		BUILD BROKE
		
0619
Bug Smash Day
trying to debug memory deallocation problems
	looking into event manager & event object classes (why they register wtf? too generic)
		enabling memroy manager again to debug this crfap
		some errors enabling..
		
		uncommented the exception in mm_realloc
		
		memory manager realloc is troublesome
		..no point using memory manager.
		
Fixed texture maps to not reference images anymore (images are freed)
	Freed up about 32MB of memory woo.
	
**Added short circuit to finish generation
	
	Engine init = 50,000 Bytes Of heap memory - not worrying about it.

**Creating ability to debug multiple threads on one thread.

**Sound has leaks in vorbis file (and others)

0618
!For some reason adding lights causes the globs to unload!
Exception is due to clearing obj node manifold in while loop

Added "orphan" block nodes.

Not sure we fixed the bugs in unloading..
	Unloading doesn't seem to actually free memory...

Added Memory debug & GPU Memory debug.


0617
OFFICIAL CROSS PLATFORM TEST #1
	Dad's Laptop
		ATI has problems.. lots of them. 
		**MODEL ANIMATION

		remove shaders from gpu
			copy over GisThread
			Remove Animation
				Make sure to copy out char repositioning code and placing in the main loop
			When parsing uniforms check for gl_NumWorkGroups and print a messsage saying how dumb ATI is.
			
		Got it to run but visual problems
		texturing is way skewed and off.
		some parts are black - pixels not drawn (why? idk, maybe dpeth buffer issue)
		
	Lenovo
		Blocks getting stuck in generator
			We are running past the gen point and blocks aren't getting the opportunity
			to generate - they are right there howeeevf
			
		Memory leak somewhere - FIXED
			Progressive performance issue - frames drop slowly over time
				Possibly a vector / map not getting freed
			Leak Test
				commenting out
					animate models is doing it
						Fixed - Problem was glFenceSync was not deleting the sync object after creating during animating
		
****Adding Destroy (unload) nodes*****
		Okay, so.
		Say we are running a server instance of this application
		How do we know whether a player is or is not on topology when
		we have unloaded that topology?  Question..  Do we just keep instances
		in the server for every player?  What about monsters - do we simulate
		all monsters in every location and keep them persistent?  
		**There must be a way to compress the level information so that we can unload topology & c but keep monsters
			perhaps turning the Dens Values into something like a minecraft map, and putting the monsters somewhere in the dens field.
	
		objects need to unload to destory nodes
		Persistent / Transient object distinction
		**Must remove pyhy globs from physics
		
			
0616
Fixed error from yesterday - A texture was bound to texture 0
Game design & ideas.
New Game
	MUD / Minecraft / MOBA
Working on getting this to work on other laptops
to test out multiplayer.

ADDED _ENABLE_RUNTIME_DEBUG_CHECKS

0615
Fixed block topology wrongly making "whole" blocks (now it makes use of the full dval range)
Normals fd up now beasuse some verts almost share the same location

**Needs 	

Problem with porting to laptop:
Installed DirectX
Installed Latest ATI Driver
	**Even with Old Hardware the New ATI driver Will
		simulate OpenGL 4.5 so thats good.
	*WE GET TO CREATING LIGHTS (glDeleteBuffer) AND CRAP OUT. SEEMS RANDOM
	 COULD BE THREAD ISSUE.
		
Polishing		

somehow text doesn't render in color & same with hud
	siugh
	
rgba of screen text and hud is 0 why?
	
	
	
0614
Got deferred lighting to work 
& implemented some uniform buffers
release build....
	TODO: adding lights to BVH manager**
	Conditinally adding them to the light manager and 
	**disabling lights that are too far away.
fixed release not rendering

WEIRD MOIRE PATTERN IN LIGHTING
LIGHTING LIGHTS BACKFACE!!



0613
need to add lights to bvh
	need to colelct objects from bvh visible set
		need to sort objects in bvh

todo: bind lights buffer to deferred ps shader
	enable some point lights for testing.
	also test colors in point lights.
	do point lights have default color?

		
0612
Fun day (for me)
User SElection SEt
	generalzie visibleset
PLayer placement with "p" key
	implementing sleection
		when player presses P he places the player character at the selected position
			**Need generic selection to accomplish this (for both terrain and objects)
	
	More accurate cube distance.
	
		Selection
		refactored physics
		more refactoring
		Player position was MESSING UP because of some shit in box generationg
		MADE PHYSICS VOLUME SHARE POSITION WITH BVH NODE
		"player placement"
		player volume is null
		node not eing found
		the node is created at 60,60,60 min WHY?		

	OKAY WORKS ** BUT THE COLLISION VOLUME FOR THE CHAR IS FUCKING HUGE FIX IT
	nighnt
	
	**ALSO - it would be good to share bound box data between createure and moasdel
	
0610
fixd parser to peroperly parse floats
some more to the max exporter (this afternoon during LUNCH)
SUCCESSFULLY LOADED CHAR MODEL DIRECTLY FROM MAX WITHOUT HASSLE INTO DB
(Skin is messed up AGAIN (phew) but we can fix it)
changed model renderer to use deferred lighting
**ALLOWED FOR MULTIPLE ANIMATION TYPE SUCH AS MORPH**
**NOTE: if models don't have their animation data loaded or theere was an error loading the
		animation weights (for exmple during conversion mapping) then the model will load as a static mesh	

0609
creature types
max exporter fixes 
export objs works (as a max obj)
more streamlined saving

0608
put some parameters in engine
thought about discrete games
fixed gen a little
BLOCKS ARE GETTING STUCK IN GEN (SEEMS TO BE EDIT ONLY)

0607
Glob divide is slower after adding the extra mem check
NOTE: removed empty nodes from the block splitting algorithm because it was mesisng up.  Now we write nodes even if empty

0606
Only creating ghosts for chutes

0605
"State" isn't getting called
hiding/shadowing not working

0604
thought about more ways to generate in a sliding frame kind.
but did not employ them rest was helpful tho
0603
Confirmed gaps are due to not storing dvols from walkers - not any kind of screw up in
the topology THANK GOD 

Now to get ghosts to continue to other glbos


0601
TODO:
save / load ghosts as walkers

0530
Removed sky
It seems the problem is the transparent topo is copying the opaque topo.

Fixed Alpha -
	Problem was triangles were writing OPAQUE topology as well as transparent.
	Needed to make som strange stuff happen to separet them.  We now use materials in topologizer.
	ALSO - fixed blending of alpha along repsective axes.

0529
NOTE: -- Fixed player position in the world at HackAnimatieCharacters
ALPHA debugging / water

0528
Transparency Cull Trick: 
	For drawing transparent objects - 
		enable front face cull, disable back face cull
		draw
		enable back face cull, disable front face cull
		draw
		ONLY WORKS FOR CONVEX OBJECTS
0527
TRANSPARENT WATER YES YES MOH YEA BABY

0526
begin transparency hackiness
**MODEL VIEWER**

0525
early in the morn:
Refactored obj loader
Additions to globalutils
Load windows bitmaps
Created model view exe (doesn't work yet)
Painted dude model.
Thought about the cheese.
Fixed / Broke block editing.
Various other tweaks.
DataStrings file.
Refactored all of generation.
Refactored functions to make way for transparent triangles.
Changed density algorithm to split transparent and opaque values.

day
todo: fix block editing
TODO: fix the lair file to take an cube volume min and cube volume max.


0523 - 0524
Fixed Block edit somewhat

0522
Fixed normalizing images to remove seams
Flood fill plane 
and general flood fill
fixed top materials

TODO:
	Ok so we should just iterate over the whole cube radius - who cares about square-ness.
	because we don't get a large enough area for the player to move in and it looks like SHIT
	**Iterate cube-wise.
	also fix water.

0521
Flood plane feature
Added water texture/material

0520
Plan: implement transparency
	1) implement spawn point.
		a. create spawn object item.
	2) have some function to transport to spawn point.
		a. ctr + T
	3) Set water dens to randomly generate.
	
0519
Where do we store features?
	File? Glob
	Glob Register has Fetaures so long as the feature is something that has to be stored
	e.g. the feature is not a landform.
	OR
	OR
	we can store the features separately but referneced in the glob as if we were going to store something we
	grow - or how we wanted originally to store objects.
	
	Add world position of feature to a map. - where is map stored?
	
	PUSH PULL and TAKE are generic actions, but not all objects succumb to these actions.  You can't push a granite slab.  THus
	we fall back to having a single action that applies particularly (changes the character's behavior) based on how he would use the
	item.  But hten we have to think about how we go about thinking about creating items?
	
	SMOKE / ACID areas
	Smoke / Acrid - the area has an odor that you cannot get past
	ACID / BOG - you cannot get past areas that are pure acid.  If the area has a material around it then you cannot
	carve into that material
	
0517

0515
How to separate walker rooms
	Store spheres / volumes in a lookup tree - actually store their bound boxes.
	Then check bounding boxes against others in the tree every time walker walks
		if bound box collides then move walker backwards

2 methods of generation
	1) generate via a percent chance each time we need an object.  I.e. generate based on whether
	a random number is in a range ,or it matches another from a selected range.
	This makes it impossible to know the total number of objects generated.
	2) generate the number of objects first based on a min/max range. Then distribute them
	over the space where they are generated.  This requires us to calculate the generation
	space first.
	3) generate with an increasing probability function that necessarily requires the number
	of specified objects to get generated.

IN order to avoid overgenerating we have to implement collision and space checking algorithms or else
the algorithm runs amuck.


0514
lair creation and lari file

0513
Lair creation and lair file

0511
The lairs are going to be generated with "lair walkers" which allow us to define exactly how
many globs each lair will traverse.  THis is impossible to do with perlin noise beause
we can't gauge the next random value.

Also it is possible to integrate MOBA with this game.  We have latches and switches and puzzles and such
and the teams solve the puzzles and such. 
Then they fight.  There are spawn points and camps there as well.

0508
Lairs Lairs Lairs
and also..Plans

THe question running is how to link rooms with puzzles so that we can have one seamless system
for generating either puzzles or rooms.

1) generate all initial globs
2) find player spawn point - which should be logged when it is generated in the DLA


0506
Mat File / Lairs etc.
We want to make the game as close to home to Super Metroid as it can be, and also combine the cave generation
in minecraft to crate teh metroid-like levels, while maintaining the creative aspects of RCT.\

New ideas for generation
1) give the generator a single set of puzzle objects.  The interactivity between the puzzle objects is known to the generator. It
creates then a graph of objectives and then over that graph it generates the game topology  -similar to the UTG adn NTG graphs.
2) we create a virtual player within the maze and cave generation system.  The virtual player is known to the generator.  The virtual
player interacts with all of the switches and such through the course of the world and the engine follows the virtual player
along in order to complete the game.
3) there is one or more seamless generation lines. The WORLD LINE is the seamless generation line - but the world line is simply
to the generator a graph that has no topological breaks and it can be envisioned as either a cave-like system or a room-like system.
4) each lair is given a set of puzzle objects to work with and a maximum number of uses of those objects.  It orders them and their end
effects (such as their manipulation to the environment).  And it creates blockades along the perfect world line in the form of doors,
walls, crawlspaces, etc.


0501
Lair File
Lairs Design

0428
Fixing NO HIT cubes.
Repro solved: 1.5h
	It is the 0,0,0 cube of blocknode not getting hit.
	First index of VOG is starting at a number instead of ZERO.
	Yes it wasn't - vog calculation was wrong for first cell (was using cell-cell now using cell-0)
	
0426 
Yeah we did it.
All square sin the BT cube have their own verts now
27 => 48 max vertexes
sucks but what else can we do when verts share normals and you can have opposite faced planes attached to a vert?
	
0425
Added both fixes for normals.  Screw exta verts for now.
Seamless generation 
	
	Glob Walker Profile - saved to glob
		walker x, y, z int32[3]
		last volume rng state - int32
		last volume type - int32
		last volume parameters - 
		
0424
NORMALS FIXED EXEPT FOR ONE DAMN NORMAL - ZED - opposite faces
	happens for both C13 and the Faces (such as C22)
	Generally if we have an exact opposite in the way of normals then we are screwed. the normals
	will average out to zero.

	**Also screwing up tex coords. ** NOT
	ACTULALY NOT - because if we use faces they are fine. HMMMM. It's just the normal influence
	of the vertex normal.

0423
More Normals Debugging
Fixed the plane indexes which were messed up.
Normals still are wrong.  Seems to be partially a cross-block-node issue.

0422
Putting freaking planes in order in array which screws up ((WHY??)
We had edge indexes wrong. Edges correspond to squares.  but the indexes were off.
	
0421
	Ok Had an idea last night how to do textures on both side and top of cube differently like minecraft. HUGE VISUAL APPEAL YEA.
	Implemented this morning.  So easy to implement.
	Works but it is ugly since the traingles are hard.  SO Figured that the Normal Deviance that blends axis textures togher must be used
	using VERTEX normals and not FACE normals (we wsere using face normals)
	**TEXTURE MAPS NOW GO BY 2 TEXTURES PER BT CUBE.
	SO
	Set out again to fix vertex normals.  Inevitably this will also fix all the lighting problems also.
	Problem found.  we are iterating over the v buffer. THIS IS WRONG
		we must iterate ove the faces. vertex normals aren't computed yet!!!
		removed color from vetex - replaced with _c
	Algorithm deviesd.
		array of [27][8] => [0,12] which tells us which faces are "on" in the cube.  We also
		store a bitset of 12 bits corresponding to Square face 0-12 in the cube (there are only 12 square faces, 24 triangles)
	Implemented
		This needs to be debugged.
	
	
0420
	Fixed GLOB SEAMS.  The problem had to do with the algorithm used to iterate over globs. and me just not understanding exactly
	how globs will overwrite each other	It was just fucked there is no real explanation.  Sat down to solve it.  Solved it.  Next thing.

	More and Better Ideas
	
		1) GRAPHICAL MISSIONS
		The whole game is based on a sort of mathematical graph of space-time missions.
		All missions are points in the caves and we generate them in parts.  Usually they involve the player
		to go from one part of the cave to another - to find some thing.
		We can record the missions in the player's "log" or something that gives him information about what missions
		he is currently accomplishing.
		
		**WORLD INTERACTION = THROWING
		2) Secondly the player will have 1 kind of weapon - throwables.  We only throw things a short distance and we can
		get greater throwing power based on the TYPE OF ITEM WE THROW AND NOT THE PLAYER LEVEL OR SOME BULLSHIT.  For example
		throwing a rock =
						hard - so it can damage things,
						yet, destructive so it can break things that you need intact
						yet, throws far
					bit of wood - 
						doesn't throw far.
						can be lit aflame and thrown
		3) COLLECTIONS
			COllections are cheap.  We need to figure a way to make them more attributed to advancing in the game.
	
0419
	****FIXED Z TEXTURES
	Okay so the problem wa sthat glvertexattrib converts to floats automatically so
	we have to use glVertexIAttribPoiunter - integer
	** so there were two problems generally
	1) glVertexIAttribPointer
	2) the vertex class was not indexing the components in order. - so redid vertex_v3.. class
	
	**Newest problem: Cube values aren't blending correclty
		because they aren't correctly implemetnd.
	
	There must be a problem saving
	There must be a problem savingThere must be a problem saving
	There must be a problem saving
	**
	5 steps after hitting bp
	line 302 is wrong - says neighbro is 0 0 0
							neighbor is actually 0, -1, 0
	
0418-0419
Fixed problem with the skewed z textures. Sorta. there is still problem somerwher
	Short story. We were passing in integer for type to the Glsl attribute.
	the vertex auto-generate system was **.  Had to reengineer some stuff to change it.
	This still doesn't fix the damn cube values not blending.
	
0417-0418
Optimize Day
Successfully got a 5 min initial generation time down to 10 seconds.
	1) instead of growing the glob memory per block a glob preallocation was implemented
		so we don't have to reallocate on every block.
	2) the method to get the glob string was slow so cached that by putting null in the glob list during generation.
	3) the block node indexes were taking forever to insert into the map so turned that
		into a static array O(1) search time and it doens't grow in memory.
	4) Inlined all the filesystem routines, and others.
	**another optimization which will help the whole engine is to optimize the intersecting density copy routine.

	**Inflate is also still slowing generation down.
		One possibility to speed up inflate is to remove it.
		we create a "memory blueprint" of all the blocks we will need to copy.
		then preallocate the amount that we need.
		then copy all the header 'b' bytes.
		then we simply copy the blocks without having to call inflate()
	This is alsot he problem with normals
	
	Vertes are shared only in between cubes.
	
	
	
	
0416
***HUGE PROBLEM WITH VAO	
	wasn't unbinding VAO after glDrawElements
	because of this the VAO was getting modified / disabled in other stages
	always unbind VAO after drawElements!
	
Changed location of Menu system so that it doesn't interact with deferred lighting.

	**commented out copy neighbor glob blcooks
	**commented out writerawablcoknode

For some reason the crap is generating again
	Neighbor vols aren't updating

	remember to comment debugCheckIdx 


	
0414
Fix texture bindings for deferred lighting

0412
Fixed seamless!!!!!!!!!
block copying was getting opposite C27 so copying wrongly.


0411
we need to force system to generate 000 glob first!!
refactored semless
0410
	Neighbor Volumes
	***Added debug only cfreating nodes x000 and 0-10 - clustergriod
	**_DEBUG_SINGLE_GLOB_STACK - turn on/off
	GlobRegisterCache class
		just an extension of map
		
	apparently unseamless globs was due to initial globs not generating properly
	
0409
Some of the crap is because the face normals are wrong.
Moved compute shader stuff into shader base.
	plane normals are not showing from CPU to GPU - they should be pink in our test
	**Plane normals are now fine --ssbo worked - we had to use the 

	**confirmed it is the bump map (again)
	bump map has complete bias for some reason. perhaps because it is tiled.
	**static / random bump map still showed bias in the + direction (opposite) for some reason.
	
	1200 and i have to work tomorrow but
		IT IS FIXED
		the problem was so stupid.  we were normalizing before applying the shader conversion which resulted in 
		effectively normalizing a fully positive value
		The fix:
			Vec3f v(fH1, .8/*(fH1+fV1)*.5*/, fV1);
			v = (v*2.0f)-1.0f;
			v.normalize();
			v = (v+1.0f)/2.0f;
		I just wasn't focusing on what the problem was.  The other problem was bad face normals which is now fixed
		Yet z-axis texture warp is still a problem.
		
0407
MILESTONE ACHIEVED DAMMIT
	Normals now look good
	Face normals were never a problem!!!
	Textures fixed - the cube based averaging was a problem.
	***Player centered light is still off due to bump normals	
		Possibly we need more fixes to bump normals

	Note; changed bump normal algorithm.
		
	TBN Matrix looks legit
	It is time to try to "perturb" it with bump normals.
		
0406
Problem with bump maps not totally resolved - 
	The bump normal when scaling is in the -y direction for the WHOLE map - thus all planes are black
	we have to figure out how to make it in the +y only	
		TEMP SOLUTION: fH+fV /2 
			This allows us to view it but causes a "persistent depth" problem where the map looks like bubbles
			scaling the factor down to 0.5 - TEmporary work around.
		
	**Position subtraction still produces invalid results
	*****BUMP MAPS FUCK UP EVERYTHING - EVERN VERTEX NORMALS****
	VERTEX NORMALS ARE FINE
	VERTEX NORMALS ARE FINE
	VERTEX NORMALS ARE FINE
	VERTEX NORMALS ARE FINE
	VERTEX NORMALS ARE FINE
	**Bump maps are the problem.
	
	*Seems to be like the sobel filter causes the bump map normals to bias in one direction.
	******THE REAL PROBLEM	
		the real problem with the normals is the textures it appears the
		ndp.x; blending is causing them to be blackn
		bump normals are not affecting the "black peaks"

0405
Single point light	
	it was on the wrong side of the plane DOH!
	
*There was a serios
0404
made mc blocks 1 unit
commented out glob::generatecluster dat
Started deferred lighting
	Like a boss
	or like a tard
	
There is something wrong with bump map normals probably due to the bump sobel filter routine
	**also light doesn't like being negative - on the negative axis for any reason why?
	**The added clamp value still shows the partial hemisphrere weird.
NOTE: 
	added CLEAR debugging in endFrame() in postprocesro
	added debug in meshindependent::Draw	
	commented out skyplane manager Render in mainroom

	BLENDING - was the problem
	disabled blend for Dmc
	also**
		char pos is off in shader (somehow)
	
0403 Fri
Inlined a lot of code
Placement System
optimized sqrt, test, and assembly leearning, sadly at runtime sqrtf is very much faster, however my rsqrt is faster.
also optimized block edit, nodes were taking FORDEVER to link.  fixed it :)
there is still a 1-3s lag in debug mode however - where it comes from?? idk

0402 
Hemisphere room walker

0331 Tue
Fixing more of the coherent dla
fill_n was filling mat for qty (in reverse) so swapped makeDval.  it appears that first members are lower in memory

0328
Got rid of clusters for just using globs (same thing).  Makes life simpler.

grid is going to need the edge redundant values.  This is for when we copy nodes ove.r

0327
I was sick last night.  Epiphany was short lived.
After much work last night (sick) and this morning, removing all the
redundancy information I realized that i HAVE to have redundant dens because the
cubing algorithm requires neighbor densities.  Interstital topology between block volumes
cannot be created without each volume knowing of its neighbor's edge densities.

Still tho we can remove normals if we want.  Also the extrusion stuff of vertex 13.

The sad thing is the independent section-wise generation requires us to display everything
in blocks..like minecraft or roguelikes.


0326
There is a problem deleting the Walker Specs.
OK Im done.
Im done with it. with the fucking dependent gen
Who cares if it takes longer I'm removing it 
IM DONE WITH DEPENDENT GENERATION IT HAS CAUSED
NTOHIN BUT HEADACHES AND PROBLEMS
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
Okay so.
Removing dependent gen
And also turnign off the Cluster system
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
Running a test of flat shading first

0325
TODO:
	1 check if clusters are created before generateing them in ClusterGrid
	2 copy shared boundary dvols and shared boundary dvol information in DlaManager (Glob Boundaries)
	3) Dvol Pos is incorrect because glob pos can be negative 
		we have to do the subtract bullshit we did before with dens values.
	
0324
DLA
Created base grid / walker / works.
Creating way to save Dvols to disk.
Also, new Dens State - SolidCompressed
0323
Created dla Cluster file.  More Dla Design.
0322
Sound is clicking Fixed
	Problem was the vorbis file.  
	NOTE: solution was to zeromemory the vorbis file sound buffer before passing
	it to DirectX
	THIS IS A MINOR PERFORMANCE BOTTLENECK
	The buffer is zeroed every time we query it.
New DLA system desing.
Idle Processing


0321
Remove ALL Disable GL_TEXTURE_2D  it is no longer suppported in core profile
Added single enable GL_TEXTURE_2D in the texture manager.
Moved uniform parsing into uniforms class
**PROBLEM POSSIBLY FOUND** Uniforms data passed to GlUniform was going out of scope so it was sending random data to the shaders.
**
****Implemented DLA classes to test dla speed in glob cube generation.
	idea is to generate all DLA when glob is generated.
iterator state problem in generic manager made deleting a pain
	instead of iterating, just check for size() and set iterator = begin() in a while loop.  this way
	you avoid state issues
	FIXED you must assign to iterator
	
0320
commented out drawelements calls
	in gpubuffer manager (2)
	in drawlistGL

0319
clearly something to do with the program
changed the vao bindings generally, need to change them in other palces.  
changed them in the sky manager.

TODO: VAODATA GetVetexArraystate
TODO: UNCOMENT BLOCK PAINTER, Fix the VAO for block painter
removed begin / end draw from glrendersystm

0318
pretty sure it is in the shading/vao system.  
basic rendering works within the framebuffer
ok so _ufViewPos isn't getting parsed
fixed some slight shader bugs but still

In this case we have to have a shader bound to the whole mesh pool


0317
not the framebuffers and such
things just arent blitting to screen

0316
commented out menu manager*** in New()
**Commented out

***rendering now fucked because of changes for menu manager******* - FIXED

0315
Pick Manager
Pick Targets and color

0311
Stupid texture ordinal is not correct - we need to use individual sprite ordinals, or a 
//combination of ordinals from sprite/anim/frame to get the corect order.

0310
UI
0309
UI
0307
UI

0306
Note overworld_max_y_height exists in pnoise also.
We need a selection system to select materials.

TGAS are stored upside down!
FIxed anoying tga bug.
Texture Atlas Composer

03.05
Ok dude problem is this:
when we copy the neighbor dens but we are iterating over the same modified blocks.
We shouldn't have to copy any but dens to new blocks.

Landmark: **Edit works.  Sadly it is slow.  Edit is off.

Next Steps
1) materials must work.  Select change etc. that's easier
2) inclusion / solid gen in order to place structures into the world we need included generation.  Block nodes must intersect
with other block nodes in order to generate new dens values.

How to do structures?
	Begin / End structure	
		When user edits a block that falls in teh way of a structure we take the MOD PT
			search for all structure bound boxes
				iterate over intersecting globs / divide them into BN
					check whether Mod PT is included in the structure's dens vales
	Structures saved in \struct\xxxxxx.struct
		Dens values are however also saved to globs.  
		structure files just tell us what the structure is.


03.04
only the dtop dens for some reason!

ok so main problem in gen underworld is the BVH node is > y.  we should use BN but that's not the real prob prob is
BN was GEN when it really wasnt' blocknode:607

Modified gen so we can keep densitys even for solid nodes - it was deleteing solid node dens.

Awareness is now all screwy

3.3
Problem is we're not creating a perfectKernel for each block when we run the 
create algorithm copyIntersectingBlockNodeDensity must have kerneel, must be perfect and have no invalid dens or else
edit fails.



3.1
image cache

removing position and bound stuff from glob - in phsics
MUST MAKE SURE BOUND BOX ON GLOB IS CORECT

Fixed physics fallthrough - bound cubes were incorrect and not consistent across glob/cell

2.29
texture atlas cache
various bugs

2.23
PictureBox
	Texture

Default pipeline shader needed.

2.20
Modified eventobject - fixed ref bugs
new vertex format
Added MeshIndependent class
RenderLayer class 
digbro loho
did we fix that node having no ref bug? yes dumb bug

2.19
Problem with strange junk - the editor is incrementing the vector in the wrong direction, or
whatever and it is creating (negative)? data int hat dir.

It seems like when above +y adding shows holes
when -y removing shows holes.

got rid of blockreq and old lock stuff

WOOT Blog Groups imp + work  just 2 hours


2.16
More text fx
Polished / finished textfx (sorta)

ZG Model
2.15
More text fx

2.13
fixed sourcegen
textfx manager
hash map 32, 64 bit
std string wrapper

2.8

2.6
Engine config file.
Fixed memory error in block mm_allocator::shrink
Generic instance manager
	added to camera manager
	
2.5
couple of bugs, headers reorg, cleaned generator, tested bedit no luck
Todo: bug in deleting block nodes from block node file.

2.4
attrib _tx_x, y, z not found
attrib _tx_x, y, z not found
GTab no array size

2.3
Minimum Dist:
	Glew32.dll
	glut.dll
	SDL.dll
	
UGH OK
	Dmc runs ok when the release is run in the solution, DOES NOT run ok outside the VS environment, fixed - logger did not initialize _bEnabled variable
	
Ugh OK
	Min SSBO binding points is 8.  Mobile device is using this.. so we have to fix animate_model_vertexes.
	
	
2.2
Reset everything
Got it all workin.
	**NEW PSDK (2010)
	**NEW DX VERSION (2010)

still fucking error 6.  fuck.
Fixed error 6. It was caused by using the wrong hdc ptr in the function - which was invalid - duh.

	
2.1
Gpu errors - transient block isn't deleting
Code is way slow for release build.
error 6
error 6
error 6
error 6

WTF IS GOING ON

GPU MOBO FUCK UP

Installed new win7
Install new DX SDK
Install new PSDK



1.31
Changes to xpj. 
consolidated xpj files.
added /dev
added /hardware
added DebugHelper

1.29
KeyFrameList was leak.
FontSpec had no DTOR overriding so its dtor wasnt called

TODO:
Make sure SKnFile is being deleted
Make sure MotionTree is being deleted.

Copy joint / jonit tree implemented
Joint Tree problem is still not fixed.  ther eis some problem when we copy the tree.

Still memory leaks at 200 bytes a pop and 24 bytes a pop.

Commented out createRoomById in room manager

****Entire room wasn't getting deleted.

**** WOOOOOOOOO reduced 70000 leaks to 5000

1.28
Tits
Tits
Tits
Swee tTits
Got rid of most memory allocation problems when starting / shutting down.
There was a problem in	
	physics manager wasnt geting deleted
	Meshe Specs werent' getting ddleeted 
		The Mesh spec system was screwed - we had no reference system like the Hx System, so created a reference system so that MFac deletes the specs by default
			NOTE: we now reference _engine static variable in the mesh spec in case the fac wasn't specified in teh cotr
	Server thread werent deleting their messages causing HUGE leaks.
	HudManager wasn't getting deleted
		hence all fonts
	Framebuffermanager not deleted
		Problem
			deleting framebuffer manager deletes some of the textures
			why?
	LibFileData wasn't getting deleted
		So staticBuffer wasn't which is HUGE data.

Got rid of all leaks greater than 9999 bytes
	
TODO:
			font spec is not getting deleted
			this is the reason for the 1024 byte leaks because of _charwidthtable
	commenting out GetTextExtentPoint32 seems to have changed the location.
			
1.27
Could be block nodes causing alloc problems.
Fucking sigslot wasn't using virtual dtors.
Added Delete for:
	InputManager - was getting shadowed
	ObjFile - wasnt' getting deleted
	ObjFileData - wasn't getting deleted
	SkinFile wasn't owning skins, 
	WeightTable wasn't getting deleted because skins weren't getting deleted or somthing.
TODO: check 33611
	
1.26
Some nodes must not be exiting generation correctly.  They get their "generating" flag set but it never gets unset.
OR
That is still true, AND The block node createOrfind routine is returning the wron gnode.

TODO
if the given node  is empty
	if it was consolidated
		then create the gd dat
	otherwise
		gen regular, load from disk, prevent user from modifying.

1.25
Optimization: Dispatch Copier / GisGen is only copying one block per frame after it is complete!!
reduced -> dens - when block comes in
reduced -> vog - if there is topo - synchrequireddat..
reduced -> cp
reduced -> topo
Tested both teh selection code (node division).  The problem is in the gisthread somewhere.

Memory Leak somewhere in DispatchCopier.  Allocating is OK but it is
not freeing ~4KB of memory.  What did i do when thi shappened bfoere?

**Raycast failing or off, could be due to title bar addition.

1.24
more shit.
block edit kind of works
log class edits.

OK so dens editing is consistent, but we cant edit, why? because you have to add dens to values above the one you're
editing if that dens is full.  So we are going to need a volume editing method.  We just loop through all 

Todo: finish the selection stuff that shows where we are going to edit.
Buzz is still riding.
Derek out.


1.23
Raycasting works agian.

1.18
Need a way to drop chars into the scene.
Chars will then work on the terrain.
But first need a way to edit terrain without chars WTF
Player edit terrain
Thus we need to move the mouse and can't move camera with mouse
Thus we need to change the camera to be the rts camera
Use GUI HUD to chnage camera - dev only - nah
Just push C - but we need a way to enable and disable this

Camera input isn't customizable.
created InputConfigFile - not used yet
implemented PlaneCamera
created QuadraticAttenuator
Need a menu for user to click "edit" or "free camera"

1) Press B
2) Bring up main menu
	i) freeze camera view - disable rotation
3) Graphic Button shows
4) Click Button
5) Edit Mode -> Place block
	i) Left click place
	ii) Right click delete

GameplayStateController
{
	_state
	update()
	{
		if KeyPress(B) then
		{
			if state = menu then
			{
				state = free camera
				camera->allow mouse rot
			}
			else
			{
				state = menu -- lock camera
				camera -> freeze mouse rot
			}
		}
	}
}
				
HudManager 
	override somehow
	yet, somehow put graphics in buttons 
		huge overhaul
		
1.17
Note: Changed neighbor_v27_c27_count to add 1 to each index

1.13
Need generic way to change camera
	So, lookin at Script again
	
1.12
Next: 
	Block Edit.  
	Node Unload.
Todo; swap arguments in allocator::grow()
we are not gettig isGen =true when loading lbocks

	Accomplishments:
	**Volume Limitation implemented - we only generate so many MC cubes in the +-Y to speed up generation
	**Glob Register Implemented - Globs now save / load to/from disk

1.11
TODO: make sure that std map is ordered when we update all the BN offsets.

New Requirements

	1) Fringe Blocks - blocks that are cap -1 
		i) This may not be needed.  This only makes sure normals are correct.  They're not correct anyway
			so who careZ!
	2) Cap Blocks - capped blocks - the end of generation.  They only generate the + or - y .
	
	Accomplishments:
	fixed performance
	quickprof - cprof, prof
	wglMakeCurrent - very slow if chrome or firefox is open.

	NOTE!! - disabled mutex locks on the muex map in globals and thread storage.
	NOTE!! - disabled mutex locks on the muex map in globals and thread storage.
	NOTE!! - disabled mutex locks on the muex map in globals and thread storage.
	NOTE!! - disabled mutex locks on the muex map in globals and thread storage.
	they were slowing us down tremendously.

1.10
Memfile needs testing
Ugh.  performance

1.9
Tonight i want to get started at least, and perhaps finish one of the following:
Block Edit
Glob Register

1.7
Okay memory fixed, and modes load. Good. 
Next problem: Block nodes individually take up 1GB of filesystem data at 300,000 nodes but 
only take up 15MB of their own data. Slow to delete and such.  So, we need to use
glob registers instead to group the file pointers to as few files as possible. 300 instead of 300000.

1.6
Dealing with huge memory problem.
Added "size" constraint to memmory checks. That helped a lot.
Found the problem myd umb ass was initializing a memory block to the wrong data size & adding it to free map.


1.3
deadlock everywhere

opensemaphore
	DELETE | SYNCHRONIZE,
	FALSE,
	

1.1
Implementing Uniform Generation
	No more redundant/reduced blocks.
	all blocks uniform
	dvol data in blocks overlaps, but it is worth it.

Threading screwed up


2015 Begin
2015 Begin
2015 Begin
2015 Begin
2015 Begin
2015 Begin
2015 Begin
2015 Begin
2015 Begin
2015 Begin
2015 Begin
2015 Begin
2015 Begin
2015 Begin
2015 Begin
2015 Begin
2015 Begin
2015 Begin
2015 Begin
2015 Begin
2015 Begin
2015 Begin
2015 Begin
2015 Begin


2014 End
2014 End
2014 End
2014 End
2014 End
2014 End
2014 End
2014 End
2014 End
2014 End
2014 End
2014 End
2014 End
2014 End
2014 End
2014 End
2014 End
2014 End
2014 End
2014 End
2014 End
2014 End
2014 End
2014 End


12.31
Need to fix generator for old volumes.
Gonig to move GPU generation to CPU generator while we are at it (might as well)
Threads will suck.
Need to instantiate a bunch of threads to test them.

12.30
Filesystem woot
Read / write works
file tree probably not needed
Pretty quick

Windows throws filenotfound error when we
check for file.

12.28
Design room system
Add texture to gui
title screen

Title screen works simple KB input.  No mouse clicks.

12.27
Disabled memory  manager.  not worth it.

Thread shared memory is broke. For some reason there's  a ton of bugs in shared.
Having to allocate memory by thread which.. sucks

Recap on design.
----------------------
-   13 Steps Total   -
----------------------
ENGINE TASKS
--1) Fix CD. Characters must collide with topology because that is broken.
2) Then offload the topo to the CPU.
3) Get shadow mapping to work for all objects.
4) Get the visual state into an rts-like camera angle.  
	i) Fix fogging so fog shows at a further distance.
	ii) Show gridlines over the topology.
5.1) Fix GUI 
		i) buttons must allow for callbacks.
		ii) Allow for textures on the GUI.
5.2) Editable topology. get topology to edit under mouse and design the system for editing it. This will greatly push towards having an rts-like environment.
		i) Design a dig tool that the player can click on to DIG. 
		ii) This is in the GUI.
6) Update character rendering system so we can have multiple characters. 
		i) This system is partially in place.
7) Fix physics system 
	i) Characters don't walk through each other or thorugh objects.
	ii) characters must move smoothly over edges.
9) Get Saved Generation to work.  We must be able to offload saved data to the disk.  Once saved we can then import density data and use it in the topology.

--
GAME TASKS
1) Building identifier. create the identifier for square strucutres once built. this way the characters know where to go.  this will take a while.
	i) structures must have a door and be an enclosed space.  From the door we will march left and right into a cube and that will be the space.  we give up marching after too many recursions.
2) Create a single base type "character" male and female.
3) Implement AI design and (ID, EmotionComplex) so that 
	characters create collection and bartering tasks for themselves.
	collections add to the player's build inventory.
	Player can also modify the topology to increase his build inventory
4) The base of the game is complete after this.
Note.  Water isn't really needed.  It is nice to have and increases realism but it isn't needed completely. if so we can always use "water cube" object
Note. Contact system doesn't seem to be really needed for this.
Note. Shadows.. not really needed totally. 

Need a better structure for bvh adding.
Fixed missing node.  The node generator wasn't adding a listener to the bvh before creating nodes.


12.25
Fixed a memory leak with glSync.  Memory is stable yay

FIxed a ton of win32 and thread errors.

There is still a problem with deleting hte thread message queue.

12/23
Just crap put an octree into the cell structure.

KdBoxTree3

Stores boxes based on the HIGHEST PARENT they collide with in a KD tree.
wouldn't work

boxes store per node.
	behind
	front

if a box intersects a Kd Node, then both sides of the node must be searched.

node creation metric?
weighted mean of min/max points along the kd node axis.
	for x - number of box points along x
		i.e. 10 points along  which is 5 boxes, divide at point 5
		* * * * * | * * * * *
			n = num boxes in current node * 2
			sort boxes by x/y/z value
				get median
			
Storing each box component on an axis seems tempting but it seems like we could do that hierarchically
			

12/22
Okay so trying to figure out how to deal with static objects in the collider
theymust be treated optimally with KD or B tree
r tree 
m tree

Models must be unified with physical objects.

Fixed dumb OS thing where dispatchmessage throws a window error when PostQuitMessage is sent in an invalid context.

thinking about "MVC Destructor"
where you have basically a boolean 

added BMAP

some refactor

Models --> Rendering / cull
Volumes --> Physics / cull
Animation --> Animation

Instance System Design
Game Manager Design

12/21
Physics object is now bvh object and avatar
Physics character is now physics object
Glob is now a phy glob.

Physics objects are now characters
	ai V			ai V		  model V         physics V	  input V	 scenegrpah V	bvhV    events V      events V   memory
CreatureNode : PhysicsCharacter : GameObject : PhysicsObject : Avatar : BaseNode : BvhNode : EventObject : Sigslot : Memory
	
Optimally
CreatureNode : GameObjectNode : ContactNode : PhysicsNode : AvatarNode : BaseNode : BvhNode : EventNode : Memory
    ai          model             contact         physics       input       scene       bvh       event     memory
	
	
12/19
Use GLRenderProcessorDepthShadow to encapsulate framebuffers, textures and shaders for rendering in the customscene-  


12/17
Bound boxes were broken got them to work
2 things
1) Contact box + bound box generation can be done on Gpu
2) Model node does NOT share bound box with mesh node - we need to change this
boxes are curently copied

Boxes work.

Sat Extents algorithm APPEARS to work.

set glDrawBuffer to GL_NONE nothing is going to showing


12/16
Seems like we have a SAT crush algorithm. Light Frustum looks OK.

had to add dumb check for LHS system when creating frustums
**THIS MAY NOT APPLY TO LIGHT FRUSTUM** CHECK THIS

NEXT STEP:
	we need to add an object to the BVH object manager
	this may require us to add movement-node update logic to make sure moved objects are contained
	by the correct nodes.  this may already be in place.

	
12/15
Ton of memory bugs
bugs in light frustum projection DO NOT USE FLT_MIN DUMBASS USE FLT_MAX


12/14
Threads work woo.
not exactly as i want... Had to create a new heap. tehre was a problem with the sub-heap.

REMOVED Synclock from memory allocs - works
AUDIO - works now
TODO
TODOTODOTODOTODO
TODOTODOTODOTODOTODO

There is a problem with TryAquireMutex in the IThreadBase message loop - it will return true for both threads
then there is a thread collision problem.

TODOTODOTODOTODOTODO

12/13
FUCK MEFUCK MEFUCK MEFUCK MEFUCK
FUCK ME
FUCK ME

Problem was that threadevent didn't inherit from mm_memroy AND we didn't implement the virutal dtor

FUCK ME
FUCK MEFUCK MEFUCK ME


12/12
Managed buffer works vectorlist workos
so.. problem is manipulating different shit in the thread when we "synccopy" events
so.. solution to problem is to have static buffer we clear with a "bit"

get mutex
do operations in shared fixed size buffer.  do not change buffer allocation.
clear bit
release mutex


12/11
Audio system is FUCKIN NICE
**Memory eerrors fixed
**CANNOT USE STL CROSS THREAD
All handles cleanup verified in ProcMon
*Threads still have problems cleaning up.
**MEMORY FREE PROBLEMS

Changed queues to VectorList in Audio Processor 
now there's problems all over.


12/10
still thread


12/9
Okay still doing thread
Memory errors
Fixing audio

Testing playing lots of sounds at once & events.
mkaing sure memory cleans up


12/7
Basically the thread is still running when we exit and trying to access memory after the memory manager has deleted all
of the other memory managers.  but this shouldnt happen....mm_mgr shouldnt delete other mm_mgr in other threads... pry because
its static data but..?

Fixed memory errors
implemented map in memory
std::map slower than my memory imp

diggy dig

TODO:
create thread server on the client
cast it in the ThreadProc
put reference to client/server in ThreadBase
call copyMEssages(thread*) with respective thread to/from on **client thread** update.

12/6
Very Slow.

Shrted out GisThread->update
Shorted  out shadowMaps()
Shorted out 

Enable thread manager
Enable Audio thread / implement it
Then enable GIS thread

12/5
Threading Manager
(note: why threading manager un...)

12/4
Orthographic projection implemented but needs testing.
Problem:
We need near and far planes for the collection equation, meaning 
we need a frustum for it, yet we also need the equation to extract the near and far planes.
So, the soltuion is probably to:
	create a near plane of 0 distnace and a far plane of some arbitrary distnace like FLT_MAX.
	then do visibility
		get min/max distance from point
	then create frustum.
	
12/3
Okay so we want to do shadow maps but have to 
fix dumb visibility bug in the BVH before we can do that or else
shadow maps wont work and we can't debug them.

Wow dude.  Just said "just do it dude". And guess what.  Solved it in 5 minutes.  I was passing th eroot node
to the cull function.  So... yeah shadow maps AWAYYYYY.

okay basic framework in place now....

12/2
Fucking Shit
Fixed texture resize
now textures have to recreate upon window resize.

11/19
Topo is seamed partially due to face normals.
Added 1/32 pixel width to the texture UVs.
Also lighting looks ugly
	Doing v normals..
			
--OLD 11/xx--
Removed Indexer

X - Short Circuited the Phy Glob collision Collector. X - Removed short circuit

Short Circuited the other thing that prints to console

changed dens to use 4 bytes instead of 16

Need to remove the gen trap in gisthread X REMOVED

fucking incorrect patterns
231
303
135
Added 2 more traps in gen loops. - removed traps

gpu gen  is trapped generating orthogonal verts  - removed

Triangle winding for Z face were reversed - reversed order
X face vertex ordering was flipped - flipped

Top / Pat work

Reduce is the current problem

Problem seemed to be that there was no memory barrier after the topo shader ran and before calling
the compute dispatch for reduce.  So the data was invalid.

Pat had a problem in the point_inside fn - fixed
Reduce now sets the correct values

Reducer Index calculation is messed up - probably returning negative.
1112
Implemented static gen vols in the generator - reserves static volumes on GPU so we don't have to double allocate.

Indexes and normals are now screwed
Reduce is generating invalid data.  could be  abufffer synch issue, BUT pat/Topo works fine (static buffer shows valid data)
Problem was the Gen Buffers were not allocated with the correct DVOL size.  
Fixed!@!!!  The Generation works and is barely playable.  Need to speed up generation.  
GPU shows 99% Utilization with not even 10% memory used for 15k allocations.

It was so slow.  Problem: Gpu hates looping.  It appears that GPU stalls on a single invocation before continuing all other operations.  so it will stall on one core.
Changed the TOPO section of algorithm to use multiple local invocations.  Execution speed jumped up 10x !!!!!!!!!!

Working on dividing the reducer.  Reduced vog is screwy

Using the vertex indexes (0-27) in order to index the texture coordinates.
	tex coords will be hard coded [0,1] based on index.

fucking texcoords - bt cube.  a ton of logic.
	still not showing
		added tcoords x,y,z to vertex	
			now topology is blowed up.
			tcoords are probably not aligned 4 correctly
			actually they are not!
fixed.  NO IDEA HOW.  But it appears that just putting the texcoords on the vertex caused this to work.  Maybe the TC we sent to the shader were not aligned to vec4?

