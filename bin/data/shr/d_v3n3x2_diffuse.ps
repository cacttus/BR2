#include "d_global_ps.sh"

uniform sampler2D _ufTexture0;//diffuse 
uniform sampler2D _ufTexture1;//bump 

in vec3 _v3Out;
in vec2 _x2Out;
in vec3 _n3Out;

void main() {
	_gColorOut = texture(_ufTexture0, vec2(_x2Out));
	if(_gColorOut.a <= ALPHA_MASK) {
		discard;
    }
    _gColorOut.rgb *= _ufDiffuseColor.a;//intensity
     
    //Light Matrix transforms the normal from texure space into world space
    
	mat3 mLightMatrix = getLightMatrix(_n3Out, _v3Out);
    vec3 tex_normal = normalize(texture(_ufTexture1, _x2Out).xzy * 2.0f - 1.0f);
	vec3 bump_normal = normalize(mLightMatrix * tex_normal); // ** NOTE: XZY ** For bump maps.
    
    _gNormalOut =  vec4(bump_normal, _ufMirrorPower); 
    _gPositionOut = vec4(_v3Out, _ufSpecHardness);    
    _gPlaneOut = vec4(_ufSpecColor.xyz, _ufSpecIntensity);
    _gPickOut = _ufPickId;
}












