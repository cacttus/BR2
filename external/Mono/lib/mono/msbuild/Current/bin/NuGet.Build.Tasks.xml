<?xml version="1.0"?>
<doc>
    <assembly>
        <name>NuGet.Build.Tasks</name>
    </assembly>
    <members>
        <member name="M:NuGet.Build.Tasks.BuildTasksUtility.AddAllProjectsForRestore(NuGet.ProjectModel.DependencyGraphSpec)">
            <summary>
            Add all restorable projects to the restore list.
            This is the behavior for --recursive
            </summary>
        </member>
        <member name="T:NuGet.Build.Tasks.GetProjectTargetFrameworksTask">
            <summary>
            Determine the project's targetframework(s) based
            on the available properties.
            </summary>
        </member>
        <member name="P:NuGet.Build.Tasks.GetProjectTargetFrameworksTask.ProjectPath">
            <summary>
            Full path to the msbuild project.
            </summary>
        </member>
        <member name="P:NuGet.Build.Tasks.GetProjectTargetFrameworksTask.TargetFrameworkMoniker">
            <summary>
            Optional TargetFrameworkMoniker property value.
            </summary>
        </member>
        <member name="P:NuGet.Build.Tasks.GetProjectTargetFrameworksTask.TargetPlatformIdentifier">
            <summary>
            Optional TargetPlatformIdentifier property value.
            </summary>
        </member>
        <member name="P:NuGet.Build.Tasks.GetProjectTargetFrameworksTask.TargetPlatformMinVersion">
            <summary>
            Optional TargetPlatformMinVersion property value.
            </summary>
        </member>
        <member name="P:NuGet.Build.Tasks.GetProjectTargetFrameworksTask.TargetPlatformVersion">
            <summary>
            Optional TargetPlatformVersion property value.
            </summary>
        </member>
        <member name="P:NuGet.Build.Tasks.GetProjectTargetFrameworksTask.TargetFrameworks">
            <summary>
            Optional TargetFrameworks property value.
            </summary>
        </member>
        <member name="P:NuGet.Build.Tasks.GetProjectTargetFrameworksTask.TargetFramework">
            <summary>
            Optional TargetFrameworks property value.
            </summary>
        </member>
        <member name="P:NuGet.Build.Tasks.GetProjectTargetFrameworksTask.ProjectTargetFrameworks">
            <summary>
            ; delimited list of target frameworks for the project.
            </summary>
        </member>
        <member name="P:NuGet.Build.Tasks.GetReferenceNearestTargetFrameworkTask.CurrentProjectName">
            <summary>
            The current project's name.
            </summary>
        </member>
        <member name="P:NuGet.Build.Tasks.GetReferenceNearestTargetFrameworkTask.CurrentProjectTargetFramework">
            <summary>
            The current project's target framework.
            </summary>
        </member>
        <member name="P:NuGet.Build.Tasks.GetReferenceNearestTargetFrameworkTask.FallbackTargetFrameworks">
            <summary>
            Optional list of target frameworks to be used as Fallback target frameworks.
            </summary>
        </member>
        <member name="P:NuGet.Build.Tasks.GetReferenceNearestTargetFrameworkTask.AnnotatedProjectReferences">
            <summary>
            The project references for property lookup.
            </summary>
        </member>
        <member name="P:NuGet.Build.Tasks.GetReferenceNearestTargetFrameworkTask.AssignedProjects">
            <summary>
            The project references with assigned properties.
            </summary>
        </member>
        <member name="P:NuGet.Build.Tasks.GetRestoreDotnetCliToolsTask.ProjectPath">
            <summary>
            Full path to the msbuild project.
            </summary>
        </member>
        <member name="P:NuGet.Build.Tasks.GetRestoreDotnetCliToolsTask.RestoreGraphItems">
            <summary>
            Output items
            </summary>
        </member>
        <member name="P:NuGet.Build.Tasks.GetRestoreDotnetCliToolsTask.ToolFramework">
            <summary>
            Tool runtime framework where this will be executed.
            </summary>
        </member>
        <member name="P:NuGet.Build.Tasks.GetRestoreDotnetCliToolsTask.RestoreSources">
            <summary>
            NuGet sources
            </summary>
        </member>
        <member name="P:NuGet.Build.Tasks.GetRestoreDotnetCliToolsTask.RestoreFallbackFolders">
            <summary>
            NuGet fallback folders
            </summary>
        </member>
        <member name="P:NuGet.Build.Tasks.GetRestoreDotnetCliToolsTask.RestorePackagesPath">
            <summary>
            User packages folder
            </summary>
        </member>
        <member name="P:NuGet.Build.Tasks.GetRestoreDotnetCliToolsTask.RestoreConfigFilePaths">
            <summary>
            Config File Paths used
            </summary>
        </member>
        <member name="P:NuGet.Build.Tasks.GetRestoreFrameworkReferencesTask.ProjectUniqueName">
            <summary>
            Full path to the msbuild project.
            </summary>
        </member>
        <member name="P:NuGet.Build.Tasks.GetRestoreFrameworkReferencesTask.TargetFrameworks">
            <summary>
            Target frameworks to apply this for. If empty this applies to all.
            </summary>
        </member>
        <member name="P:NuGet.Build.Tasks.GetRestoreFrameworkReferencesTask.RestoreGraphItems">
            <summary>
            Output items
            </summary>
        </member>
        <member name="P:NuGet.Build.Tasks.GetRestorePackageDownloadsTask.ProjectUniqueName">
            <summary>
            Full path to the msbuild project.
            </summary>
        </member>
        <member name="P:NuGet.Build.Tasks.GetRestorePackageDownloadsTask.TargetFrameworks">
            <summary>
            Target frameworks to apply this for. If empty this applies to all.
            </summary>
        </member>
        <member name="P:NuGet.Build.Tasks.GetRestorePackageDownloadsTask.RestoreGraphItems">
            <summary>
            Output items
            </summary>
        </member>
        <member name="P:NuGet.Build.Tasks.GetRestorePackageReferencesTask.ProjectUniqueName">
            <summary>
            Full path to the msbuild project.
            </summary>
        </member>
        <member name="P:NuGet.Build.Tasks.GetRestorePackageReferencesTask.TargetFrameworks">
            <summary>
            Target frameworks to apply this for. If empty this applies to all.
            </summary>
        </member>
        <member name="P:NuGet.Build.Tasks.GetRestorePackageReferencesTask.RestoreGraphItems">
            <summary>
            Output items
            </summary>
        </member>
        <member name="P:NuGet.Build.Tasks.GetRestoreProjectJsonPathTask.ProjectPath">
            <summary>
            Full path to the msbuild project.
            </summary>
        </member>
        <member name="P:NuGet.Build.Tasks.GetRestoreProjectJsonPathTask.ProjectJsonPath">
            <summary>
            Output path to project.json if it exists.
            </summary>
        </member>
        <member name="P:NuGet.Build.Tasks.GetRestoreProjectReferencesTask.ProjectUniqueName">
            <summary>
            Full path to the msbuild project.
            </summary>
        </member>
        <member name="P:NuGet.Build.Tasks.GetRestoreProjectReferencesTask.ParentProjectPath">
            <summary>
            Root project path used for resolving the absolute path.
            </summary>
        </member>
        <member name="P:NuGet.Build.Tasks.GetRestoreProjectReferencesTask.TargetFrameworks">
            <summary>
            Target frameworks to apply this for. If empty this applies to all.
            </summary>
        </member>
        <member name="P:NuGet.Build.Tasks.GetRestoreProjectReferencesTask.RestoreGraphItems">
            <summary>
            Output items
            </summary>
        </member>
        <member name="T:NuGet.Build.Tasks.GetRestoreSettingsTask">
            <summary>
            Get all the settings to be used for project restore.
            </summary>
        </member>
        <member name="P:NuGet.Build.Tasks.GetRestoreSettingsTask.RestoreRootConfigDirectory">
            <summary>
            The root directory from which to talk to find the config files. Used by the CLI in Dotnet Tool install
            </summary>
        </member>
        <member name="P:NuGet.Build.Tasks.GetRestoreSettingsTask.RestoreSettingsPerFramework">
            <summary>
            Settings read with TargetFramework set
            </summary>
        </member>
        <member name="P:NuGet.Build.Tasks.GetRestoreSettingsTask.RestorePackagesPathOverride">
            <summary>
            Command line value of RestorePackagesPath
            </summary>
        </member>
        <member name="P:NuGet.Build.Tasks.GetRestoreSettingsTask.RestoreSourcesOverride">
            <summary>
            Command line value of RestoreSources
            </summary>
        </member>
        <member name="P:NuGet.Build.Tasks.GetRestoreSettingsTask.RestoreFallbackFoldersOverride">
            <summary>
            Command line value of RestoreFallbackFolders
            </summary>
        </member>
        <member name="P:NuGet.Build.Tasks.GetRestoreSettingsTask.MSBuildStartupDirectory">
            <summary>
            Original working directory
            </summary>
        </member>
        <member name="P:NuGet.Build.Tasks.GetRestoreSettingsTask.OutputSources">
            <summary>
            Output items
            </summary>
        </member>
        <member name="M:NuGet.Build.Tasks.GetRestoreSettingsTask.GetPropertyValues(Microsoft.Build.Framework.ITaskItem[],System.String)">
            <summary>
            Read a metadata property from each item and split the values.
            Nulls and empty values are ignored.
            </summary>
        </member>
        <member name="M:NuGet.Build.Tasks.GetRestoreSettingsTask.GetGlobalAbsolutePath(System.String)">
            <summary>
            Resolve a path against MSBuildStartupDirectory
            </summary>
        </member>
        <member name="T:NuGet.Build.Tasks.GetRestoreSolutionProjectsTask">
            <summary>
            Convert .metaproj paths to project paths.
            </summary>
        </member>
        <member name="P:NuGet.Build.Tasks.GetRestoreSolutionProjectsTask.ProjectReferences">
            <summary>
            Solution project references.
            </summary>
        </member>
        <member name="P:NuGet.Build.Tasks.GetRestoreSolutionProjectsTask.SolutionFilePath">
            <summary>
            Root path used for resolving the absolute project paths.
            </summary>
        </member>
        <member name="P:NuGet.Build.Tasks.GetRestoreSolutionProjectsTask.OutputProjectReferences">
            <summary>
            Output items
            </summary>
        </member>
        <member name="T:NuGet.Build.Tasks.RestoreSettingsUtils">
            <summary>
            This class contains the logic for the settings using during restore. 
            It contains methods with the settings precedence logic as well.
            </summary>
        </member>
        <member name="M:NuGet.Build.Tasks.RestoreSettingsUtils.GetValue``1(System.Func{``0}[])">
            <summary>
            Return the value from the first function that returns non-null.
            </summary>
        </member>
        <member name="T:NuGet.Build.Tasks.RestoreTask">
            <summary>
            .NET Core compatible restore task for PackageReference and UWP project.json projects.
            </summary>
        </member>
        <member name="P:NuGet.Build.Tasks.RestoreTask.RestoreGraphItems">
            <summary>
            DG file entries
            </summary>
        </member>
        <member name="P:NuGet.Build.Tasks.RestoreTask.RestoreDisableParallel">
            <summary>
            Disable parallel project restores and downloads
            </summary>
        </member>
        <member name="P:NuGet.Build.Tasks.RestoreTask.RestoreNoCache">
            <summary>
            Disable the web cache
            </summary>
        </member>
        <member name="P:NuGet.Build.Tasks.RestoreTask.RestoreIgnoreFailedSources">
            <summary>
            Ignore errors from package sources
            </summary>
        </member>
        <member name="P:NuGet.Build.Tasks.RestoreTask.RestoreRecursive">
            <summary>
            Restore all projects.
            </summary>
        </member>
        <member name="P:NuGet.Build.Tasks.RestoreTask.RestoreForce">
            <summary>
            Force restore, skip no op
            </summary>
        </member>
        <member name="P:NuGet.Build.Tasks.RestoreTask.HideWarningsAndErrors">
            <summary>
            Do not display Errors and Warnings to the user. 
            The Warnings and Errors are written into the assets file and will be read by an sdk target.
            </summary>
        </member>
        <member name="P:NuGet.Build.Tasks.RestoreTask.Interactive">
            <summary>
            Set this property if you want to get an interactive restore
            </summary>
        </member>
        <member name="P:NuGet.Build.Tasks.RestoreTask.RestoreForceEvaluate">
            <summary>
            Reevaluate resotre graph even with a lock file, skip no op as well.
            </summary>
        </member>
        <member name="T:NuGet.Build.Tasks.Strings">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:NuGet.Build.Tasks.Strings.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:NuGet.Build.Tasks.Strings.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:NuGet.Build.Tasks.Strings.ImportsFallbackWarning">
            <summary>
              Looks up a localized string similar to ProjectReference '{0}' was resolved using '{1}' instead of the project target framework '{2}'. This project may not be fully compatible with your project..
            </summary>
        </member>
        <member name="P:NuGet.Build.Tasks.Strings.NoCompatibleTargetFramework">
            <summary>
              Looks up a localized string similar to Project '{0}' targets '{2}'. It cannot be referenced by a project that targets '{1}'..
            </summary>
        </member>
        <member name="P:NuGet.Build.Tasks.Strings.NoProjectsProvidedToTask">
            <summary>
              Looks up a localized string similar to Unable to find a project to restore!.
            </summary>
        </member>
        <member name="P:NuGet.Build.Tasks.Strings.NoProjectsToRestore">
            <summary>
              Looks up a localized string similar to Nothing to do. None of the projects specified contain packages to restore..
            </summary>
        </member>
        <member name="P:NuGet.Build.Tasks.Strings.RestoreCanceled">
            <summary>
              Looks up a localized string similar to Restore canceled!.
            </summary>
        </member>
        <member name="P:NuGet.Build.Tasks.Strings.UnsupportedFallbackFramework">
            <summary>
              Looks up a localized string similar to The project fallback framework '{0}' is not a supported target framework..
            </summary>
        </member>
        <member name="P:NuGet.Build.Tasks.Strings.UnsupportedTargetFramework">
            <summary>
              Looks up a localized string similar to The project target framework '{0}' is not a supported target framework..
            </summary>
        </member>
        <member name="P:NuGet.Build.Tasks.WarnForInvalidProjectsTask.AllProjects">
            <summary>
            All known projects.
            </summary>
        </member>
        <member name="P:NuGet.Build.Tasks.WarnForInvalidProjectsTask.ValidProjects">
            <summary>
            All valid projects for restore.
            </summary>
        </member>
        <member name="T:NuGet.Build.Tasks.WriteRestoreGraphTask">
            <summary>
            Generate dg file output.
            </summary>
        </member>
        <member name="P:NuGet.Build.Tasks.WriteRestoreGraphTask.RestoreGraphItems">
            <summary>
            DG file entries
            </summary>
        </member>
        <member name="P:NuGet.Build.Tasks.WriteRestoreGraphTask.RestoreRecursive">
            <summary>
            Restore all projects.
            </summary>
        </member>
        <member name="M:NuGet.Build.Tasks.WriteRestoreGraphTask.GetNullForEmpty(System.String)">
            <summary>
            Convert empty strings to null
            </summary>
        </member>
        <member name="T:NuGet.Build.MSBuildLogger">
            <summary>
            TaskLoggingHelper -&gt; ILogger
            </summary>
        </member>
        <member name="M:NuGet.Build.MSBuildLogger.LogForNonMono(NuGet.Common.INuGetLogMessage)">
            <summary>
            Log using with metadata for non mono platforms.
            </summary>
        </member>
        <member name="M:NuGet.Build.MSBuildLogger.LogForMono(NuGet.Common.ILogMessage)">
            <summary>
            Log using basic methods to avoid missing methods on mono.
            </summary>
        </member>
        <member name="T:NuGet.Build.MSBuildTaskItem">
            <summary>
            TaskItem wrapper
            </summary>
        </member>
        <member name="M:NuGet.Shared.EqualityUtility.OrderedEquals``2(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1},System.Collections.Generic.IEqualityComparer{``0})">
            <summary>
            Compares two enumberables for equality, ordered according to the specified key and optional comparer. Handles null values gracefully.
            </summary>
            <typeparam name="TSource">The type of the list</typeparam>
            <typeparam name="TKey">The type of the sorting key</typeparam>
            <param name="self">This list</param>
            <param name="other">The other list</param>
            <param name="keySelector">The function to extract the key from each item in the list</param>
            <param name="orderComparer">An optional comparer for comparing keys</param>
            <param name="sequenceComparer">An optional comparer for sequences</param>
        </member>
        <member name="M:NuGet.Shared.EqualityUtility.SequenceEqualWithNullCheck``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})">
            <summary>
            Compares two sequence for equality, allowing either sequence to be null. If one is null, both have to be
            null for equality.
            </summary>
        </member>
        <member name="M:NuGet.Shared.EqualityUtility.SetEqualsWithNullCheck``1(System.Collections.Generic.ISet{``0},System.Collections.Generic.ISet{``0},System.Collections.Generic.IEqualityComparer{``0})">
            <summary>
            Compares two sets for equality, allowing either sequence to be null.
            If one is null, both have to be null for equality.
            </summary>
        </member>
        <member name="T:NuGet.Shared.HashCodeCombiner">
            <summary>
            Hash code creator, based on the original NuGet hash code combiner/ASP hash code combiner implementations
            </summary>
        </member>
        <member name="M:NuGet.Shared.HashCodeCombiner.GetHashCode``2(``0,``1)">
            <summary>
            Create a unique hash code for the given set of items
            </summary>
        </member>
        <member name="M:NuGet.Shared.HashCodeCombiner.GetHashCode``3(``0,``1,``2)">
            <summary>
            Create a unique hash code for the given set of items
            </summary>
        </member>
        <member name="M:NuGet.Shared.Extensions.AsList``1(System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Return the enumerable as a List of T, copying if required. Optimized for common case where it is an List of T.
            Avoid mutating the return value.
            </summary>
            <remarks>https://aspnetwebstack.codeplex.com/SourceControl/latest#src/Common/CollectionExtensions.cs</remarks>
        </member>
        <member name="M:NuGet.Shared.Extensions.AsHashSet``1(System.Collections.Generic.ISet{``0},System.Collections.Generic.IEqualityComparer{``0})">
            <summary>
            Return the ISet as a HashSet of T, copying if required. Optimized for common case where it is a HashSet of T.
            Avoid mutating the return value.
            </summary>
        </member>
    </members>
<Signature xmlns="http://www.w3.org/2000/09/xmldsig#"><SignedInfo><CanonicalizationMethod Algorithm="http://www.w3.org/TR/2001/REC-xml-c14n-20010315" /><SignatureMethod Algorithm="http://www.w3.org/2000/09/xmldsig#rsa-sha1" /><Reference URI=""><Transforms><Transform Algorithm="http://www.w3.org/2000/09/xmldsig#enveloped-signature" /><Transform Algorithm="http://www.w3.org/TR/2001/REC-xml-c14n-20010315" /></Transforms><DigestMethod Algorithm="http://www.w3.org/2000/09/xmldsig#sha1" /><DigestValue>ROnVk8GcTGodc//nrSGRkzh1QL4=</DigestValue></Reference></SignedInfo><SignatureValue>gCaF10vQLu8pxJsUkvyyr/axYqdvxoDj0Swb9Dn8MBBM18X4cremw16KrhB4l+TGfyVLBL/44DOF4R9CJmjcUCHPz70LhtzHF13UvV9l0mGVY9kEHijcmoNUKzyqAxAfRoZr/DuzsU+r3WqwcTuhMSIa3AEP2YcNFOV+f65l2eY1G4AcTRANUNM3UsGmBAuWclgJYczzfJhhA927t7jKNNRNiUrFcPWn7xY+8HPf5fvJ90BGnCOrOp0DV9npusyJAIea5cP4Nh33gJmBxj+W6y8LrChVx5s2YZd/ojO26MQcLVnl5jvT9y7EmTGWZwrg119XZylW1lWj39RGqTpg/Q==</SignatureValue><KeyInfo><KeyValue><RSAKeyValue><Modulus>m1K+Tyy0HVPLPV0jHraDo5/A5UrgV7PC+C3WipFfzBLODN0Ct0Z49Gub3ufLICGP1D4OJZRyOnhjZi61X+Hbl/2IjqiIl1VMHR4+qWlJLRNj+X7DparTv3/CBzkhMGY2lZdvp96rpRL2heloKGkmmxqet6/sU3hvw8wxMIf29zYrMEBZSEaAUajNDIDd40qeLXRV7OanRHrVE770wiR9DP0zzeYjX5rN1CltAtUyWmonz7DJAYuUr+UMi3offSITg4byWkvThGNXGmtJeDpU6Y/hhcblP5Yl5175yMvHofLyGw0iW7kv/Izp2yjEVRe26PTXes/9nNOP7ul2KoKMoQ==</Modulus><Exponent>AQAB</Exponent></RSAKeyValue></KeyValue><X509Data><X509Certificate>MIIE2zCCA8OgAwIBAgITMwAAAbHd7bpU6WW4XwABAAABsTANBgkqhkiG9w0BAQUFADB5MQswCQYDVQQGEwJVUzETMBEGA1UECBMKV2FzaGluZ3RvbjEQMA4GA1UEBxMHUmVkbW9uZDEeMBwGA1UEChMVTWljcm9zb2Z0IENvcnBvcmF0aW9uMSMwIQYDVQQDExpNaWNyb3NvZnQgQ29kZSBTaWduaW5nIFBDQTAeFw0xODA3MTIyMDExMTlaFw0xOTA3MjYyMDExMTlaMHQxCzAJBgNVBAYTAlVTMRMwEQYDVQQIEwpXYXNoaW5ndG9uMRAwDgYDVQQHEwdSZWRtb25kMR4wHAYDVQQKExVNaWNyb3NvZnQgQ29ycG9yYXRpb24xHjAcBgNVBAMTFU1pY3Jvc29mdCBDb3Jwb3JhdGlvbjCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAJtSvk8stB1Tyz1dIx62g6OfwOVK4Fezwvgt1oqRX8wSzgzdArdGePRrm97nyyAhj9Q+DiWUcjp4Y2YutV/h25f9iI6oiJdVTB0ePqlpSS0TY/l+w6Wq079/wgc5ITBmNpWXb6feq6US9oXpaChpJpsanrev7FN4b8PMMTCH9vc2KzBAWUhGgFGozQyA3eNKni10Vezmp0R61RO+9MIkfQz9M83mI1+azdQpbQLVMlpqJ8+wyQGLlK/lDIt6H30iE4OG8lpL04RjVxprSXg6VOmP4YXG5T+WJede+cjLx6Hy8hsNIlu5L/yM6dsoxFUXtuj013rP/ZzTj+7pdiqCjKECAwEAAaOCAV8wggFbMBMGA1UdJQQMMAoGCCsGAQUFBwMDMB0GA1UdDgQWBBREE7QCnXc+kFVx9eQcf6wXFM8+czBQBgNVHREESTBHpEUwQzEpMCcGA1UECxMgTWljcm9zb2Z0IE9wZXJhdGlvbnMgUHVlcnRvIFJpY28xFjAUBgNVBAUTDTIyOTgwMys0Mzc5NTAwHwYDVR0jBBgwFoAUyxHoytK0FlgByTcuMxYWuUyaCh8wVgYDVR0fBE8wTTBLoEmgR4ZFaHR0cDovL2NybC5taWNyb3NvZnQuY29tL3BraS9jcmwvcHJvZHVjdHMvTWljQ29kU2lnUENBXzA4LTMxLTIwMTAuY3JsMFoGCCsGAQUFBwEBBE4wTDBKBggrBgEFBQcwAoY+aHR0cDovL3d3dy5taWNyb3NvZnQuY29tL3BraS9jZXJ0cy9NaWNDb2RTaWdQQ0FfMDgtMzEtMjAxMC5jcnQwDQYJKoZIhvcNAQEFBQADggEBAIOp8qYzxaF7HNJegK7spKbD6ShdVyUjjd0lCWlw6E1pFi+UuwXZm4DsWdBoZBuDNKjcz2ONnWt2APV7r0J0B8X8kcDirEUzll2x/fqORrJJ4kMGGZiFcXjTnunblRZBMTRwLEOWogJ3qS89YUpjWfGXfdFSlWCFqLwbRQc/2cGP91D1uX4IieRCxFiOQcCVOEkf1x34ME8pLztHWZI37pch7RdmkBwvLW1r/wt15aoS3fqvxBG04CEyWr8FzkX5P41Wrs5R1syufQQZMBLyv59IJpwOAA0oraXeRC3M1If/lEmVVwxNNJwjCt3DjTIJ9L01KMXe0Ig/qRIToTBwoBE=</X509Certificate><X509Certificate>MIIFvDCCA6SgAwIBAgIKYTMmGgAAAAAAMTANBgkqhkiG9w0BAQUFADBfMRMwEQYKCZImiZPyLGQBGRYDY29tMRkwFwYKCZImiZPyLGQBGRYJbWljcm9zb2Z0MS0wKwYDVQQDEyRNaWNyb3NvZnQgUm9vdCBDZXJ0aWZpY2F0ZSBBdXRob3JpdHkwHhcNMTAwODMxMjIxOTMyWhcNMjAwODMxMjIyOTMyWjB5MQswCQYDVQQGEwJVUzETMBEGA1UECBMKV2FzaGluZ3RvbjEQMA4GA1UEBxMHUmVkbW9uZDEeMBwGA1UEChMVTWljcm9zb2Z0IENvcnBvcmF0aW9uMSMwIQYDVQQDExpNaWNyb3NvZnQgQ29kZSBTaWduaW5nIFBDQTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBALJyWVwZMGS/HZpgICBCmXZTbD4b1m/My/Hqa/6XFhDg3zp0gxq3L6Ay7P/ewkJOI9VyANs1VwqJyq4gSfTwaKxNS42lvXlLcZtHB9r9Jd+ddYjPqnNEf9eB2/O98jakyVxF3K+tPeAoaJcap6Vyc1bxF5Tk/TWUcqDWdl8ed0WDhTgW0HNbBbpnUo2lsmkv2hkL/pJ0KeJ2L1TdFDBZ+NKNYv3LyV9GMVC5JxPkQDDPcikQKCLHN049oDI9kM2hOAaFXE5WgigqBTK3S9dPY+fSLWLxRT3nrAgA9kahntFbjCZT6HqqSvJGzzc8OJ60d1ylF56NyxGPVjzBrAlfA9MCAwEAAaOCAV4wggFaMA8GA1UdEwEB/wQFMAMBAf8wHQYDVR0OBBYEFMsR6MrStBZYAck3LjMWFrlMmgofMAsGA1UdDwQEAwIBhjASBgkrBgEEAYI3FQEEBQIDAQABMCMGCSsGAQQBgjcVAgQWBBT90TFO0yaKleGYYDuoMW+mPLzYLTAZBgkrBgEEAYI3FAIEDB4KAFMAdQBiAEMAQTAfBgNVHSMEGDAWgBQOrIJgQFYnl+UlE/wq4QpTlVnkpDBQBgNVHR8ESTBHMEWgQ6BBhj9odHRwOi8vY3JsLm1pY3Jvc29mdC5jb20vcGtpL2NybC9wcm9kdWN0cy9taWNyb3NvZnRyb290Y2VydC5jcmwwVAYIKwYBBQUHAQEESDBGMEQGCCsGAQUFBzAChjhodHRwOi8vd3d3Lm1pY3Jvc29mdC5jb20vcGtpL2NlcnRzL01pY3Jvc29mdFJvb3RDZXJ0LmNydDANBgkqhkiG9w0BAQUFAAOCAgEAWTk+fyZGr+tvQLEytWrrDi9uqEn361917Uw7LddDrQv+y+ktMaMjzHxQmIAhXaw9L0y6oqhWnONwu7i0+Hm1SXL3PupBf8rhDBdpy6WcIC36C1DEVs0t40rSvHDnqA2iA6VW4LiKS1fylUKc8fPv7uOGHzQ8uFaa8FMjhSqkghyT4pQHHfLiTviMocroE6WRTsgb0o9ylSpxbZsa+BzwU9ZnzCL/XB3Nooy9J7J5Y1ZEolHN+emjWFbdmwJFRC9f9Nqu1IIybvyklRPk62nnqaIsvsgrEA5ljpnb9aL6EiYJZTiU8XofSrvR4Vbo0HiWGFzJNRZf3ZMdSY4tvq00RBzuEBUaAF3dNVshzpjHCe6FDoxPbQ4TTj18KUicctHzbMrB7HCjV5JXfZSNoBtIA1r3z6NnCnSlNu0tLxfI5nI3EvRvsTxngvlSso0zFmUeDordEN5k9G/ORtTTF+l5xAS00/ss3x+KnqwK+xMnQK3k+eGpf0a7B2BHZWBATrBC7E7ts3Z52Ao0CW0cgDEf4g5U3eWh++VHEK1kmP9QFi58vwUheuKVQSdpw5OPlcmN2Jshrg1cnPCiroZogwxqLbt2awAdlq3yFnv2FoMkuYjPaqhHMS+a3ONxPdcAfmJH0c6IybgY+g5yjcGjPa8CQGr/aZuW4hCoELQ3UAjWwz0=</X509Certificate><X509Certificate>MIIFmTCCA4GgAwIBAgIQea0WoUqgpa1Mc1j0BxMuZTANBgkqhkiG9w0BAQUFADBfMRMwEQYKCZImiZPyLGQBGRYDY29tMRkwFwYKCZImiZPyLGQBGRYJbWljcm9zb2Z0MS0wKwYDVQQDEyRNaWNyb3NvZnQgUm9vdCBDZXJ0aWZpY2F0ZSBBdXRob3JpdHkwHhcNMDEwNTA5MjMxOTIyWhcNMjEwNTA5MjMyODEzWjBfMRMwEQYKCZImiZPyLGQBGRYDY29tMRkwFwYKCZImiZPyLGQBGRYJbWljcm9zb2Z0MS0wKwYDVQQDEyRNaWNyb3NvZnQgUm9vdCBDZXJ0aWZpY2F0ZSBBdXRob3JpdHkwggIiMA0GCSqGSIb3DQEBAQUAA4ICDwAwggIKAoICAQDzXfqAZ9Rap6kMLJAg0DUIPHWEzbcHiZyJ2t7Ow2D6kWhanpRxKRh2fMLgyCV2lA5Y+gQ0Nubfr/eAuulYCyuT5Z0F43cikfc0ZDwikR1e4QmQvBT+/HVYGeF5tweSo66IWQjYnwfKA1j8aCltMtfSqMtL/OELSDJP5uu4rU/kXG8TlJnbldV126gat5SRtHdb9UgMj2p5fRRwBH1tr5D12nDYR7e/my9s5wW34RFgrHmRFHzF1qbk4X7Vw37lktI8ALU2gt554W3ztW74nzPJy1J9c5g224uha6KVl5uj3sJNJv8GlmclBsjnrOTuEjOVMZnINQhONMp5U9W1vmMyWUA2wKVOBE0921sHM+RYv+8/U2TYQlk1V/0PRXwkBE2e1jh0EZcikM5oRHSSb9VLb7CG48c2QqDQ/MHAWvmjYbkwR3GWChawkcBCle8Qfyhq4yofseTNAz93cQTHIPxJDx1FiKTXy36IrY4t7EXbxFEEySr87IaemhGXW97OU4jm4rf9rJXCKEDb7wSQ34EzOdmyRaUjhwalVYkxuwYtYA5BGH0fLrWXyxHrFdUkpZTvFRSJ/Utz+jJb/NEzAPlZYnAHMuouq0Ate8rdIWcbMJmPFqojqEHRsG4RmzbE3kB0nOFYZcFgHnpbOMiPuwQmfNQWQOW2a2yqhv0Av87BNQIDAQABo1EwTzALBgNVHQ8EBAMCAcYwDwYDVR0TAQH/BAUwAwEB/zAdBgNVHQ4EFgQUDqyCYEBWJ5flJRP8KuEKU5VZ5KQwEAYJKwYBBAGCNxUBBAMCAQAwDQYJKoZIhvcNAQEFBQADggIBAMURTQM6YN1dUhF3j7K7NsiyBb+0t6jYIJ1cEwO2HCL6BhM1tshj1JpHbyZX0lXxBLEmX9apUGigvNK4bszD6azfGc14rFl0rGY0NsQbPmw4TDMOMBINoyb+UVMA/69aToQNDx/kbQUuToVLjWwzb1TSZKu/UK99ejmgN+1jAw/8EwbOFjbUVDuVG1FiOuVNF9QFOZKaJ6hbqr3su77jIIlgcWxWs6UT0G0OI36VA+1oPfLYY7hrTbboMLXhypRL96KqXZkwsj2nwlFsKCABJCcrSwC3nRFrcL6yEIK8DJto0I07JIeqmShynTNfWZC99d6TnjpiWjQ54ohVHbkGsMGJay3XacMZEjaE0Mmg2v8vaXiy5Xra69cMwPe9Yxe4ORM4ojZbe/KFVmodZGLBOOKqv1FmopT1EpxmIhBr8rcwki3yKfA9OxRDaKLxnCk3y844ICVtfGfzfiQSJAMIgUfspZ6X9RjXz7vV73aW7/3O21adlaBC+ZdY4dcxItNfWeY+biIA6kOEtiXb2fMIVmjAZGsdfOy2k6JiV24u2OdYj8QxSSbd3ik1h/UwcXBbFDxpvYkSfesuo/7Yf56CWlIKK8FDK9kwiJ/IEPuJjeahhXUzfmye23MTZGJppS99ypZtn/gETTCSPW4hFCHJPeDD/YprnUr90aGdmUN3P7Da</X509Certificate></X509Data></KeyInfo><Object Id="ts-countersig"><X509Data><X509Certificate>MIIE2jCCA8KgAwIBAgITMwAAAQdjpRkqESfl2QAAAAABBzANBgkqhkiG9w0BAQUFADB3MQswCQYDVQQGEwJVUzETMBEGA1UECBMKV2FzaGluZ3RvbjEQMA4GA1UEBxMHUmVkbW9uZDEeMBwGA1UEChMVTWljcm9zb2Z0IENvcnBvcmF0aW9uMSEwHwYDVQQDExhNaWNyb3NvZnQgVGltZS1TdGFtcCBQQ0EwHhcNMTgwODIzMjAyMDI2WhcNMTkxMTIzMjAyMDI2WjCByjELMAkGA1UEBhMCVVMxCzAJBgNVBAgTAldBMRAwDgYDVQQHEwdSZWRtb25kMR4wHAYDVQQKExVNaWNyb3NvZnQgQ29ycG9yYXRpb24xLTArBgNVBAsTJE1pY3Jvc29mdCBJcmVsYW5kIE9wZXJhdGlvbnMgTGltaXRlZDEmMCQGA1UECxMdVGhhbGVzIFRTUyBFU046QUI0MS00QjI3LUYwMjYxJTAjBgNVBAMTHE1pY3Jvc29mdCBUaW1lLVN0YW1wIHNlcnZpY2UwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQCx4jFPYPLORcJ9TE+rvtOh7IQ4/db/zAzVBmzhKIcvrg0lfI61buwA3740F66FFMqxZgMedFov74GNlZ/7y6eIiy1pVdQown+yA+EnB8lEVvKEH0J1xReHlQAJr11l/zzjHux30VkA/BBOLfe9uZ+CLAP8F1Wt/aZAkTuxC4rdYSJtWGcTyiSyR50fPLtEZqyihPi7g/dJB7R4BCCL/pO7trsI/AA98LSHcOydoGmO852fKgtAEV0NbZyVphn+c/5H3qPHcifpB/D47n43wUXkjgrqLlgqdm1Op8fuTNlrHoRV1NBfB8v/zK7RrYP4oVEztN29akvlxUzl062e/oGLAgMBAAGjggEJMIIBBTAdBgNVHQ4EFgQUj3Lnp1uB5EjhiEY9QThjCuJYBoowHwYDVR0jBBgwFoAUIzT42VJGcArtQPt2+7MrsMM1sw8wVAYDVR0fBE0wSzBJoEegRYZDaHR0cDovL2NybC5taWNyb3NvZnQuY29tL3BraS9jcmwvcHJvZHVjdHMvTWljcm9zb2Z0VGltZVN0YW1wUENBLmNybDBYBggrBgEFBQcBAQRMMEowSAYIKwYBBQUHMAKGPGh0dHA6Ly93d3cubWljcm9zb2Z0LmNvbS9wa2kvY2VydHMvTWljcm9zb2Z0VGltZVN0YW1wUENBLmNydDATBgNVHSUEDDAKBggrBgEFBQcDCDANBgkqhkiG9w0BAQUFAAOCAQEAVTCQ9vD8tkOVyPlUNa4Y3EfCkpzjliJMKA0uaRy2igxvK4KWoIUTMi4l+fgiVU6ugnn9/meg+COBw2M6XmX/+2j57RQgYXcTK5McXlszt3tzvSp2age1sOKPNtfzdxzUgDl1Sh4a8KZf82nJ5mbWe41sVDIHSCSUftMZG+3a8w98HIp7J/upmmpD+K4n/uaYB+UmIWVusJkD9AfvIrJAjXWCIYxbIjKnzOMy5JMCoZYGY5npi7u99/Ku/WvsJWtjRC2UxZvMSA5B2YEvxvFpKv9qCzbmv/C9fbyhEFO2aLoKpwx97B7PxC50Y9dVtPg6TRWOEeGEopv24YLwsBIGlA==</X509Certificate><X509Certificate>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</X509Certificate></X509Data><CounterSignature ts-format="cms-timestamp-message" xmlns="http://schemas.microsoft.com/xmldsig/timestamp/2003">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</CounterSignature></Object></Signature></doc>
